<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2024 来啦！</title>
      <link href="/archives/495/"/>
      <url>/archives/495/</url>
      
        <content type="html"><![CDATA[<p>2024 了喵？2024 了喵！2024 了喵！  </p><span id="more"></span><p><del>唉，咱是废物，我 new post 我都不知道要写啥，看<a href="https://blog.chyk.ink/2023/12/23/my-2023-summary/">其他大佬写的年终总结</a>感觉好厉害，那就 <code>rm -rf brain</code> 然后瞎√8写吧</del>  </p><p><strong>现在是 2024 的第一天，想先吐槽一下，现在能明显感觉到互联网性能下降，这个时候上网的人好多的样子，那就写写咱 2023 最后一天做了点什么吧（</strong>  </p><h2 id="Hexo-更新"><a href="#Hexo-更新" class="headerlink" title="Hexo 更新"></a>Hexo 更新</h2><p>该折腾的折腾了一下，更新 Hexo 大版本到 7：  </p><p><img src="https://cos.mbrjun.cn/IMGS/2024/01/01/06ab9b37-fd79-44fb-bec3-aeb51541973f.webp" alt="Upgrade Hexo 7"></p><h2 id="Home-Assistant-更新"><a href="#Home-Assistant-更新" class="headerlink" title="Home Assistant 更新"></a>Home Assistant 更新</h2><p>本来是想更新的，但是收到了新年的<del>第一份</del>礼物（不是  </p><p><img src="https://cos.mbrjun.cn/IMGS/2024/01/01/623bbf53-444d-4627-8805-4db650f9d9e7.webp" alt="High Packet Loss"></p><p>嗯，那就修好了再搞  </p><hr><p><strong>再看看整个 2023 做了什么喵</strong>  </p><h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2><p><img src="https://cos.mbrjun.cn/IMGS/2024/01/01/5383b7d4-9579-4454-8d7f-d3fea2fab846.webp" alt="GitHub Commits 2023"></p><p>瓷砖贴的还可以？或者说有点不太均匀  </p><p>要不要立一个 1000 commits in 2024 的目标呢？  </p><h2 id="Network"><a href="#Network" class="headerlink" title="Network"></a>Network</h2><p>是整的 <code>1.00 PB</code> w   </p><p><img src="https://cos.mbrjun.cn/IMGS/2024/01/01/dbe31304-a6d0-41ed-bf95-de875cc630c0.webp" alt="1PB traffic in 2023"></p><h2 id="使用的新语言"><a href="#使用的新语言" class="headerlink" title="使用的新语言"></a>使用的新语言</h2><p>嗯，好像只有 TypeScript 喵？  </p><h2 id="乌蒙地插"><a href="#乌蒙地插" class="headerlink" title="乌蒙地插"></a>乌蒙地插</h2><p>街机原神，据说入坑可能导致 21 号染色体数量增加  </p><p>4 月入坑（大概），国服打了 32 PC，不过开学就没时间打了，据说现在经常断网，我也没见过  </p><hr><p><strong>还能再写点什么吗（</strong>  </p><h2 id="高中生活第一集"><a href="#高中生活第一集" class="headerlink" title="高中生活第一集"></a>高中生活第一集</h2><p>基本没问题：  </p><p>每天早晨 6 点起床，95% 的时候都能准时到学校（7:30 之前到），但是下暴雪的那天（2023-12-14，天津天气为暴风雪），也就是“北京地铁发生追尾事故导致 102 人骨折”的那天，交通状况十分差，从出校门到家就用了 130 分钟，路面积雪和道路结冰导致自行车和电动车不可使用。至于打车？这个鬼天气几个小时都打不到的，那就要走到地铁站（不到两公里，用了 30 分钟），坐地铁，然后再走回家（用了一个小时）  </p><p><img src="https://cos.mbrjun.cn/IMGS/2024/01/01/c1976387-4414-428b-9e88-f473c40d9fe7.webp" alt="地铁大学城站，2023-12-14 晚"></p><p>感觉管的不算太严，尤其是初中部，中午完全没有老师管，以至于出现一整个班都在玩手机的情况（甚至有人带了平板），还有人在智能白板打游戏（是什么呢？乌蒙地插）  </p><p>我写这些东西，不说具体是谁在哪，应该不会有人找到我让我删除内容吧（  </p><p>和初中部比起来，高中部确实安静不少，不过我这个性格，一个学期要过去了，班里认识的人还不到 10 个…  </p><h3 id="语文"><a href="#语文" class="headerlink" title="语文"></a>语文</h3><p>相对摆烂的状态？感觉没啥具体的目标欸，就是在背课文  </p><h3 id="数学"><a href="#数学" class="headerlink" title="数学"></a>数学</h3><p>还是有点吃力（函数后面），初中数学就不好，现在的目标是能及格  </p><h3 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h3><p>英语老师是班主任，感觉还是有点可怕的  </p><h3 id="物理"><a href="#物理" class="headerlink" title="物理"></a>物理</h3><p>之前连续发烧了一周，感觉理科落下的内容好难跟上，成绩一下子就下去了，变成废物了  </p><p>对了，我们物理老师对实验很热情，书上的所有实验都去实验室，今年似乎做了四次了  </p><h3 id="化学"><a href="#化学" class="headerlink" title="化学"></a>化学</h3><p>似乎没什么好写的，但是我喜欢化学。  </p><p>另外我们的化学老师会把课外班叫做传销  </p><h3 id="生物"><a href="#生物" class="headerlink" title="生物"></a>生物</h3><p>老师讲课很好，理科中听的最明白的，但是一定要吐槽一下这个进度，期末考试之前就剩三节课了，还有一个单元没讲呢（目前讲到了 ATP）  </p><p>据说是因为现在提倡素质教育，音体美课时增加，老师说之前生物课一周都是四节课，还可以去实验室做书上的实验，但现在一周两节课都讲不完  </p><h3 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h3><p>作业全是抄书，抄了几十页 B5 纸了，没啥好写的，这是一定不选的科</p><h3 id="政治"><a href="#政治" class="headerlink" title="政治"></a>政治</h3><p>背不下来，也没啥好写的，这是一定不选的科  </p><h3 id="地理"><a href="#地理" class="headerlink" title="地理"></a>地理</h3><p>还不错，地理课睡着了课后补都很容易，目前还算简单  </p><hr><p>真不知道写啥了，那就想写的时候再补上吧，还是比较喜欢写技术文章，今年看看应该会有时间写一个“冷启动攻击和硬盘加密的一些破解手段”  </p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2024 </tag>
            
            <tag> 新年 </tag>
            
            <tag> 跨年 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决 Hyper-V 安装 Linux 黑屏</title>
      <link href="/archives/494/"/>
      <url>/archives/494/</url>
      
        <content type="html"><![CDATA[<p>Hyper-V 黑屏或者卡在 Loading initial ramdisk 的可以来参考下  </p><blockquote><p>“你们这是什么间接分支跟踪技术（IBT）啊，你们这是害人不浅啊你们这个技术.<br>麻烦你们，真的太过分了，你们搞这个技术干什么，<br>我游戏本每一种内核，都启动不到那个图形界面呐！你叫我游戏本怎么办啊，它现在连steam都打不开啊好不好<br>你们这是什么技术啊,<br>你们害死我游戏本了.<br>谁是intel 快点出来 再不来我去报警了啊<br>我跟你们说你们这一帮人啊<br>一天到晚乱改，是不是人啊，你们一天到晚乱改”</p></blockquote><span id="more"></span><hr><p>开机，出现 GRUB 界面时按一下 <code>e</code>，然后在 <code>linux</code> 那一行最后加个 <code>ibt=off</code>  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/08/26/9e50bfeb-c21a-473e-a31b-9b1084ae9d3f.png" alt="ibtoff"></p><p>然后按 Ctrl+X 退出，即可正常开机，登录后编辑 <code>/etc/default/grub</code>  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/08/26/77c23130-1144-4adb-9544-fe82bb096584.webp" alt="grub"></p><p>在 <code>GRUB_CMDLINE_LINUX_DEFAULT</code> 引号里加上 <code>ibt=off</code> 保存  </p><p>运行 <code>sudo grub-mkconfig -o /boot/grub/grub.cfg</code> (Debian&#x2F;Ubuntu: <code>sudo update-grub</code>) 即可正常使用  </p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Hyper-V </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为 Hyper-V 上的 Linux VM 配置 3D 加速</title>
      <link href="/archives/493/"/>
      <url>/archives/493/</url>
      
        <content type="html"><![CDATA[<p>WSL2 默认已经使用了 GPU 半虚拟化（GPU-PV）来进行 3D 加速，GPU-PV 是 RemoteFX 的替代品，但是 GPU-PV 在 Hyper-V 虚拟机启用却比较复杂，Windows 的教程已经有人写了，所以分享下 Hyper-V Linux 虚拟机配置 GPU-PV 的教程  </p><span id="more"></span><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul><li>一个 Hyper-V Linux 虚拟机，内核版本是 5.15 或 6.0 或 6.1，内核头已安装</li><li>一个 WSL 2 虚拟机（提取驱动用，提取后可删除，尽量和 Hyper-V 虚拟机使用相同的操作系统）</li><li>Windows 10 最新版本或 Windows 11，x86&#x2F;x86-64 架构（似乎 ARM 做不到，我没测试）</li></ul><h2 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h2><p>我会使用我喜欢的环境进行测试，如果你正在使用相同的环境，应该可以直接照抄我的命令，如果你正在使用其他发行版或其他硬件，操作步骤可能会有差别  </p><ul><li>Windows 11 22H2</li><li>Arch Linux VM，内核：<a href="https://archlinux.org/packages/core/x86_64/linux-lts/">linux-lts</a></li><li>NVIDIA GeForce RTX 4070 Ti</li></ul><h2 id="HV-虚拟机设置"><a href="#HV-虚拟机设置" class="headerlink" title="HV 虚拟机设置"></a>HV 虚拟机设置</h2><h3 id="1-关闭动态内存"><a href="#1-关闭动态内存" class="headerlink" title="1 - 关闭动态内存"></a>1 - 关闭动态内存</h3><p>开启动态内存后，GPU-PV 不能正常工作，所以直接为虚拟机设置足够的内存和 swap 并禁用动态内存，这一步骤应该比较简单<br><img src="https://cos.mbrjun.cn/IMGS/2023/08/26/db886f0e-130b-4ada-bba5-e296e17b66f0.png" alt="Disable dynamic memory hyperv"></p><h3 id="2-添加-GPU-PV-硬件"><a href="#2-添加-GPU-PV-硬件" class="headerlink" title="2 - 添加 GPU-PV 硬件"></a>2 - 添加 GPU-PV 硬件</h3><p>首先确保虚拟机<strong>已关机</strong>，然后按下 Win+X（或右键开始菜单），选择任意一个：  </p><ul><li>命令提示符（管理员）</li><li>PowerShell（管理员）</li><li>终端（管理员）<br><img src="https://cos.mbrjun.cn/IMGS/2023/08/26/810d8ea7-4b55-45d5-adae-cec8c84c70ed.png" alt="terminal admin"></li></ul><p>在弹出的窗口中输入这三行命令，每一行结束后，都请按 Enter 键</p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">pwsh</li></ul></figcaption><div class="tabs-content"><figure class="highlight pwsh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pwsh</span><br><span class="line"><span class="built_in">Set-VM</span> <span class="literal">-VMName</span> &lt;vmname&gt; <span class="literal">-GuestControlledCacheTypes</span> <span class="variable">$true</span> <span class="literal">-LowMemoryMappedIoSpace</span> <span class="number">1</span>GB <span class="literal">-HighMemoryMappedIoSpace</span> <span class="number">32</span>GB</span><br><span class="line"><span class="built_in">Add-VMGpuPartitionAdapter</span> <span class="literal">-VMName</span> &lt;vmname&gt;</span><br></pre></td></tr></tbody></table></figure></div></figure><p>其中 <code>&lt;vmname&gt;</code> 替换为你虚拟机的名称。  </p><p>完成此步骤后，打开虚拟机并执行 <code>lspci</code> 命令，检查 GPU-PV 设备是否已经成功安装  </p><p>如果输出中包含 <code>b98b:00:00.0 3D controller: Microsoft Corporation Basic Render Driver</code>，则说明已正确安装设备  </p><h2 id="驱动安装"><a href="#驱动安装" class="headerlink" title="驱动安装"></a>驱动安装</h2><h3 id="3-WSL-驱动"><a href="#3-WSL-驱动" class="headerlink" title="3 - WSL 驱动"></a>3 - WSL 驱动</h3><p>进入 WSL 的终端，运行命令：  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -cvf - /usr/lib/wsl | zstd -T0 &gt; drivers.tzst</span><br></pre></td></tr></tbody></table></figure></div></figure><p>将 drivers.tzst 拷贝至 Hyper-V 虚拟机根目录（使用任何你喜欢的方式），然后解压：</p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">unzstd drivers.tzst</span><br><span class="line">tar xvf drivers.tar</span><br></pre></td></tr></tbody></table></figure></div></figure><p>然后复制驱动到 &#x2F;lib：</p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> /usr/lib/wsl/lib/* /usr/lib</span><br></pre></td></tr></tbody></table></figure></div></figure><p>如果是 NVIDIA 显卡，还需要额外安装 <code>nvidia-smi</code>：</p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> /usr/lib/wsl/lib/nvidia-smi /usr/bin</span><br></pre></td></tr></tbody></table></figure></div></figure><h3 id="4-安装-DirectX-驱动"><a href="#4-安装-DirectX-驱动" class="headerlink" title="4 - 安装 DirectX 驱动"></a>4 - 安装 DirectX 驱动</h3><p>GPU-PV Linux 使用的 DirectX 驱动名为 <code>dxgkrnl</code>，直接使用 makepkg 进行安装：</p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/MBRjun/dxgkrnl-dkms-lts</span><br><span class="line"><span class="built_in">cd</span> dxgkrnl-dkms-lts</span><br><span class="line">makepkg -si</span><br><span class="line">modprobe dxgkrnl</span><br></pre></td></tr></tbody></table></figure></div></figure><ul><li><strong>仅适用于 6.0 或 6.1 内核，如果是 5.15 内核，可以直接尝试 <code>yay -Sy dxgkrnl-dkms-git</code> 其他内核你需要自己搬<a href="https://github.com/microsoft/WSL2-Linux-Kernel/">驱动</a></strong></li></ul><h3 id="5-安装-mesa"><a href="#5-安装-mesa" class="headerlink" title="5 - 安装 mesa"></a>5 - 安装 mesa</h3><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Sy mesa mesa-utils</span><br></pre></td></tr></tbody></table></figure></div></figure><h3 id="6-检查是否成功安装"><a href="#6-检查是否成功安装" class="headerlink" title="6 - 检查是否成功安装"></a>6 - 检查是否成功安装</h3><p>完成上面五个步骤，<strong>需要先重启系统</strong>  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> /dev/dxg -l</span><br><span class="line">lspci -v</span><br></pre></td></tr></tbody></table></figure></div></figure><p>如果 <code>/dev/dxg</code> 存在，则 DX 驱动已正常安装  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">txt</li></ul></figcaption><div class="tabs-content"><figure class="highlight txt" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">crw-rw-rw- 1 root root 10, 119 Aug 26 18:24 /dev/dxg</span><br><span class="line">b98b:00:00.0 3D controller: Microsoft Corporation Basic Render Driver</span><br><span class="line">Physical Slot: 600853645</span><br><span class="line">Flags: bus master, fast devsel, latency 0, NUMA node 0</span><br><span class="line">Capabilities: [40] Null</span><br><span class="line">Kernel driver in use: dxgkrnl</span><br><span class="line">Kernel modules: dxgkrnl</span><br></pre></td></tr></tbody></table></figure></div></figure><h3 id="7-检查-NVIDIA-显卡信息和-CUDA-信息"><a href="#7-检查-NVIDIA-显卡信息和-CUDA-信息" class="headerlink" title="7 - 检查 NVIDIA 显卡信息和 CUDA 信息"></a>7 - 检查 NVIDIA 显卡信息和 CUDA 信息</h3><p>运行 <code>nvidia-smi</code>：  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/08/26/e59844c1-dba9-43f3-8fa4-af42c07ae3dd.webp" alt="nvidia-smi"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hyper-V </tag>
            
            <tag> Hypervisor </tag>
            
            <tag> GPU-PV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决 AIDA64 报错 Hypervisor is present</title>
      <link href="/archives/492/"/>
      <url>/archives/492/</url>
      
        <content type="html"><![CDATA[<p>解决 AIDA64 测试性能时警告：Hypervisor is present, forcing AIDA64 into a virtualized or sandbox environment. Such enviro nment may affect AIDA64 benchmark results. It is recommended to disable both Hyper-V and Memory Integrity in order to obtain accurate benchmark results.</p><span id="more"></span><p><img src="https://cos.mbrjun.cn/IMGS/2023/08/08/a31d9f0a-1147-4483-80cb-0a239f28943a.png" alt="Hypervisor is present"></p><h2 id="问题出现的原因"><a href="#问题出现的原因" class="headerlink" title="问题出现的原因"></a>问题出现的原因</h2><p>Windows 11 22H2 版本，新安装的 Windows 默认开启了内存完整性，这个功能有助于提高安全性，但是也可能降低性能  </p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>Win+S 输入 gpedit 回车（家庭版需要先<a href="https://zhuanlan.zhihu.com/p/565402268">启用组策略</a>）  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/08/08/c88839d0-1516-4fc8-8448-21d0f3d44ee9.png" alt="gpedit"></p><p>打开 <strong>计算机配置-管理模板-系统-Device Guard</strong>，找到启用基于虚拟化的安全，双击点开  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/08/08/3a24d008-a4b6-48bd-9b14-669511b8ca19.png" alt="VBS"></p><p>点击已禁用，保存  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/08/08/34d6c4b3-f31c-4ea3-8772-4b5680ceecda.png" alt="disable vbs"></p><p>重启电脑即可正常跑分  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/08/08/3e3f163f-0a87-4e98-8ae1-1c8593c6a47c.png" alt="aida64 ram benchmark"></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> AIDA64 </tag>
            
            <tag> Hypervisor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手动修复 Windows UEFI BCD</title>
      <link href="/archives/491/"/>
      <url>/archives/491/</url>
      
        <content type="html"><![CDATA[<p>简单解决使用 DISM 或其他工具释放 Windows 镜像后没有引导项的问题  </p><span id="more"></span><hr><p>看文章前先搞懂这个缩写：</p><ul><li>ESP：EFI system partition，EFI 系统分区，GUID 为 <code>C12A7328-F81F-11D2-BA4B-00A0C93EC93B</code></li></ul><hr><ul><li>首先要确认下你的主板是支持 UEFI 启动的，点进来看这文章的这条应该都符合了  <ul><li>如果你使用 OpenCore <strong>模拟</strong> UEFI，这篇文章有可能不太适合你</li></ul></li><li>然后确认下你要把 BCD 存在哪个 ESP 分区，没有 ESP 分区要创建一个，还要把 BootMgr 补上  <ul><li>这一小段的操作使用任意分区工具都可以  </li><li>一般情况 <code>diskpart.exe</code> 都会显示 ESP 分区类型是 <code>System</code>，少数会是 <code>Primary</code> 或其他类型<br>  <img src="https://cos.mbrjun.cn/IMGS/2023/08/08/33accb46-4dad-4fe5-8d08-c447df3ee370.png" alt="ESP Part">  </li><li>创建的话建议 FAT 或者 FAT32 文件系统，兼容性好，当然如果你的板子支持 NTFS，你可以直接把 (C:) 盘当作 ESP  </li><li>给你的 EFI 分区分配个驱动器号（盘符）或者挂载一下</li></ul></li></ul><p>最后运行下这条命令即可：<br><code>bcdboot C:\Windows /s Z: /f UEFI</code></p><ul><li>C: 是你 Windows 的安装分区（多系统就选你想启动的那个）  </li><li>Z: 是指定 ESP 分区，也就是“你想把 EFI 放到哪个分区”</li></ul>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> UEFI </tag>
            
            <tag> bootmgr </tag>
            
            <tag> bcd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RTL8168 升级使用 PVE 8.0</title>
      <link href="/archives/490/"/>
      <url>/archives/490/</url>
      
        <content type="html"><![CDATA[<p>PVE 8.0 使用了新的 Linux 6.2 内核，但该内核版本也会使 RTL8168 网卡无法正常工作，需要降级内核版本才能使用</p><span id="more"></span><blockquote><p>建议大家远离 RTL 8168 网卡，他不仅被 ESXi 7&#x2F;8 所遗忘，如果对面是一个 Intel 的 I225-LM 网卡，更会直接自闭（无法自动协商），现在，他甚至被 <code>pve-kernel-6.2</code> 抛弃  </p></blockquote><p><a href="https://www.mbrjun.cn/archives/489/">先按照常规方法升级</a>，然后确认下你的网卡型号，按下面的步骤降级内核  </p><h2 id="确认网卡型号"><a href="#确认网卡型号" class="headerlink" title="确认网卡型号"></a>确认网卡型号</h2><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lspci | grep Ethernet</span><br></pre></td></tr></tbody></table></figure></div></figure><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">txt</li></ul></figcaption><div class="tabs-content"><figure class="highlight txt" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">02:00.0 Ethernet controller: Realtek Semiconductor Co., Ltd. RTL8111/8168/8411 PCI Express Gigabit Ethernet Controller (rev 15)</span><br></pre></td></tr></tbody></table></figure></div></figure><p>如果看到类似这样的输出，有 <code>RTL8111/8168/8411</code> 关键字，那就恭喜中奖，<strong>你正在使用 RTL 8168 网卡！</strong></p><h2 id="降级到-6-1-内核"><a href="#降级到-6-1-内核" class="headerlink" title="降级到 6.1 内核"></a>降级到 6.1 内核</h2><p>其实也不是必须用 6.1，降级到一个你认为稳定的也可以（我是不推荐 5.13 和 6.2），比如 5.15 和 5.19，但是我测试 6.1 是稳定的而且较新的 LTS  </p><p>然后就是注意别装成 Debian 原版内核了，我们要装的是 Proxmox VE 修改的内核</p><p>除了内核本体外还建议装下 kernel header  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install pve-kernel-6.1 pve-header-6.1</span><br></pre></td></tr></tbody></table></figure></div></figure><p>然后就可以使用自带的 <code>proxmox-boot-tool</code> 调内核优先级了</p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxmox-boot-tool kernel list</span><br></pre></td></tr></tbody></table></figure></div></figure><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">txt</li></ul></figcaption><div class="tabs-content"><figure class="highlight txt" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Manually selected kernels:</span><br><span class="line">None.</span><br><span class="line"></span><br><span class="line">Automatically selected kernels:</span><br><span class="line">6.1.10-1-pve</span><br><span class="line">6.2.16-3-pve</span><br></pre></td></tr></tbody></table></figure></div></figure><p>将 6.1 内核优先级调最高，以我现在的 6.1.10-1 为例：</p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxmox-boot-tool kernel pin 6.1.10-1-pve</span><br></pre></td></tr></tbody></table></figure></div></figure><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">txt</li></ul></figcaption><div class="tabs-content"><figure class="highlight txt" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Setting '6.1.10-1-pve' as grub default entry and running update-grub.</span><br><span class="line">Generating grub configuration file ...</span><br><span class="line">Found linux image: /boot/vmlinuz-6.2.16-3-pve</span><br><span class="line">Found initrd image: /boot/initrd.img-6.2.16-3-pve</span><br><span class="line">Found linux image: /boot/vmlinuz-6.1.10-1-pve</span><br><span class="line">Found initrd image: /boot/initrd.img-6.1.10-1-pve</span><br><span class="line">Found memtest86+ 64bit EFI image: /boot/memtest86+x64.efi</span><br><span class="line">Adding boot menu entry for UEFI Firmware Settings ...</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">Manually selected kernels:</span><br><span class="line">None.</span><br><span class="line"></span><br><span class="line">Automatically selected kernels:</span><br><span class="line">6.1.10-1-pve</span><br><span class="line">6.2.16-3-pve</span><br><span class="line"></span><br><span class="line">Pinned kernel:</span><br><span class="line">6.1.10-1-pve</span><br></pre></td></tr></tbody></table></figure></div></figure><p>重启就 OK 了  </p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> 虚拟化 </tag>
            
            <tag> PVE </tag>
            
            <tag> Proxmox VE </tag>
            
            <tag> RTL8168 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Proxmox VE 8 发布/更新教程</title>
      <link href="/archives/489/"/>
      <url>/archives/489/</url>
      
        <content type="html"><![CDATA[<p>Proxmox VE 8.0 已于 2023 年 6 月 22 日发布，PVE 8.0 使用 Linux 6.2 内核和最新的 Debian 12 Bookworm 底层系统</p><span id="more"></span><h2 id="新特性"><a href="#新特性" class="headerlink" title="新特性"></a>新特性</h2><ul><li>默认使用 <code>x86-64-v2-AES</code> CPU 类型代替 <code>qemu64</code>&#x2F;<code>kvm64</code> 来提高性能  </li><li>ISO 安装新增 TUI</li><li>2FA 安全性提高</li><li>原生的深色模式</li><li>BtrFS 性能提升</li><li>核心软件包（<code>libc6</code>、<code>OpenSSL</code>、<code>OpenSSH</code>、<code>python3</code>等）更新</li></ul><h2 id="更新教程"><a href="#更新教程" class="headerlink" title="更新教程"></a>更新教程</h2><h3 id="检查现有版本"><a href="#检查现有版本" class="headerlink" title="检查现有版本"></a>检查现有版本</h3><p>在升级到 Proxmox VE 8.0 之前，您需要先升级到最新的 Proxmox VE 7.4  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt dist-upgrade</span><br></pre></td></tr></tbody></table></figure></div></figure><p><img src="https://cos.mbrjun.cn/IMGS/2023/06/17/35267825-2bd1-4c47-ba1a-f0da940bd969.webp" alt="Upgrade to Proxmox VE 7.4"></p><p>无需重启，然后输入 <code>pveversion</code> 命令，检查版本是否已更新到 7.4-15 或更新版本  </p><h3 id="更新前检查"><a href="#更新前检查" class="headerlink" title="更新前检查"></a>更新前检查</h3><p>运行命令 <code>pve7to8 --full</code> 来自动检查是否能升级 Proxmox VE 8.0  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">txt</li></ul></figcaption><div class="tabs-content"><figure class="highlight txt" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">= SUMMARY =</span><br><span class="line">TOTAL:    34</span><br><span class="line">PASSED:   27</span><br><span class="line">SKIPPED:  3</span><br><span class="line">WARNINGS: 4</span><br><span class="line">FAILURES: 0</span><br><span class="line"></span><br><span class="line">ATTENTION: Please check the output for detailed information!</span><br></pre></td></tr></tbody></table></figure></div></figure><h3 id="cgroup2-迁移"><a href="#cgroup2-迁移" class="headerlink" title="cgroup2 迁移"></a>cgroup2 迁移</h3><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'s/lxc.cgroup./lxc.cgroup2./g'</span> /etc/pve/lxc/*.conf</span><br></pre></td></tr></tbody></table></figure></div></figure><h3 id="开始更新"><a href="#开始更新" class="headerlink" title="开始更新"></a>开始更新</h3><p><strong>我们需要先添加 Debian 12 和 Proxmox 8 存储库</strong>：  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'s/bullseye/bookworm/g'</span> /etc/apt/sources.list</span><br></pre></td></tr></tbody></table></figure></div></figure><p>如果你是一个企业订阅用户，继续执行：</p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"deb https://enterprise.proxmox.com/debian/pve bookworm pve-enterprise"</span> &gt; /etc/apt/sources.list.d/pve-enterprise.list</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"deb https://enterprise.proxmox.com/debian/ceph-quincy bookworm enterprise"</span> &gt; /etc/apt/sources.list.d/ceph.list</span><br></pre></td></tr></tbody></table></figure></div></figure><p>否则请使用：</p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"deb http://download.proxmox.com/debian/ceph-quincy bookworm no-subscription"</span> &gt; /etc/apt/sources.list.d/ceph.list</span><br><span class="line">sed -i -e <span class="string">'s/bullseye/bookworm/g'</span> /etc/apt/sources.list.d/pve-install-repo.list</span><br></pre></td></tr></tbody></table></figure></div></figure><p>完成后，使用 <code>apt update</code> 刷新软件源，<strong>然后运行 <code>apt dist-upgrade</code> 更新</strong>  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">txt</li></ul></figcaption><div class="tabs-content"><figure class="highlight txt" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1174 upgraded, 199 newly installed, 15 to remove and 0 not upgraded.</span><br><span class="line">Need to get 1,441 MB of archives.</span><br><span class="line">After this operation, 1,917 MB of additional disk space will be used.</span><br></pre></td></tr></tbody></table></figure></div></figure><h2 id="更新内容"><a href="#更新内容" class="headerlink" title="更新内容"></a>更新内容</h2><p>更新时，系统会发送一封邮件到管理员邮箱，其中包含了更新的内容  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/06/24/c59cc0b2-a320-4a07-80be-4fba93b73413.webp" alt="apt-listchanges"></p><h2 id="配置文件修改"><a href="#配置文件修改" class="headerlink" title="配置文件修改"></a>配置文件修改</h2><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">txt</li></ul></figcaption><div class="tabs-content"><figure class="highlight txt" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Configuration file '/etc/issue'</span><br><span class="line">==&gt; Modified (by you or by a script) since installation.</span><br><span class="line">==&gt; Package distributor has shipped an updated version.</span><br><span class="line">What would you like to do about it ?  Your options are:</span><br><span class="line">    Y or I  : install the package maintainer's version</span><br><span class="line">    N or O  : keep your currently-installed version</span><br><span class="line">    D     : show the differences between the versions</span><br><span class="line">    Z     : start a shell to examine the situation</span><br><span class="line">The default action is to keep your current version.</span><br><span class="line">*** issue (Y/I/N/O/D/Z) [default=N] ?</span><br></pre></td></tr></tbody></table></figure></div></figure><ul><li><code>/etc/issue</code> 建议使用 N</li><li><code>/etc/lvm/lvm.conf</code> 建议使用 Y</li><li><code>/etc/default/grub</code> 建议使用 N</li></ul><h2 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h2><p>如果在更新过程中出现了错误（例如：SSH 连接中断、电源故障），导致更新中断，则可能需要使用下面的命令恢复：  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt -f install</span><br></pre></td></tr></tbody></table></figure></div></figure>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> 虚拟化 </tag>
            
            <tag> ESXi </tag>
            
            <tag> 软路由 </tag>
            
            <tag> PVE </tag>
            
            <tag> Proxmox VE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>INTERNET OVERDOSE[EXP 10+] S 97.4013%</title>
      <link href="/archives/mai-2023-INTERNET-OVERDOSE-EXP-1/"/>
      <url>/archives/mai-2023-INTERNET-OVERDOSE-EXP-1/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cos.mbrjun.cn/IMGS/2023/05/29/703bc40a-3c58-47bc-a86b-6c20312fe1c9.webp" alt="maimai でらっくす FESTiVAL+ Plus: INTERNET OVERDOSE[EXP 10+] S 97.4013%"><br>maimai でらっくす FESTiVAL+ Plus: INTERNET OVERDOSE[EXP 10+] S 97.4013% <a href="https://b23.tv/BV1nu411s79f">BV1nu411s79f</a>  </p><span id="more"></span><iframe id=sbrxp src="https://player.bilibili.com/player.html?aid=529136122&cid=1144185376&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="width: 960px; height: 560px; max-width: 100%"> </iframe>]]></content>
      
      
      <categories>
          
          <category> maimai </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maimai </tag>
            
            <tag> maimaiDX </tag>
            
            <tag> 舞萌 </tag>
            
            <tag> 舞萌DX </tag>
            
            <tag> maimai でらっくす </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Can A Few Make A Difference?</title>
      <link href="/archives/488/"/>
      <url>/archives/488/</url>
      
        <content type="html"><![CDATA[<p>Some of the greatest problems we face today are the destruction of our environment. Brown clouds, polluted water, endangered wild animals…, these problems seem so huge.  </p><p>So my family does what we can. We take cloth bags to stores instead of using plastic bags. We walk where we don’t have to drive…  </p><p>But does it do any good? When I am the only one in line at the market with cloth bags, am I doing any good? Does my walking to stores make any real difference to the world?  </p><span id="more"></span><p>I recently learned something about flamingos which like to get together in groups of a thousand or more. Every year, when the time comes for migration, a few of them first takeoff from the lake. But none of the others seem to notice, so the small group returns.  </p><p>However, the next day they try again. This time few more fly along with them, but most of them still pay no attention, so they return again. They try for several times. Every time a few more birds join in but, since the thousands of others still take no notice, the great migration plan is once more stopped.  </p><p>Then one day something changes. The same small group of birds once again starts flying and a small number more join in just as before, then more. Finally, they all take flight and the migration really begins.  </p><p>What a spectacular sight it must be-thousands of flamingos taking off into the sky at once!  </p><p>A few can make a difference. Even if you’re the one to take the first step, and continue trying, others will someday take notice and together we will solve even our greatest problems.  </p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Environment </tag>
            
            <tag> flamingos </tag>
            
            <tag> Plastic Pollution </tag>
            
            <tag> Cloth Bags </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中通快递送丢一张 AIME 卡</title>
      <link href="/archives/487/"/>
      <url>/archives/487/</url>
      
        <content type="html"><![CDATA[<p>送丢的是 maimai FESTiVAL 的限定卡，最后快递赔了 385 CNY  </p><span id="more"></span><p><img src="https://cos.mbrjun.cn/IMGS/2023/05/23/4e72591d-1952-4b35-90ec-a885b90dc3d4.webp" alt="maimai FESTiVAL aime"></p><p>快递卡了四天不动，开了个投诉单，然后快递说在找  </p><p>转天就告诉我件丢了  </p><blockquote><p>【中通】您好我是中通锦绣分部网点的客服工号是001您反馈的单号尾号8155发件催件的问题很抱歉给您带来了不便，经核实此件疑似不慎遗失，我司已微信理赔寄件人385元，我司联系寄件人后台给您处理售后问题，因我司电联联系不上您按短信内容有问题请联系17635999968</p></blockquote><p><del>不会真的是快递员太馋了给私吞了吧</del>  </p><p>物流信息到现在也没更新，不知道中通还能不能找到件  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/05/23/112c2594-a974-460a-8235-1807195d8537.webp" alt="ZTO 78685530518155"><br>运单号： <code>78685530518155</code>（<a href="https://www.17track.net/?nums=78685530518155">追踪</a>）  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/05/23/90c73b90-66a6-405c-ac92-beba0bbc1a7c.webp" alt="maimai FESTiVAL aime"></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maimai </tag>
            
            <tag> 中通快递 </tag>
            
            <tag> 头文字D </tag>
            
            <tag> 中二 </tag>
            
            <tag> AIME </tag>
            
            <tag> AmusementIC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 JS Fetch 测试网站连通性</title>
      <link href="/archives/486/"/>
      <url>/archives/486/</url>
      
        <content type="html"><![CDATA[<h2 id="在浏览器或-Node-js-中使用-JavaScript-的-Fetch-测试网站连通性"><a href="#在浏览器或-Node-js-中使用-JavaScript-的-Fetch-测试网站连通性" class="headerlink" title="在浏览器或 Node.js 中使用 JavaScript 的 Fetch 测试网站连通性"></a>在浏览器或 Node.js 中使用 JavaScript 的 Fetch 测试网站连通性<br><span id="more"></span></h2><p>自己有在浏览器测试网站连通性的需求，最后使用 Fetch 实现了，就在这里分享一下中间遇到的坑和最后的解决方案，不想看前面废话可以直接<a href="#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88">跳转文末查看代码</a>  </p><h2 id="XHR"><a href="#XHR" class="headerlink" title="XHR"></a>XHR</h2><p>最开始打算直接用 <code>XMLHttpRequest</code> 解决，但是浏览器遇到了跨域拦截（CORS 失败）  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">js</li></ul></figcaption><div class="tabs-content"><figure class="highlight js" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">xhr.<span class="title function_">open</span>(<span class="string">'get'</span>, <span class="string">'https://www.google.com'</span>, !<span class="number">0</span>);</span><br><span class="line"><span class="comment">// async 参数被设置为 !0</span></span><br><span class="line"><span class="comment">// !0 在 JS 中是 true 的一种简写</span></span><br><span class="line">xhr.<span class="title function_">send</span>(<span class="literal">null</span>);</span><br></pre></td></tr></tbody></table></figure></div></figure><p><img src="https://cos.mbrjun.cn/IMGS/2023/05/11/bb7d4f58-4c87-4259-be7b-0a418c637084.webp" alt="XHR CORS"></p><p>出现 <code>Access to XMLHttpRequest at (url) from origin (src) has been blocked by CORS policy: No &#39;Access-Control-Allow-Origin&#39; header is present on the requested resource.</code> 报错，是因为待测的目标 URL（在这个示例中是 <a href="https://www.google.com/">https://www.google.com</a> ）没有允许浏览器读取响应信息  </p><p>正常情况下，<code>xhr.status</code> 应该会给我们响应的状态码，浏览器此时已经成功收到了 302 重定向的响应，但是 xhr 请求出现了 CORS 错误，再尝试获取这个状态码只能得到 0<br>也就是说，无论是否可以访问待测网站，<code>xhr.status</code> 都只会返回 0  </p><p>在浏览器中，XHR 请求都受到 CORS 策略的限制，而 XHR 也无法使用 <code>no-cors</code> 模式来绕过这个限制，这个时候，我们就需要使用 <code>Fetch</code> 了</p><h2 id="Fetch"><a href="#Fetch" class="headerlink" title="Fetch"></a>Fetch</h2><p><code>Fetch</code> 是 <code>XMLHttpRequest</code> 更现代的替代品，是 ES6（ECMAScript 2015）的东西（也就是说不支持 IE）  </p><p>除了过时的 Internet Explorer 和 Windows Script Host，基本所有可以执行 JS 的地方都能使用 <code>Fetch</code>，你甚至可以在 Node.js 中使用它  </p><p>先用 <code>Fetch</code> 重写下文章开头的代码  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">js</li></ul></figcaption><div class="tabs-content"><figure class="highlight js" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">fetch</span>(<span class="string">"https://www.google.com"</span>, {</span><br><span class="line">    <span class="attr">method</span>: <span class="string">"GET"</span>,</span><br><span class="line">    <span class="attr">body</span>: <span class="literal">null</span>,</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div></figure><p><img src="https://cos.mbrjun.cn/IMGS/2023/05/11/9fd946c9-88c5-4393-8d46-c4d8067884b6.webp" alt="Fetch CORS"></p><p>同样会获得 CORS 错误，提示 <code>Failed to fetch</code>，注意看，这个错误属于 <code>TypeError</code>  </p><p>但是我们可以让 <code>Fetch</code> 使用 <code>no-cors</code>，来绕过这个 CORS 限制！</p><p>改进一下代码，然后观察 <code>Fetch</code> 出现的 Error：</p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">js</li></ul></figcaption><div class="tabs-content"><figure class="highlight js" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> request = <span class="title function_">fetch</span>(<span class="string">"https://www.google.com"</span>, {</span><br><span class="line">    <span class="attr">method</span>: <span class="string">"GET"</span>,</span><br><span class="line">    <span class="attr">body</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">'no-cors'</span></span><br><span class="line">})</span><br><span class="line">request.<span class="title function_">then</span>( <span class="function"><span class="params">res</span> =&gt;</span> {</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">json</span>()</span><br><span class="line">})</span><br><span class="line">.<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'Error:'</span>, error))</span><br><span class="line">.<span class="title function_">then</span>( <span class="function"><span class="params">response</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'Success:'</span>, response));</span><br></pre></td></tr></tbody></table></figure></div></figure><p>执行这段代码，我们会得到 <code>Error: SyntaxError: Unexpected end of input</code>  </p><p>为什么会得到 <code>SyntaxError</code> 呢？因为 no-cors 会阻止浏览器获取响应的内容  </p><p>但实际上，如果我们得到了 <code>SyntaxError</code>，则说明这个请求已经发送成功，并且接收到了响应  </p><p>让我们将测试 URL 改为一个不存在的地址，再试一遍：  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">js</li></ul></figcaption><div class="tabs-content"><figure class="highlight js" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> request = <span class="title function_">fetch</span>(<span class="string">"https://this.domain.does.not.exist"</span>, {</span><br><span class="line">    <span class="attr">method</span>: <span class="string">"GET"</span>,</span><br><span class="line">    <span class="attr">body</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">'no-cors'</span></span><br><span class="line">})</span><br><span class="line">request.<span class="title function_">then</span>( <span class="function"><span class="params">res</span> =&gt;</span> {</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">json</span>()</span><br><span class="line">})</span><br><span class="line">.<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'Error:'</span>, error))</span><br><span class="line">.<span class="title function_">then</span>( <span class="function"><span class="params">response</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'Success:'</span>, response));</span><br></pre></td></tr></tbody></table></figure></div></figure><p>执行代码，我们会得到 <code>Error: TypeError: Failed to fetch</code>  </p><p>也就是说，带上 <code>no-cors</code> 之后，虽然请求成功也会报错，但是出现的是另一个报错  </p><ul><li>请求成功：<code>SyntaxError</code></li><li>请求失败：<code>TypeError</code></li></ul><p>接下来，对着不同错误做不同处理，就可以检测啦</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>直接放代码：  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">js</li></ul></figcaption><div class="tabs-content"><figure class="highlight js" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> request = <span class="title function_">fetch</span>(<span class="string">"https://www.google.com"</span>, {</span><br><span class="line">    <span class="attr">method</span>: <span class="string">"GET"</span>,</span><br><span class="line">    <span class="attr">body</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">'no-cors'</span></span><br><span class="line">})</span><br><span class="line">request.<span class="title function_">then</span>( <span class="function"><span class="params">res</span> =&gt;</span> { <span class="keyword">return</span> res.<span class="title function_">json</span>() })</span><br><span class="line">.<span class="title function_">catch</span>(<span class="function"><span class="params">e</span> =&gt;</span> { </span><br><span class="line">    <span class="keyword">if</span> (e <span class="keyword">instanceof</span> <span class="title class_">SyntaxError</span>){ <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'Google OK'</span>)} </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (e <span class="keyword">instanceof</span> <span class="title class_">TypeError</span>) { <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'Google Failed'</span>)} </span><br><span class="line">    <span class="keyword">else</span> {<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'Unknown Error:'</span> + e)}</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure></div></figure><p>如果请求成功，控制台输出 Google OK，如果失败，输出 Google Failed  </p><p>这段代码可以在浏览器里面跑，也可以使用 Node.js 运行</p>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> fetch </tag>
            
            <tag> GFW </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>入坑 maimai！</title>
      <link href="/archives/485/"/>
      <url>/archives/485/</url>
      
        <content type="html"><![CDATA[<p>入坑 maimai でらっくす 啦（<br>4 月 29 日去摸了一下舞萌 DX 2022，5 月 13 日游到日本去摸了一下最新最热 maimai でらっくす FESTiVAL+  </p><span id="more"></span><p><img src="https://cos.mbrjun.cn/IMGS/2023/05/25/0cff3d76-b17e-434e-897f-2ca9dd537567.webp" alt="maimai INTERNET OVERDOSE EXPERT 10+ AAA 96.5669%"><br><img src="https://cos.mbrjun.cn/IMGS/2023/05/09/5b63ff96-34b9-4b8f-98bc-b346a34f1da0.webp" alt="maimai"></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maimai </tag>
            
            <tag> maimaiDX </tag>
            
            <tag> 舞萌 </tag>
            
            <tag> 舞萌DX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Minecraft 或将停止在中国大陆的服务</title>
      <link href="/archives/484/"/>
      <url>/archives/484/</url>
      
        <content type="html"><![CDATA[<p><strong>本文中提到的所有 Minecraft 均指的是由 Microsoft Corporation 运营的一款游戏，与网易公司代理的游戏《我的世界》无关联</strong>  </p><p>近日部分中国玩家在自己的 Xbox 上打开 Minecraft 时收到了一条通知：「在您所在的地区内，我们即将无法支持此设备。」<br>Minecraft For Windows&#x2F;Xbox 现在也已经无法从中国大陆购买，这可能代表着 Minecraft 即将停止在中国大陆的服务  </p><span id="more"></span><hr><p>部分中国玩家在自己的 Xbox 上打开 Minecraft 时收到了这样的通知：</p><p><img src="https://cos.mbrjun.cn/IMGS/2023/04/30/1106cfa7-194e-41b4-a74f-835d8a302138.webp" alt="Xbox Minecraft End Support Warning in China"></p><p>该通知提到：最终版本发布后，您的地区<strong>无法再联网购买内容，但仍可下载已购项目或本地游玩</strong>，设备上的 <strong>Realm 服务器在 2023 年 9 月 30 日之后会停服</strong>  </p><p>目前只有 Xbox 用户收到此通知，Windows 玩家则未收到这个通知，但是这段提示已经可以在 Minecraft For Windows 的数据文件中找到：  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/04/30/6e0ee316-5b12-4af2-8593-f1697e1b07bb.webp" alt="Minecraft For Windows assets end support warning"></p><p>现在尝试在官网购买 Minecraft，如果你的 IP 地址在中国境内，付款时则会出现报错，无法购买（修改为繁体中文或其他语言可以购买），在官网查询 Minecraft 相关信息时，也出现了 502 报错：  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/04/30/1486e443-f8e8-4b25-90f8-811e6e45a409.webp" alt="Minecraft Official Website 502 Error in China"><br><img src="https://cos.mbrjun.cn/IMGS/2023/05/10/53e9b34c-dda2-496f-8e3c-b3a086dd2c08.webp" alt="Buy Minecraft in China"></p><p>Microsoft Store 目前也无法购买 Minecraft，但是已经购买 Minecraft 的玩家仍然可以下载，<strong>如果你担心未来无法正常更新 Minecraft，建议将 Microsoft 账户地区设置为中国大陆以外的地区</strong>  </p><p>虽然 Microsoft 尚未发出官方通知，但是根据 Xbox 上的提示以及游戏数据中的文字可以推测，国际版的 Minecraft 可能无法再在中国大陆更新了。  </p><p>此前，Microsoft&#x2F;Mojang 运营的 Minecraft 虽然可以在中国下载，但是未按照国家相关要求添加防沉迷等保护措施，而网易代理的《我的世界》遵守了这一规定，这可能是 Minecraft 发出此通知的一个原因。  </p>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Minecraft </tag>
            
            <tag> 我的世界 </tag>
            
            <tag> 微软 </tag>
            
            <tag> Microsoft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lowiro 推出 Arcaea 官方查分器</title>
      <link href="/archives/483/"/>
      <url>/archives/483/</url>
      
        <content type="html"><![CDATA[<p>Lowiro 在 2023 年 4 月 27 日推出官方查分器 <strong>Arcaea Online</strong>（玩家称呼：Arcaea 小月卡），付费使用，目前的订阅价格为 200 MMR&#x2F;月<br>Lowiro 同时关闭了官方查分 API —— Arcaea Limited API，并对第三方的查分工具做出了一些限制  </p><span id="more"></span><hr><h2 id="v4-4-4-发布前"><a href="#v4-4-4-发布前" class="headerlink" title="v4.4.4 发布前"></a>v4.4.4 发布前</h2><p>Lowiro 在 Arcaea v4.4.4 版本发布的前一天（26 日）关闭了 Arcaea Limited API（简称 ALA）  </p><p>所有拥有 ALA 访问权限的开发者都会收到下面一条通知：  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">txt</li></ul></figcaption><div class="tabs-content"><figure class="highlight txt" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Dear Developer,</span><br><span class="line"></span><br><span class="line">We are writing to inform you that the Arcaea Limited API provided by lowiro will be formally sunset on the 26th April 2023.</span><br><span class="line">From April 26th 2023 00:00 GMT the service will be shut down permanently and you will no longer be able to make calls to any endpoints.</span><br><span class="line"></span><br><span class="line">We thank you very much for your use of the service and the tools you have created for the player community over the past years.</span><br><span class="line"></span><br><span class="line">Kind regards,</span><br><span class="line">lowiro - API Team</span><br></pre></td></tr></tbody></table></figure></div></figure><h2 id="v4-4-4"><a href="#v4-4-4" class="headerlink" title="v4.4.4"></a>v4.4.4</h2><p>Arcaea v4.4.4 发布后：</p><ul><li>Lowiro 修改了账号注册逻辑（现在需要做人机验证和邮箱验证了，以前是不需要的，直接使用用户名+邮箱+密码就可以注册，我手上还有个之前注册过的 <a href="mailto:&#108;&#111;&#64;&#x77;&#105;&#46;&#114;&#x6f;">&#108;&#111;&#64;&#x77;&#105;&#46;&#114;&#x6f;</a>）  </li><li>Lowiro 推出官方查分 Arcaea Online</li><li>Lowiro 开始对第三方的查分做出了一些限制（禁止用于查分的账号获取排行榜信息）</li></ul><p>目前，Arcaea 只（？）能通过官方工具 或 Excel 表格查分</p><h2 id="Arcaea-Online"><a href="#Arcaea-Online" class="headerlink" title="Arcaea Online"></a>Arcaea Online</h2><p>Arcaea Online 是 Lowiro 推出的一个服务，该服务部分功能是免费的，而部分功能（如查分）则需要付费  </p><p>免费功能：</p><ul><li>查看你账号的搭档信息（等级，FRAG，STEP，OVER）</li><li>查看世界总分排行榜</li></ul><p>付费功能：</p><ul><li>查询游玩过的曲目分数信息（也就是单曲查分）</li><li>查看好友总分排行榜</li><li>查看 PTT 近一年的变化</li><li>查询游玩单曲 PTT 最高的 30 个谱面，并可生成图片（也就是 B30 查分）</li></ul><p>付费订阅需要在网页上购买，价格为 200 MMR&#x2F;月，约合 12 CNY&#x2F;月  </p><h2 id="玩家社区争论"><a href="#玩家社区争论" class="headerlink" title="玩家社区争论"></a>玩家社区争论</h2><p>Lowiro 推出官方付费查分并限制第三方免费查分这一行为，在玩家社区引起了很多争论  </p><ul><li><blockquote><p>616让一位画师为他们画一幅“616正在宣传新开发的官方查分工具”。收到画时，却看到画上只有一个被打上禁止符号的QQ机器人符号和一群看着正在叫骂的人。<br>616不解的问：“这个符号是啥意思”画师答道：“是被封杀的民间b30bot”。又问：“那这群人呢？”“是因为以上操作而愤怒的玩家们”<br>“那616呢？”<br>“616正在宣传新开发的官方查分工具”</p></blockquote></li><li><blockquote><p>上联：雷亚ai曲绘碰不可碰之滑梯<br>下联：616心胸狭隘关闭查分接口<br>横批：世嘉飞妈</p></blockquote></li><li><blockquote><p>从 Arcaea Online 公布起我就在相关动向。说实在的，查分不是什么“没有了它会严重影响游戏体验”的功能；为这功能支付每月 200 mmr 其实也就是点个蜜雪冰城外卖的钱，确实不贵。</p><p>问题在于，对玩家公开的细节不够透明暂且不论，你们给出的功能也只是原本玩家社区自己都能搞定的东西（官方公布的功能里只有一个“查看完整世界榜”此前没有替代品）——先不论这些东西是否值 200 mmr：你们一定要等社区自己想办法做好了饭，这个饭大伙儿都吃习惯了，然后把饭勺抢过来，昭告大家请支持我们的官方服务吗？</p><p>哪怕你们在用户体验这块做点新尝试，例如把查分直接集成进游戏里，或者在游戏内把在玩家水平范围内且有助提升 PTT 的曲子标记出来，大家的反应可能都不至于如此。</p><p>再说价格。对比其他游戏：</p><ul><li><p>maimai 日服的官方网站提供一项付费服务：每天可以额外多玩 1 Track、游戏和网站内展示 Rating 对象曲、在世界排名的基础上可以查看地区和店内排名、赠送一个称号。价格是 330 日元每月，折合不超过 250 mmr。</p></li><li><p>osu! Supporter 的价格是 USD 4.00 每月，比 Arcaea 的贵一倍；但它提供丰富的额外权益，例如好友和地区排名、方便的谱面下载和检索、更多谱面上传槽位等。而且即使不订阅，也可以查看 osu 的全球排行和自身排名，pp 等个人游玩数据更是在个人资料页即可直接查看。</p></li><li><p>DJMAX 通行证的首发价是每季度 RMB 42.5，折合人民币不到每月 14.2 元，与 Arcaea 的价格相近。它提供了通行证 Premium 档位的装扮和皮肤奖励；重要的是，它还允许玩家在多人游戏中游玩房主选择的你尚未拥有的曲子——包括 DLC 的几百首付费乐曲。</p></li></ul><p>虽然我之前说了，Arcaea Online 这个价格不贵，但相比上述其他游戏提供的权益，这真的能说值得吗？</p><p>我只想表达一件事：希望 616 能认真斟酌增值服务的内容和价格。我非常喜欢 Arcaea 带给我的独一无二的游玩体验，我也认可 616 在内容产出上付出的努力；正因如此，我才对 Arcaea Online 这一既无诚意又无相匹配内容的订阅服务感到失望。</p><p>这笔钱我还是会先交一个月，就当一如既往地支持你们并为群友们试水了。希望 616 未来能让玩家真正心甘情愿地订阅你们的服务。</p></blockquote></li><li><blockquote><p>紧紧紧紧紧（钙先生手头比较紧张<br>谨谨谨谨谨（钙先生小心谨慎地想着如何骗钱<br>禁禁禁禁禁（想到可以禁止bot垄断查分渠道<br>仅仅仅仅仅（查分的渠道仅剩下arcol<br>襟襟襟襟襟（玩家们泣下沾襟<br>烬烬烬烬烬（bot开发者的努力化为灰烬<br>金金金金金<br>进进进进进（巨大多金币狂暴鸿儒钙先生钱包</p></blockquote></li></ul><p><img src="https://cos.mbrjun.cn/IMGS/2023/04/29/64cf38f2-b5cc-4bcc-8f4d-6d0db2e4c93a.webp" alt="Arcaea"></p>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 音游 </tag>
            
            <tag> Arcaea </tag>
            
            <tag> Lowiro </tag>
            
            <tag> 查分器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更新 Umami 至 v2</title>
      <link href="/archives/482/"/>
      <url>/archives/482/</url>
      
        <content type="html"><![CDATA[<p>Umami 是一款注重隐私的网站访客统计工具，对标 Google Analytics  </p><p>简单写一下 Umami 大版本升级（v1 到 v2）的教程<br>Umami v2 有很多破坏性更改，自己更新的时候遇到了一些坑，所以自己整理一下升级教程</p><span id="more"></span><blockquote><p>这不是官方教程，官方教程（英文）可以在<a href="https://umami.is/docs/migrate-v1-v2">这里</a>找到</p></blockquote><hr><p><strong>升级前请确认你正在运行最新版本的 v1(v1.4.0)，否则升级时会报错</strong>  </p><p>另外，强烈建议在升级之前备份数据库，如果数据库 dump 文件大于 50 MB，数据库更新可能需要几分钟才能完成  </p><h2 id="关闭旧版本"><a href="#关闭旧版本" class="headerlink" title="关闭旧版本"></a>关闭旧版本</h2><p>首先先把 Umami 旧版本关掉，如果你 Umami 是 systemd 自启，就用：  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop umami</span><br></pre></td></tr></tbody></table></figure></div></figure> <h2 id="升级数据库"><a href="#升级数据库" class="headerlink" title="升级数据库"></a>升级数据库</h2><p>在更新程序版本前要升级数据库，在 umami 目录输入下面的命令即可：  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx @umami/migrate-v1-v2@latest</span><br></pre></td></tr></tbody></table></figure></div></figure><p>如果你卡在了 <code>reify:prisma: http fetch GET 200</code> 这个步骤，并不用担心升级出现了问题，只是程序在下载文件而已  </p><p>（中国大陆下载升级 prisma 大概会消耗半个多小时时间，也可能会更久， prisma 下载文件的地址是写死的，这意味着你改了 npm 注册表（镜像）也没有一点用，但是你可以设置一个 <code>HTTPS_PROXY</code> 变量来让他走代理）  </p><p>升级好之后会问你要不要删除旧的数据表，输入 <code>y</code> 或者 <code>n</code> 就行  </p><h2 id="更新前准备"><a href="#更新前准备" class="headerlink" title="更新前准备"></a>更新前准备</h2><p>先检查一下自己的 Umami 配置文件（<code>.env</code>）有没有设置自定义 JS 名称（<code>TRACKER_SCRIPT_NAME</code>）  </p><p>更新 v2.2.0 之后，你需要在这个脚本名后加个 <code>.js</code> 才能正常跑，如果你原来是这样：  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">env</li></ul></figcaption><div class="tabs-content"><figure class="highlight plaintext" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TRACKER_SCRIPT_NAME=delightful</span><br></pre></td></tr></tbody></table></figure></div></figure><p>那么就改成：</p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">env</li></ul></figcaption><div class="tabs-content"><figure class="highlight plaintext" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TRACKER_SCRIPT_NAME=delightful.js</span><br></pre></td></tr></tbody></table></figure></div></figure><h2 id="更新-Umami"><a href="#更新-Umami" class="headerlink" title="更新 Umami"></a>更新 Umami</h2><p>先 stash 掉目前的更改，然后更新 Git 存储库：</p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br><span class="line">git pull --rebase</span><br></pre></td></tr></tbody></table></figure></div></figure><p>Git 更新完成后，还要更新 node 软件包：</p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn install</span><br></pre></td></tr></tbody></table></figure></div></figure><p>然后就是构建 Umami：</p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn build</span><br></pre></td></tr></tbody></table></figure></div></figure><p>构建时候可能会在 <code>Saved geo database</code> 卡很久，也可能遇到下面的报错，大意是 GeoIP 数据库下载失败：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">tracker/index.js → public/script.js...<br>created public/script.js in 572ms<br>$ node scripts/build-geo.js<br>node:events:491<br>      throw er; // Unhandled &#x27;error&#x27; event<br>      ^<br><br>Error: connect ETIMEDOUT 185.199.111.133:443<br>    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1278:16)<br></code></pre></td></tr></table></figure><p>一般只有中国大陆会出现这个问题，解决的方法就是在另一台网络正常的机器下载 GeoIP 数据库（GeoLite2-City），文件大概有 70 MB，下载完成后上传到服务器 umami 安装目录下面的 <code>geo/</code> 目录，重命名为 <code>GeoLite2-City.mmdb</code>  </p><p>当然，配置代理也是 OK 的，但是 GeoIP 数据库下载时不看系统代理变量，只能自己想办法配置 <code>iptables</code> 了  </p><p>如果你没直接报错退出，一直卡在 <code>Saved geo database</code>，其实也可以慢慢等，大概等个半小时也能下载完  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/04/28/4cfff234-4be9-416a-8b41-6ca2434d3165.webp" alt="Download GeoIP database"></p><h2 id="配置端口"><a href="#配置端口" class="headerlink" title="配置端口"></a>配置端口</h2><p>如果需要修改运行端口，修改 <code>package.json</code>，在第 15 行 <code>start</code> 后面加上 <code>-p 端口号</code>：</p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">json</li></ul></figcaption><div class="tabs-content"><figure class="highlight json" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">"start"</span><span class="punctuation">:</span> <span class="string">"next start -p 53019"</span><span class="punctuation">,</span></span><br></pre></td></tr></tbody></table></figure></div></figure><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>输入 <code>yarn start</code> 后，Umami 应该就可以正常启动了，如果发现无法正常统计，尝试清除一下网页缓存就可以  </p><p>如果你 Umami 是 systemd 自启，就用下面的命令启动  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start umami</span><br></pre></td></tr></tbody></table></figure></div></figure> ]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> umami </tag>
            
            <tag> 统计脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 6.1 被选为 LTS 内核</title>
      <link href="/archives/481/"/>
      <url>/archives/481/</url>
      
        <content type="html"><![CDATA[<p>近日 Linux 内核版本 6.1 被选为 LTS（”longterm maintenance”，长期维护）内核，计划维护四年，同时 Linux LTS 内核版本 5.15 的维护时间被延长三年  </p><span id="more"></span><h3 id="Longterm-release-kernels"><a href="#Longterm-release-kernels" class="headerlink" title="Longterm release kernels"></a>Longterm release kernels</h3><table><thead><tr><th>Version</th><th>Maintainer</th><th>Released</th><th>Projected EOL</th></tr></thead><tbody><tr><td>6.1</td><td>Greg Kroah-Hartman &amp; Sasha Levin</td><td>2022-12-11</td><td>Dec, 2026</td></tr><tr><td>5.15</td><td>Greg Kroah-Hartman &amp; Sasha Levin</td><td>2021-10-31</td><td>Oct, 2026</td></tr><tr><td>5.10</td><td>Greg Kroah-Hartman &amp; Sasha Levin</td><td>2020-12-13</td><td>Dec, 2026</td></tr><tr><td>5.4</td><td>Greg Kroah-Hartman &amp; Sasha Levin</td><td>2019-11-24</td><td>Dec, 2025</td></tr><tr><td>4.19</td><td>Greg Kroah-Hartman &amp; Sasha Levin</td><td>2018-10-22</td><td>Dec, 2024</td></tr><tr><td>4.14</td><td>Greg Kroah-Hartman &amp; Sasha Levin</td><td>2017-11-12</td><td>Jan, 2024</td></tr></tbody></table><blockquote><p>sourced from <a href="https://kernel.org/category/releases.html">kernel.org</a></p></blockquote><ul><li>6.1 版本将提供四年的长期维护，预计维护至 2026 年 12 月</li><li>5.15 版本维护时间延长三年，预计维护至 2026 年 10 月</li></ul><hr><p>对比 Linux 5.15 版本，Linux 6.1 带来了 <strong>Rust</strong> 语言的支持，提高了 <strong>BtrFS</strong> 文件系统的性能，支持使用 <strong>zstd</strong> 压缩内核，并且修复了 Intel I225 等系列网卡可能导致 <strong>Kernel Panic</strong> 的问题  </p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> kernel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 11 22H2 现已支持 TCP BBR</title>
      <link href="/archives/479/"/>
      <url>/archives/479/</url>
      
        <content type="html"><![CDATA[<p>Windows 11 22H2 现已支持 TCP BBR 拥塞控制。若想用 BBR 拥塞控制取代默认的 Cubic 拥塞控制，请在终端中输入下面的命令：  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">pwsh</li></ul></figcaption><div class="tabs-content"><figure class="highlight pwsh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">netsh int tcp <span class="built_in">set</span> supplemental Template=Internet CongestionProvider=bbr2</span><br><span class="line">netsh int tcp <span class="built_in">set</span> supplemental Template=Datacenter CongestionProvider=bbr2</span><br><span class="line">netsh int tcp <span class="built_in">set</span> supplemental Template=Compat CongestionProvider=bbr2</span><br><span class="line">netsh int tcp <span class="built_in">set</span> supplemental Template=DatacenterCustom CongestionProvider=bbr2</span><br><span class="line">netsh int tcp <span class="built_in">set</span> supplemental Template=InternetCustom CongestionProvider=bbr2</span><br></pre></td></tr></tbody></table></figure></div></figure> <span id="more"></span><p>在 Powershell 中使用下面的命令来查看当前使用的 TCP 拥塞控制：  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">pwsh</li></ul></figcaption><div class="tabs-content"><figure class="highlight pwsh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Get-NetTCPSetting</span> | <span class="built_in">Select</span> SettingName, CongestionProvider</span><br></pre></td></tr></tbody></table></figure></div></figure> <p><img src="https://cos.mbrjun.cn/IMGS/2023/04/12/fc4bf2f5-5aa5-410a-bda4-11824c88359c.webp" alt="Windows Cubic TCP CC"></p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TCP </tag>
            
            <tag> Win11 </tag>
            
            <tag> BBR </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初中化学常见物质分子质量</title>
      <link href="/archives/478/"/>
      <url>/archives/478/</url>
      
        <content type="html"><![CDATA[<h2 id="酸根-铵根-氢氧根"><a href="#酸根-铵根-氢氧根" class="headerlink" title="酸根&#x2F;铵根&#x2F;氢氧根"></a>酸根&#x2F;铵根&#x2F;氢氧根</h2><table><thead><tr><th>化学式</th><th>相对分子质量</th><th>化学式</th><th>相对分子质量</th></tr></thead><tbody><tr><td><strong>NO<sub>3</sub><sup>-</sup></strong></td><td>62</td><td><strong>SO<sub>4</sub><sup>2-</sup></strong></td><td>96</td></tr><tr><td><strong>OH<sup>-</sup></strong></td><td>17</td><td><strong>PO<sub>4</sub><sup>3-</sup></strong></td><td>95</td></tr><tr><td><strong>CO<sub>3</sub><sup>2-</sup></strong></td><td>60</td><td><strong>NH<sub>4</sub><sup>+</sup></strong></td><td>18</td></tr></tbody></table><span id="more"></span><h2 id="八大沉淀"><a href="#八大沉淀" class="headerlink" title="八大沉淀"></a>八大沉淀</h2><table><thead><tr><th>化学式</th><th>相对分子质量</th><th>化学式</th><th>相对分子质量</th></tr></thead><tbody><tr><td><strong>BaSO<sub>4</sub></strong></td><td>233</td><td><strong>CaCO<sub>3</sub></strong></td><td>100</td></tr><tr><td><strong>AgCl</strong></td><td>143.5</td><td><strong>Mg(OH)<sub>2</sub></strong></td><td>58</td></tr><tr><td><strong>BaCO<sub>3</sub></strong></td><td>197</td><td><strong><font color=blue>Cu(OH)<sub>2</sub></font></strong></td><td>98</td></tr><tr><td><strong>Ag<sub>2</sub>CO<sub>3</sub></strong></td><td>276</td><td><strong><font color=red>Fe(OH)<sub>3</sub></font></strong></td><td>107</td></tr></tbody></table><h2 id="制氧气-氢气-二氧化碳"><a href="#制氧气-氢气-二氧化碳" class="headerlink" title="制氧气&#x2F;氢气&#x2F;二氧化碳"></a>制氧气&#x2F;氢气&#x2F;二氧化碳</h2><table><thead><tr><th>化学式</th><th>相对分子质量</th><th>化学式</th><th>相对分子质量</th></tr></thead><tbody><tr><td><strong>2KMnO<sub>4</sub></strong></td><td>316</td><td><strong>Zn</strong></td><td>65</td></tr><tr><td><strong>K<sub>2</sub>MnO<sub>4</sub></strong></td><td>197</td><td><strong>H<sub>2</sub>SO<sub>4</sub></strong></td><td>98</td></tr><tr><td><strong>MnO<sub>2</sub></strong></td><td>87</td><td><strong>ZnSO<sub>4</sub></strong></td><td>161</td></tr><tr><td><strong>2KClO<sub>3</sub></strong></td><td>245</td><td><strong>CaCO<sub>3</sub></strong></td><td>100</td></tr><tr><td><strong>2KCl</strong></td><td>78</td><td><strong>2HCl</strong></td><td>73</td></tr><tr><td><strong>H<sub>2</sub>O<sub>2</sub></strong></td><td>34</td><td><strong>CaCl<sub>2</sub></strong></td><td>111</td></tr></tbody></table><h2 id="碳的化合物-碳酸盐"><a href="#碳的化合物-碳酸盐" class="headerlink" title="碳的化合物&#x2F;碳酸盐"></a>碳的化合物&#x2F;碳酸盐</h2><table><thead><tr><th>化学式</th><th>相对分子质量</th><th>化学式</th><th>相对分子质量</th></tr></thead><tbody><tr><td><strong>CO<sub>2</sub></strong></td><td>44</td><td><strong>BaCO<sub>3</sub></strong></td><td>197</td></tr><tr><td><strong>CO</strong></td><td>28</td><td><strong>K<sub>2</sub>CO<sub>3</sub></strong></td><td>138</td></tr><tr><td><strong>CaCO<sub>3</sub></strong></td><td>100</td><td><strong>NaHCO<sub>3</sub></strong></td><td>84</td></tr><tr><td><strong>Na<sub>2</sub>CO<sub>3</sub></strong></td><td>106</td><td></td><td></td></tr></tbody></table><h2 id="其他常见无机物"><a href="#其他常见无机物" class="headerlink" title="其他常见无机物"></a>其他常见无机物</h2><ul><li>未列出可以直接用试卷开头给的<strong>金属质量</strong>和上文的<a href="#%E9%85%B8%E6%A0%B9-x2F-%E9%93%B5%E6%A0%B9-x2F-%E6%B0%A2%E6%B0%A7%E6%A0%B9"><strong>酸根质量</strong></a>去计算</li></ul><table><thead><tr><th>化学式</th><th>相对分子质量</th><th>化学式</th><th>相对分子质量</th></tr></thead><tbody><tr><td><strong>NaOH</strong></td><td>40</td><td><strong>Ca(OH)<sub>2</sub></strong></td><td>74</td></tr><tr><td><strong>NaCl</strong></td><td>58</td><td><strong>Na<sub>2</sub>SO<sub>4</sub></strong></td><td>142</td></tr><tr><td><strong>2NaCl</strong></td><td>116</td><td><strong>CuO</strong></td><td>80</td></tr></tbody></table><h2 id="有机物"><a href="#有机物" class="headerlink" title="有机物"></a>有机物</h2><table><thead><tr><th>化学式</th><th>相对分子质量</th><th>化学式</th><th>相对分子质量</th></tr></thead><tbody><tr><td><strong>C<sub>2</sub>H<sub>5</sub>OH</strong></td><td>46</td><td><strong>CH<sub>3</sub>COOH</strong></td><td>60</td></tr><tr><td><strong>C<sub>6</sub>H<sub>12</sub>O<sub>6</sub></strong></td><td>180</td><td><strong>CH<sub>4</sub></strong></td><td>16</td></tr></tbody></table><hr><h2 id="End"><a href="#End" class="headerlink" title="End"></a>End</h2><p>本文仅为作者整理自用，如有错误欢迎指出修改  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/04/10/0ee9c61f-68c1-4ce6-b108-13b547af1008.webp" alt="硫酸铜"></p>]]></content>
      
      
      <categories>
          
          <category> 化学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 化学 </tag>
            
            <tag> 初中化学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Microsoft 365 E5 开发人员订阅大面积封号</title>
      <link href="/archives/477/"/>
      <url>/archives/477/</url>
      
        <content type="html"><![CDATA[<p>今天（2023-04-05）下午，大量用户发帖反应自己的 Microsoft 365 E5 开发人员订阅被封禁，订阅被设置为过期状态，我自己的订阅也被封掉了</p><span id="more"></span><p>订阅被封禁后没有任何邮件&#x2F;短信通知，有人认为导致订阅被封禁的原因是使用了<strong>自动续期脚本</strong>来续费订阅，也有人认为封禁和<strong>微软训练 AI</strong> 有关。 </p><p><strong>5 月 22 日补充：一个月以后发邮件通知了：</strong></p><blockquote><p>Warning: Your Microsoft 365 trial developer subscription expired on 4&#x2F;5&#x2F;2023 (UTC) due to lack of development activity.<br>• Subscription ID: (org).onmicrosoft.com<br>Your administrator access, your subscription, and all your data will be deleted on 6&#x2F;4&#x2F;2023 (UTC).</p></blockquote><p>各大论坛上发帖反应订阅被封的用户有的使用了续费脚本，有的并没有使用续费脚本仍被封号，还有一些用户使用了续费脚本，却没有被封  </p><p>目前估计已有至少 1000 人订阅被封禁（过期），而且知名 Microsoft 365 E5 自动订阅程序的开发者 <a href="https://qyi.io/">Qyi 的 Blog</a> 也无法打开，提示 SSL Handshake Error（发稿时已恢复正常，可能是因为访问量过大，服务器超载）  </p><hr><p>如果你有 Microsoft 365 E5 开发人员订阅，<strong>请立即检查你的订阅状态：</strong></p><ul><li><a href="https://developer.microsoft.com/en-us/microsoft-365/profile">使用个人账户登陆开发者控制台</a></li><li>或者 <a href="https://admin.microsoft.com/Adminportal/Home?source=applauncher#/subscriptions">使用子号（企业号）访问订阅管理页面</a></li></ul><p>如果显示你的账号<strong>已过期</strong>或者<strong>两天内过期</strong>，就是被封禁订阅了，被封禁后会有下面的提示：  </p><blockquote><p>你的 Microsoft 365 E5 Developer (without Windows and Audio Conferencing) Trial 已过期。  </p></blockquote><blockquote><p>This subscription expired in Apr 5, 2023</p></blockquote><p><img src="https://cos.mbrjun.cn/IMGS/2023/04/05/5e939bc4-e963-4cbf-b5b8-be37ee6fbfe0.webp" alt="Microsoft 365 E5 开发人员订阅被封"></p><hr><p>被封禁后，如果你的账号有重要数据，请立刻将数据备份到安全的地方，订阅封禁后，你的数据还会被<strong>保留一个月</strong>，如果你实在没有办法转移数据，可以去看看 <a href="https://www.mover.io/">mover.io</a> 这样的网盘对拷网站（谨慎使用对拷，因为使用对拷也可能导致目标账号被封）  </p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Office </tag>
            
            <tag> 微软 </tag>
            
            <tag> Microsoft </tag>
            
            <tag> Office365 </tag>
            
            <tag> Microsoft365 </tag>
            
            <tag> OfficeE5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为自己的域名配置 Microsoft 365 邮件服务</title>
      <link href="/archives/476/"/>
      <url>/archives/476/</url>
      
        <content type="html"><![CDATA[<p>使用 Microsoft 365 订阅来搭建自定义域名邮箱，配置好域名邮箱之后，就可以使用自己域名后缀的邮箱来发送邮件了<br>教程同样适用于 Microsoft 365 开发者订阅，也就是 E5  </p><span id="more"></span><hr><h2 id="0x01-准备"><a href="#0x01-准备" class="headerlink" title="0x01 准备"></a>0x01 准备</h2><ul><li>Microsoft 工作或学校账户（需要全局管理员权限）</li><li>一个域名（需要能修改 DNS 记录）</li></ul><h2 id="0x02-绑定域名"><a href="#0x02-绑定域名" class="headerlink" title="0x02 绑定域名"></a>0x02 绑定域名</h2><ul><li>先打开 <a href="https://admin.microsoft.com/Adminportal/Home?source=applauncher#/Domains">Microsoft 365 后台 - 设置 - 域</a>，点击<code>添加域</code>，输入域名并进行验证<br>按照 Microsoft 后台的说明添加验证记录  <table><thead><tr><th>主机名</th><th>类型</th><th>值</th><th>优先级</th><th>TTL</th></tr></thead><tbody><tr><td><code>@</code></td><td>TXT</td><td><code>MS=msXXXXXXXX</code></td><td></td><td><code>1</code> 天（<code>86400</code> 秒）</td></tr></tbody></table>不同 Microsoft 账号记录值不同，注意修改</li><li>接下来，Microsoft 后台会提示你添加 DNS 记录，我们需要先勾选上 <strong>Exchange 和 Exchange Online Protection</strong>，然后按照网页说明再添加一波  <table><thead><tr><th>主机名</th><th>类型</th><th>值</th><th>优先级</th><th>TTL</th></tr></thead><tbody><tr><td><code>@</code></td><td>MX</td><td><code>mbr-moe.mail.protection.outlook.com</code></td><td><code>0</code></td><td><code>1</code> 天（<code>86400</code> 秒）</td></tr><tr><td><code>@</code></td><td>SPF 或 TXT</td><td><code>v=spf1 include:spf.protection.outlook.com -all</code></td><td></td><td><code>1</code> 天（<code>86400</code> 秒）</td></tr><tr><td><code>autodiscover</code></td><td>CNAME 或 ALIAS</td><td><code>autodiscover.outlook.com</code></td><td></td><td><code>1</code> 天（<code>86400</code> 秒）</td></tr></tbody></table>不同 Microsoft 账号 MX 记录值不同，注意修改<br>MX 记录用于声明往你的域名发送的邮件应该发给 Microsoft 的服务器，SPF 记录用来证明“以你域名的身份发送的邮件 是你信任的服务器发出的”，最后一条 CNAME 记录是部分电子邮件客户端自动配置时使用的</li></ul><h2 id="0x03-为账户绑定邮箱"><a href="#0x03-为账户绑定邮箱" class="headerlink" title="0x03 为账户绑定邮箱"></a>0x03 为账户绑定邮箱</h2><ul><li>打开 <a href="https://admin.microsoft.com/Adminportal/Home?source=applauncher#/users">Microsoft 365 后台 - 用户 - 活跃用户</a></li><li>为所有需要使用邮件服务的用户执行下面的操作：<ul><li>找到用户名右侧的修改密码（钥匙）按键，右边有三个点，点击那三个点（<code>更多操作</code>）</li><li>点击<code>管理用户名和电子邮件</code></li><li><code>主电子邮件地址和用户名</code> 改为你想要的默认收发邮箱，修改完需要重新登录</li><li>如果需要多个收发邮箱，就在下面继续添加 <img src="https://cos.mbrjun.cn/IMGS/2023/03/31/9868eead-68c7-4759-84d6-548509017236.webp"></li><li><blockquote><p>注 1：其他收发邮箱（默认邮箱以外的绑定邮箱，下文简称 ALIAS）大多数邮件客户端都不能直接发信（发件人列表只有默认邮箱），但 ALIAS 其实是可以 SMTP 的（登录凭据写默认邮箱，<code>From: </code> 指定 ALIAS 即可）；</p></blockquote></li><li><blockquote><p>注 2：Microsoft 365 组织内人员互相发送邮件，即使你使用 ALIAS，对方收件时会显示发件人为你的默认邮箱，如果你发给组织内成员的 ALIAS，对方邮件客户端会显示自己的主邮箱收到邮件（组织内 你：ALIAS &gt; ALIAS 收件人： 主 &gt; 主）；组织外其他人（指不使用你域名的邮箱，例如 Gmail 用户）向你的 ALIAS 发送邮件，你的客户端会显示是主邮箱收到邮件（组织外 发件人： 对方 &gt; ALIAS 你： 对方 &gt; 主）；你通过 SMTP 使用 ALIAS 给组织外其他人发送邮件，对方客户端会显示你的 ALIAS 发信（组织外 你：ALIAS &gt; 对方 收件人： ALIAS &gt; 对方）；抄送也适用于以上规则，当作收件人就好</p></blockquote></li></ul></li></ul><h2 id="0x04-配置-DKIM-签名"><a href="#0x04-配置-DKIM-签名" class="headerlink" title="0x04 配置 DKIM 签名"></a>0x04 配置 DKIM 签名</h2><p>DKIM 是一种验证邮件是否由你发送的方法，它依赖于公钥加密来验证而不仅仅是 IP 地址，所以 DKIM 被认为是比 SPF 更强大的验证形式。配置 DKIM 签名可增强安全性，并防止邮件<strong>误判</strong>进入垃圾箱  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/04/03/28f93b4c-97e7-4309-acc4-fd0d2e0e3377.webp" alt="DKIM"><br>SPF 失败后，DKIM 成功，邮件仍能正常传递  </p><ul><li>打开 <a href="https://security.microsoft.com/dkimv2">Microsoft 365 Defender - DKIM</a></li><li>点击<em>你的域名</em></li><li>点击 <code>创建 DKIM 密钥</code></li><li>打开上方开关，添加 DNS 记录<table><thead><tr><th>主机名</th><th>类型</th><th>值</th><th>优先级</th><th>TTL</th></tr></thead><tbody><tr><td><code>selector1._domainkey</code></td><td>CNAME</td><td>selector1-mbr-moe._domainkey.mbrstudio.onmicrosoft.com</td><td></td><td>86400</td></tr><tr><td><code>selector2._domainkey</code></td><td>CNAME</td><td>selector2-mbr-moe._domainkey.mbrstudio.onmicrosoft.com</td><td></td><td>86400</td></tr></tbody></table>记录值包含了组织注册时的邮箱（不可更改）以及你的域名</li><li><blockquote><p>注 3：组织内人员互相发送邮件，邮件不会被 DKIM 签名</p></blockquote></li></ul><h2 id="0x05-配置-DMARC"><a href="#0x05-配置-DMARC" class="headerlink" title="0x05 配置 DMARC"></a>0x05 配置 DMARC</h2><p>DMARC 也是一种验证邮件的方法，在配置 DMARC 之前，建议先配置好 SPF 和 DKIM  </p><p>配置 DMARC 也需要添加一条 DNS TXT 记录，这个记录你可以使用生成器产生，也可以手写，以下是我的邮箱域名 mbr.moe 的 DMARC 记录  </p><table><thead><tr><th>主机名</th><th>类型</th><th>值</th><th>优先级</th><th>TTL</th></tr></thead><tbody><tr><td><code>_dmarc</code></td><td>TXT</td><td><code>v=DMARC1; p=reject; sp=reject; pct=100; ruf=mailto:dmarc@mbr.moe; rua=mailto:dmarc@mbr.moe; fo=0:1:d:s; rf=afrf; ri=604800; aspf=s; adkim=s</code></td><td></td><td>86400</td></tr></tbody></table><p>DMARC 的参数和注意事项可以看 <strong>Cymetrics Tech Blog</strong> 的一篇文章： <a href="https://tech-blog.cymetrics.io/posts/crystal/email-sec-settings-dkimdmarc/#dmarc">關於 email security 的大小事 — 設定篇 DKIM、DMARC</a>  </p><h2 id="0x06-收信配置"><a href="#0x06-收信配置" class="headerlink" title="0x06 收信配置"></a>0x06 收信配置</h2><p>配置好邮箱服务器基本设置后，接下来看看如何收信  </p><p>Microsoft 365 邮件服务支持了常见的邮件协议，比如 IMAP、POP 和 <strong>E</strong>xchange <strong>A</strong>ctive<strong>S</strong>ync(EAS)，也可以使用 Outlook 网页版登录    </p><h3 id="IMAP-POP3"><a href="#IMAP-POP3" class="headerlink" title="IMAP&#x2F;POP3"></a>IMAP&#x2F;POP3</h3><p>先来讲一下 IMAP&#x2F;POP3 协议的登陆方法  </p><p>使用 IMAP&#x2F;POP3 登陆时，邮件客户端一般需要你指定服务器和一些其他信息，在你的邮件客户端上填入以下信息即可：</p><ul><li>用户名：<em>填写你的默认邮箱</em></li><li>密码：<em>填写你 Microsoft 账户的密码</em></li><li>服务器：<code>outlook.office365.com</code></li><li>端口号：IMAP <code>993</code> POP <code>995</code></li><li>需要 SSL&#x2F;TLS</li><li>SMTP 配置：详见 <a href="#smtp">SMTP 发信配置</a></li></ul><p>配置好这些信息后保存，就可以正常收信了</p><h3 id="EAS"><a href="#EAS" class="headerlink" title="EAS"></a>EAS</h3><p>使用 EAS 登录邮箱不会很复杂，登陆时输入用户名和密码验证即可，输入完成后，你的邮件客户端还会打开一个网页，提示你进行授权，而且使用 EAS 登陆是可以使用 2FA 验证的，也许可以提高一些账户安全性  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/04/05/ecdd7f91-fbbf-4da1-99b0-9e89b7007a51.webp"></p><h3 id="Outlook-网页版"><a href="#Outlook-网页版" class="headerlink" title="Outlook 网页版"></a>Outlook 网页版</h3><p>登录这个网址即可 <a href="https://outlook.office365.com/mail/">https://outlook.office365.com/mail/</a>  </p><h2 id="0x07-发信配置"><a href="#0x07-发信配置" class="headerlink" title="0x07 发信配置"></a>0x07 发信配置</h2><p>除了收信，发信也是很重要的，Microsoft 365 支持使用 SMTP、EAS 或者 Outlook 网页版发信  </p><h3 id="SMTP"><a href="#SMTP" class="headerlink" title="SMTP"></a>SMTP</h3><p>SMTP 配置可能有些复杂，因为 Microsoft 账户默认是不允许发信的，需要先给账号开启 SMTP 功能，还需要关闭<em>安全默认值</em>  </p><ul><li>打开 <a href="https://admin.microsoft.com/Adminportal/Home?source=applauncher#/users">Microsoft 365 后台 - 用户 - 活跃用户</a></li><li>为所有需要使用邮件服务的用户执行下面的操作：<ul><li>点击用户的显示名称</li><li>点击 <code>邮件</code></li><li>点击 <code>管理电子邮件应用</code></li><li>勾上 <code>SMTP</code>，保存</li><li><img src="https://cos.mbrjun.cn/IMGS/2023/04/05/de82ad2b-ce01-47c1-928b-7a4c49eebee1.webp"></li></ul></li><li>打开 <a href="https://entra.microsoft.com/#view/Microsoft_AAD_IAM/TenantOverview.ReactView?Microsoft_AAD_IAM_legacyAADRedirect=true">Azure Active Directory Legacy</a><ul><li>点击<code>属性</code>(<code>Properties</code>)-<code>管理安全默认值</code>(<code>Manage security defaults</code>)</li><li>禁用安全默认值，保存</li></ul></li></ul><p>然后就可以用 SMTP 发信了，SMTP 发信信息填写：</p><ul><li>用户名：<em>填写你的默认邮箱</em></li><li><code>From:</code> 标头：<em>可以是默认邮箱，也可以是 ALIAS</em><ul><li>部分客户端无法指定 From 标头</li></ul></li><li>密码：<em>填写你 Microsoft 账户的密码</em></li><li>服务器：<code>smtp.office365.com</code></li><li>端口号：<code>587</code></li><li>需要 STARTTLS</li></ul><h3 id="EAS-Sending"><a href="#EAS-Sending" class="headerlink" title="EAS(Sending)"></a>EAS(Sending)</h3><p>EAS 同时支持发信和收信，因此不需要额外配置，配置好<a href="#eas">收信</a>就可以了  </p><p>EAS 发信，<code>From: </code>标头默认是你 Microsoft 账户的名字</p><h3 id="Outlook-网页版-sending"><a href="#Outlook-网页版-sending" class="headerlink" title="Outlook 网页版(sending)"></a>Outlook 网页版(sending)</h3><p>同样不需要额外配置，配置好<a href="#outlook-%E7%BD%91%E9%A1%B5%E7%89%88">收信</a>就可以了</p><h2 id="0x08-功能设置"><a href="#0x08-功能设置" class="headerlink" title="0x08 功能设置"></a>0x08 功能设置</h2><p>邮箱的部分功能（例如发件人白名单）需要进入 <a href="#outlook-%E7%BD%91%E9%A1%B5%E7%89%88">Outlook 网页版</a>配置，建议用电脑登录然后过一遍全部设置，看看有没有要改的</p><h2 id="0x09-常见错误"><a href="#0x09-常见错误" class="headerlink" title="0x09 常见错误"></a>0x09 常见错误</h2><p>列举一些常见的配置错误</p><h3 id="E535"><a href="#E535" class="headerlink" title="E535"></a>E535</h3><p>完整错误是 <code>535 5.7.139 Authentication unsuccessful, SmtpClientAuthentication is disabled for the Tenant. Visit https://aka.ms/smtp_auth_disabled for more information.</code></p><p>账号没有开启 SMTP，再看一遍<a href="#smtp">发信配置教程</a>  </p><h3 id="E554"><a href="#E554" class="headerlink" title="E554"></a>E554</h3><p>完整错误是 <code>554 5.2.252 SendAsDenied; neko@mbr.moe not allowed to send as MAILER-DAEMON@PVE.MBR</code></p><p>没有配置 <code>From:</code> 标头或者配置错误，Linux 容易出现此错误（未配置发件邮箱，直接使用了 <a href="mailto:&#x72;&#111;&#x6f;&#x74;&#64;&#x6c;&#x6f;&#99;&#97;&#x6c;&#x68;&#111;&#115;&#116;&#46;&#x6c;&#x6f;&#x63;&#97;&#x6c;&#100;&#111;&#x6d;&#97;&#105;&#x6e;">&#x72;&#111;&#x6f;&#x74;&#64;&#x6c;&#x6f;&#99;&#97;&#x6c;&#x68;&#111;&#115;&#116;&#46;&#x6c;&#x6f;&#x63;&#97;&#x6c;&#100;&#111;&#x6d;&#97;&#105;&#x6e;</a> 这样的邮箱）<br>配置发件人即可，Linux Postfix 可以按下面方法配置：  </p><p><code>/etc/postfix/main.cf</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">smtp_header_checks = pcre:/etc/postfix/headers<br></code></pre></td></tr></table></figure><p><code>/etc/postfix/headers</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">/^From:.*/ REPLACE From: MBRjun Device Notifications &lt;noreply-devices@mbr.moe&gt;<br></code></pre></td></tr></table></figure><p>然后在 <code>/etc/postfix/headers</code> 里面设置发件人信息就好，配置完成后，所有发出的邮件 <code>From:</code> 都会改写为你配置的邮箱  </p><h2 id="0x0A-测试"><a href="#0x0A-测试" class="headerlink" title="0x0A 测试"></a>0x0A 测试</h2><p>配置好之后就可以测试收发了：  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/04/05/f5ee828c-2523-4698-8d16-066fd20a7f80.webp"><br>正常发送邮件</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Office </tag>
            
            <tag> 域名 </tag>
            
            <tag> Office365 </tag>
            
            <tag> 邮箱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm 抑制 deprecated 警告</title>
      <link href="/archives/475/"/>
      <url>/archives/475/</url>
      
        <content type="html"><![CDATA[<p>Suppress <code>npm WARN deprecated</code> messages in <code>npm install</code>.</p><h2 id="我们在给项目安装依赖的时候，经常出现-npm-WARN-deprecated-警告，介绍几种-npm-隐藏弃用警告的方法（教程也适用于-yarn-和-pnpm-等-Node-js-包管理器）"><a href="#我们在给项目安装依赖的时候，经常出现-npm-WARN-deprecated-警告，介绍几种-npm-隐藏弃用警告的方法（教程也适用于-yarn-和-pnpm-等-Node-js-包管理器）" class="headerlink" title="我们在给项目安装依赖的时候，经常出现 npm WARN deprecated 警告，介绍几种 npm 隐藏弃用警告的方法（教程也适用于 yarn 和 pnpm 等 Node.js 包管理器）"></a>我们在给项目安装依赖的时候，经常出现 <code>npm WARN deprecated</code> 警告，介绍几种 <code>npm</code> 隐藏弃用警告的方法（教程也适用于 <code>yarn</code> 和 <code>pnpm</code> 等 Node.js 包管理器）<br><span id="more"></span></h2><p>如果一个 npm 包的维护者强烈希望用户将他的包升级到一个新版本，或者维护者不再维护这个包，那么他就可能将他的包（部分版本或所有版本）标记为<strong>弃用（deprecate）</strong><br>被标记为弃用的包在安装时会发出警告：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">npm WARN deprecated uuid@3.4.0: Please upgrade to version 7 or higher.  Older versions may use Math.random() in certain circumstances, which is known to be problematic.  See https://v8.dev/blog/math-random for details.<br></code></pre></td></tr></table></figure><p>如果你的项目直接依赖那个包，你可能会升级那个包来避免出现警告；<br>但如果那个包被间接依赖，你通常什么也做不了，只能等待包维护者处理，出现这种情况，您可能会想要隐藏弃用警告  </p><hr><p><strong>有这几种常见的方法来抑制 deprecated 警告：</strong>  </p><ul><li><a href="#%E8%AE%BE%E7%BD%AE-log-level">设置 Log Level</a><ul><li>优点：简单，而且可以直接对所有包生效</li><li>缺点：会同时隐藏项目中其他的警告，出错时不易调试</li></ul></li><li><a href="#%E4%BF%AE%E6%94%B9%E9%94%81%E6%96%87%E4%BB%B6">修改锁文件（lock-file）</a><ul><li>优点：只隐藏<strong>弃用</strong>警告，而且可以指定隐藏哪个包的警告</li><li>缺点：需要项目有锁文件</li></ul></li></ul><hr><h2 id="设置-Log-Level"><a href="#设置-Log-Level" class="headerlink" title="设置 Log Level"></a>设置 Log Level</h2><h3 id="方法一：一次性设置（只对本次安装生效）"><a href="#方法一：一次性设置（只对本次安装生效）" class="headerlink" title="方法一：一次性设置（只对本次安装生效）"></a>方法一：一次性设置（只对本次安装生效）</h3><p>使用 <code>--loglevel=error</code> 参数，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">npm i --loglevel=error<br></code></pre></td></tr></table></figure><p>也可以使用环境变量 <code>npm_config_loglevel=error</code>（需要注意，都是小写的），如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">npm_config_loglevel=error npm i<br></code></pre></td></tr></table></figure><h3 id="方法二：对一个项目生效"><a href="#方法二：对一个项目生效" class="headerlink" title="方法二：对一个项目生效"></a>方法二：对一个项目生效</h3><p>编辑项目 rc（run-command） 文件 <code>.npmrc</code>（也可能是 <code>.yarnrc</code>，取决于你使用的 Node.js 包管理器）文件（如果不存在，可以新建），设置 <code>loglevel</code>，例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">loglevel=error<br></code></pre></td></tr></table></figure><h3 id="方法三：全局生效"><a href="#方法三：全局生效" class="headerlink" title="方法三：全局生效"></a>方法三：全局生效</h3><p>编辑 <code>~/.bashrc</code> 文件（不同 shell 的 rc 文件名可能不同，你可能需要自行搜索你的 shell 的 rc 文件，在此就不细说，cmd.exe 不支持）<br>添加一行 <code>export</code> 命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> npm_config_loglevel=error<br></code></pre></td></tr></table></figure><p>此方法重启 shell 才会生效</p><hr><h2 id="修改锁文件"><a href="#修改锁文件" class="headerlink" title="修改锁文件"></a>修改锁文件</h2><ol><li><p>首先需要确认你的项目是否开启了锁文件，查看项目 rc（run-command） 文件 <code>.npmrc</code>（也可能是 <code>.yarnrc</code>，取决于你使用的 Node.js 包管理器）文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">package-lock=false<br></code></pre></td></tr></table></figure><p>如果项目没有 rc 文件，或 package-lock 不为 false，则说明<strong>锁文件在项目中启用</strong><br>如果出现了 <code>package-lock=false</code>，那么我们需要将 <code>false</code> 改为 <code>true</code></p></li><li><p>运行一次 <code>npm i</code><br>如果锁文件不存在&#x2F;数据不全，此操作会自动补全锁文件的数据  </p></li><li><p>查找锁文件<br>不同 Node.js 包管理器锁文件名称也不一样，可参考：</p><table><thead><tr><th>包管理器</th><th>锁文件</th></tr></thead><tbody><tr><td><code>npm</code></td><td><code>package-lock.json</code></td></tr><tr><td><code>yarn</code></td><td><code>yarn.lock</code></td></tr><tr><td><code>pnpm</code></td><td><code>pnpm-lock.yaml</code></td></tr></tbody></table></li><li><p>修改锁文件<br>搜索 <code>deprecate</code> 关键字：<br><img src="https://cos.mbrjun.cn/IMGS/2023/03/19/9b34fbc0-1738-4435-b4c0-29342c84d99d.png" alt="带有 deprecate 关键字的行"><br>我们可以看到所有被标记为弃用的包<br>若要隐藏一个包的弃用警告，将包名下带有 deprecate 关键字的行移除即可（如果是 <code>json</code> 格式，你可能还需要移除末尾逗号）</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
            <tag> nodejs </tag>
            
            <tag> yarn </tag>
            
            <tag> pnpm </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>甲型 H1N1 流感阳性</title>
      <link href="/archives/474/"/>
      <url>/archives/474/</url>
      
        <content type="html"><![CDATA[<!-- 取得 COVID-19 核酸检测结果后，本页面才会发布到网站 --><p><a href="https://www.mbrjun.cn/archives/468/">上次新冠阳性</a>三个月之后再次感染甲流，随便整理一下时间线  </p><span id="more"></span><hr><blockquote><p><img src="https://cos.mbrjun.cn/IMGS/2023/03/06/4b6335d0-ff42-41f9-b2cf-73e101b307cb.webp" alt="图源：中国疾控"><br>中国疾控：近3周流感病毒阳性检出率呈上升趋势，2023年第8周为25.1%。 浙江省疾控：流感以甲型H1N1流感为主，随着气温变暖，流行态势即将度过上升期，预计再过两周左右可能出现下降趋势。</p></blockquote><p>默认使用 <code>UTC+8</code> <code>中国标准时间</code> <code>CST</code> <code>Asia/Shanghai</code> 时区  </p><table><thead><tr><th>时间</th><th></th></tr></thead><tbody><tr><td><strong>2023 年 3 月</strong></td><td></td></tr><tr><td><strong>2 日</strong></td><td></td></tr><tr><td>2:00</td><td>莫名其妙的咳嗽，并没有在意</td></tr><tr><td>13:30</td><td>全身无力，但还是没有在意</td></tr><tr><td>14:30</td><td>好冷.png 感觉阳了</td></tr><tr><td>15:20</td><td>（校内体温检测）电子测温枪：<code>36.4°C</code></td></tr><tr><td></td><td>这玩意是真的不准 之前冬天在外面测能有 30°C 以下</td></tr><tr><td></td><td>死人的正常体温（确信）</td></tr><tr><td>15:25</td><td>（校内体温检测）水银体温计：<code>38.1°C</code></td></tr><tr><td>15:30</td><td>开离校单子了</td></tr><tr><td>15:45</td><td>出校门</td></tr><tr><td></td><td>这什么b学校 上课时间只有正门能出</td></tr><tr><td></td><td>1 小时内（即 15:00 - 15:45） 算上我有四个人离校了（思考）</td></tr><tr><td>16:18</td><td>（在家体温检测）水银体温计：<code>38.8°C</code></td></tr><tr><td>16:20</td><td>吃药</td></tr><tr><td>16:36</td><td>COVID-19 核酸检测</td></tr><tr><td>16:40</td><td>给某英国小作坊打了点钱</td></tr><tr><td>17:39</td><td>亲，</td></tr><tr><td></td><td>鉴于近期甲流病例增多，凡发热学生复课标准为体温恢复正常至少48小时以上，且没有明显流感样症状（如咳嗽、咽痛等），再提交复课申请（电子版）、新冠病毒核酸或抗原阴性，经准予后方可复课！感谢您的支持和把控！</td></tr><tr><td>23:42</td><td>起床了（</td></tr><tr><td><strong>3 日</strong></td><td></td></tr><tr><td>0:04</td><td>COVID-19 核酸结果：阴性</td></tr><tr><td>13:20</td><td>去医院了</td></tr><tr><td>13:27</td><td>检测花费 603.31 CNY</td></tr><tr><td></td><td>医保支付 23.32 CNY</td></tr><tr><td></td><td>原始 626.63 CNY</td></tr><tr><td>14:53</td><td>甲流抗原：阳性</td></tr><tr><td></td><td>乙流抗原：阴性</td></tr><tr><td>17:05</td><td>购药花费 239.48 CNY</td></tr><tr><td></td><td>医保支付 183.95 CNY</td></tr><tr><td></td><td>原始 423.43 CNY</td></tr><tr><td></td><td>就那个叫<em>玛巴洛沙韦片</em>的药，一片 111 CNY 多点</td></tr><tr><td><strong>6 日</strong></td><td></td></tr><tr><td></td><td>不发烧了</td></tr><tr><td><strong>7 日</strong></td><td></td></tr><tr><td>12:32</td><td>甲乙流新冠：阴性</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 疫情 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> COVID-19 </tag>
            
            <tag> 疫情 </tag>
            
            <tag> 流感 </tag>
            
            <tag> 甲流 </tag>
            
            <tag> H1N1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 RHEL/CentOS 7 上安装 vnstat</title>
      <link href="/archives/473/"/>
      <url>/archives/473/</url>
      
        <content type="html"><![CDATA[<p>vnstat 是一个监控网络流量使用的命令行工具，大多数发行版都可以使用包管理器轻松安装 vnstat，但是 RHEL&#x2F;CentOS 7 有着极为稳定且老旧的运行库，最新版 vnstat 只能通过手动编译的方法安装</p><span id="more"></span><blockquote><p><img src="https://cos.mbrjun.cn/IMGS/2023/02/25/20a5b52c-d8c6-479b-8143-c85888cb74b2.webp" alt="vnstat"></p></blockquote><hr><h2 id="较新版本的-RHEL-系发行版"><a href="#较新版本的-RHEL-系发行版" class="headerlink" title="较新版本的 RHEL 系发行版"></a>较新版本的 RHEL 系发行版</h2><p><code>RHEL 8/9</code>（也包括 <code>CentOS 8</code>、<code>CentOS Stream 8/9</code>、仍在支持的 <code>Fedora</code>、以及各大云厂商魔改的 RHEL） 应该不需要这个教程，因为 EPEL 会自动为这些发行版提供新版本的 vnstat  </p><p>如果你使用较新版本的 RHEL 系发行版，直接使用这个命令安装： <code>dnf install vnstat</code>  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/02/25/8e8346dd-279a-4ad8-a0af-012747fabbeb.png" alt="RHEL 8"></p><p>在 <code>RHEL/CentOS 7</code> 或者老版本的 RHEL 系发行版安装 vnstat，就只能采取手动编译的方法了<br>（包管理器仍然可以下载安装，但是版本十分老旧，缺少很多新功能，数据库格式也和新版本有很大差别）<br>（不建议更改软件源。这个操作可能会炸掉你系统其他的包）  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/02/25/1c484f23-8a23-4caf-b975-367226c2ab51.png" alt="RHEL 7"></p><hr><h2 id="一键命令"><a href="#一键命令" class="headerlink" title="一键命令"></a>一键命令</h2><p>不想看全文的，可以直接用这个命令解决：  </p><figure class="codeblock codeblock--tabbed"><figcaption><span>Last updated: 2023/02/25</span><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">yum install sudo wget tar gcc make gd gd-devel -y</span><br><span class="line">sudo <span class="built_in">mkdir</span> -p /tmp -m 777 &amp;&amp; <span class="built_in">cd</span> /tmp</span><br><span class="line">wget https://humdi.net/vnstat/vnstat-2.10.tar.gz</span><br><span class="line">tar xzf vnstat-2.10.tar.gz</span><br><span class="line"><span class="built_in">cd</span> vnstat-2.10</span><br><span class="line">./configure --prefix=/usr --sysconfdir=/etc</span><br><span class="line">make -j$(<span class="built_in">nproc</span>) &amp;&amp; sudo make install</span><br><span class="line">sudo <span class="built_in">cp</span> examples/systemd/vnstat.service /usr/lib/systemd/system</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> --now vnstat</span><br></pre></td></tr></tbody></table></figure></div></figure> <h2 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h2><h3 id="安装必要的依赖"><a href="#安装必要的依赖" class="headerlink" title="安装必要的依赖"></a>安装必要的依赖</h3><figure class="codeblock codeblock--tabbed"><figcaption><span>安装必要的依赖</span><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install sudo wget tar gcc make gd gd-devel</span><br></pre></td></tr></tbody></table></figure></div></figure> <p><code>gd gd-devel</code> 是可选依赖，如果你不需要 <code>vnstati</code> 就可以去掉这两个包  </p><h3 id="下载并解压"><a href="#下载并解压" class="headerlink" title="下载并解压"></a>下载并解压</h3><p>浏览器打开 <a href="https://humdi.net/vnstat/">vnstat 项目页面</a>  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/02/25/cb829c3b-51b7-4562-907a-3925bf7a12d5.png" alt="vnstat 项目页面"></p><p>复制下来稳定版源码的下载链接（你也可以使用 git 来获取源码）</p><figure class="codeblock codeblock--tabbed"><figcaption><span>下载并解压</span><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://humdi.net/vnstat/vnstat-2.10.tar.gz</span><br><span class="line"><span class="comment">#    ^ 替换为你复制的下载链接！</span></span><br><span class="line">tar xzf vnstat-2.10.tar.gz</span><br><span class="line"><span class="built_in">cd</span> vnstat-2.10</span><br></pre></td></tr></tbody></table></figure></div></figure> <h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><figure class="codeblock codeblock--tabbed"><figcaption><span>配置</span><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr --sysconfdir=/etc</span><br></pre></td></tr></tbody></table></figure></div></figure> <p>两个参数一个是安装目录，一个是配置文件目录  </p><figure class="codeblock codeblock--tabbed"><figcaption><span>编译安装</span><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make -j$(<span class="built_in">nproc</span>)</span><br><span class="line">sudo make install</span><br></pre></td></tr></tbody></table></figure></div></figure> <p>多线程编译并安装到设置的目录  </p><h3 id="自启动"><a href="#自启动" class="headerlink" title="自启动"></a>自启动</h3><h4 id="Systemd"><a href="#Systemd" class="headerlink" title="Systemd"></a>Systemd</h4><figure class="codeblock codeblock--tabbed"><figcaption><span>Systemd</span><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> examples/systemd/vnstat.service /usr/lib/systemd/system</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> --now vnstat</span><br></pre></td></tr></tbody></table></figure></div></figure> <h4 id="SysVinit-init-d"><a href="#SysVinit-init-d" class="headerlink" title="SysVinit(init.d)"></a>SysVinit(init.d)</h4><figure class="codeblock codeblock--tabbed"><figcaption><span>SysVinit(init.d)</span><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> examples/init.d/centos/vnstat /etc/init.d/myservice</span><br><span class="line">chkconfig --add vnstat</span><br></pre></td></tr></tbody></table></figure></div></figure> <span class="highlight-text danger">重启后生效</span><h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><figure class="codeblock codeblock--tabbed"><figcaption><span>卸载</span><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr --sysconfdir=/etc</span><br><span class="line">sudo make uninstall</span><br></pre></td></tr></tbody></table></figure></div></figure> <p>和安装类似，两个参数一个是卸载目录，一个是将要删除的配置文件目录（如果目录非空，不会直接把你整个 &#x2F;etc 删掉的）</p><p>在编译目录（<code>/tmp/vnstat-2.10</code>）执行上面的命令即可，如果编译目录删除了，需要重新<a href="#%E4%B8%8B%E8%BD%BD%E5%B9%B6%E8%A7%A3%E5%8E%8B">下载解压</a>  </p><p>卸载不会自动删除数据库，你可以手动删除数据库（配置文件开头定义了数据库路径，默认是 <code>/var/lib/vnstat</code>）</p><h2 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h2><p>装完注意检查一下 <code>vnstat</code>、<code>vnstatd</code>、<code>vnstati</code> 的版本，之前遇到过 <code>vnstat</code> 和 <code>vnstatd</code> 版本不一致的问题，程序不工作，但是也没有任何报错  </p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vnstat </tag>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DNS-over-HTTP/3 和 DNS-over-QUIC 的区别</title>
      <link href="/archives/472/"/>
      <url>/archives/472/</url>
      
        <content type="html"><![CDATA[<p>DNS-over-HTTP&#x2F;3 和 DNS-over-QUIC 两种协议都基于 UDP，且传输数据都经过 TLS 加密，但是这两种协议是完全不同的  </p><span id="more"></span><hr><h2 id="QUIC"><a href="#QUIC" class="headerlink" title="QUIC"></a>QUIC</h2><p>先来简单了解下 QUIC 协议：  </p><p>QUIC 和 TCP、UDP 一样，是传输层协议，不过 QUIC 协议是基于加密 UDP 的（使用 TLS 1.3 来加密），QUIC 还具有 TCP 的一些优点。  </p><h2 id="DNS-over-QUIC"><a href="#DNS-over-QUIC" class="headerlink" title="DNS-over-QUIC"></a>DNS-over-QUIC</h2><p>DNS-over-QUIC 是通过 QUIC 加密的 DNS 协议，有时会被简写为 DoQ，这个协议于 2022 年 5 月 发布为 <a href="https://datatracker.ietf.org/doc/rfc9250/">RFC 9250</a>，它比较类似 DNS-over-TLS，但是 DNS-over-QUIC 会比 DNS-over-TLS 更快一些      </p><p>curl 无法与 DNS-over-QUIC 服务器进行握手和数据交换，因为 DNS-over-QUIC 只是经过 QUIC 封装的原生 DNS，并不能处理 HTTP 请求。<br>尝试使用 curl 来连接 DNS-over-QUIC 服务器，得到的输出如下：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">$ curl https://dns.mbrjun.cn:784 --http3 -v<br>*   Trying 127.0.0.1:784...<br>* Connect socket 5 over QUIC to 127.0.0.1:784<br>*  CAfile: /etc/ssl/certs/ca-certificates.crt<br>*  CApath: none<br>* ngtcp2_conn_handle_expiry returned error: ERR_HANDSHAKE_TIMEOUT<br>* connect to 127.0.0.1 port 784 failed: Failed sending data to the peer<br>* Failed to connect to dns.mbrjun.cn port 784 after 10050 ms: Failed sending data to the peer<br>* Closing connection 0<br>curl: (55) ngtcp2_conn_handle_expiry returned error: ERR_HANDSHAKE_TIMEOUT<br><br></code></pre></td></tr></table></figure><p>可以看到 QUIC 套接字已经创建完成，但是服务器并不响应这个 HTTP 请求  </p><p>DNS-over-QUIC &#x3D; QUIC + DNS  </p><h2 id="DNS-over-HTTP-3"><a href="#DNS-over-HTTP-3" class="headerlink" title="DNS-over-HTTP&#x2F;3"></a>DNS-over-HTTP&#x2F;3</h2><p>DNS-over-HTTP&#x2F;3，有时也会被称作 DoH3，也是一种加密的 DNS 协议，这种协议在 Android 11 中通过增量更新得到了 Android 的原生支持  </p><p>DNS-over-HTTP&#x2F;3 使用 HTTP 作为传输层协议，本质上是 DNS-over-HTTPS 的一种：<br>DNS-over-HTTPS 允许使用 HTTP&#x2F;3、HTTP&#x2F;2、HTTP&#x2F;1.1、HTTP&#x2F;1.0、HTTP&#x2F;0.9 作为底层协议（实际上，只有前三种常被使用），而 DNS-over-HTTP&#x2F;3 是指使用 HTTP&#x2F;3 做底层协议的 DNS-over-HTTPS  </p><p>HTTP&#x2F;3 协议基于 QUIC，可以说 HTTP&#x2F;3 &#x3D; QUIC + HTTP  </p><p>DNS-over-HTTP&#x2F;3 &#x3D; QUIC + HTTP + DNS  </p><p>curl 可以和 DNS-over-HTTP&#x2F;3 服务器进行握手和数据交换，因为 DNS-over-HTTP&#x2F;3 是经过 QUIC 封装的 HTTP，在 HTTP 上提供 DNS 查询的功能，因此可以处理 HTTP 请求。<br>尝试使用 curl 来连接 DNS-over-HTTP&#x2F;3 服务器，得到的输出如下：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">$ curl https://dns.mbrjun.cn/dns-query --http3 -vI<br>*   Trying 127.0.0.1:443...<br>* Connect socket 5 over QUIC to 127.0.0.1:443<br>*  CAfile: /etc/ssl/certs/ca-certificates.crt<br>*  CApath: none<br>*  subjectAltName: host &quot;dns.mbrjun.cn&quot; matched cert&#x27;s &quot;*.mbrjun.cn&quot;<br>* Verified certificate just fine<br>* Connected to dns.mbrjun.cn (127.0.0.1) port 443 (#0)<br>* h2h3 [:method: HEAD]<br>* h2h3 [:path: /dns-query]<br>* h2h3 [:scheme: https]<br>* h2h3 [:authority: dns.mbrjun.cn]<br>* h2h3 [user-agent: curl/7.87.1-DEV-MBRjun]<br>* h2h3 [accept: */*]<br>* Using HTTP/3 Stream ID: 0 (easy handle 0x5612c27f71b0)<br>&gt; HEAD /dns-query HTTP/3<br>&gt; Host: dns.mbrjun.cn<br>&gt; user-agent: curl/7.87.1-DEV-MBRjun<br>&gt; accept: */*<br>&gt; <br>* ngh3_stream_recv returns 0 bytes and EAGAIN<br>* ngh3_stream_recv returns 0 bytes and EAGAIN<br>* ngh3_stream_recv returns 0 bytes and EAGAIN<br>&lt; HTTP/3 400 <br>HTTP/3 400 <br>&lt; (headers)<br>(headers)<br>...<br></code></pre></td></tr></table></figure><p>可以看到握手成功，服务器返回了 HTTP 状态码 400（这是正常的。为什么？因为 dns-query 没有提供 DNS 查询的参数，所以服务器返回了 Bad Request）  </p><h2 id="对比和总结"><a href="#对比和总结" class="headerlink" title="对比和总结"></a>对比和总结</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">DNS-over-QUIC = QUIC + DNS<br>DNS-over-HTTP/3 = QUIC + HTTP + DNS<br></code></pre></td></tr></table></figure><p>DoH3 比 DoQ 多了一层 HTTP 封装，因此可以使用类似 curl 的工具进行查询  </p><p>由于 DoH3 有一层 HTTP 封装，所以它在传输时会带上 Request Header 和 Response Header，这其中可能包含了 User-Agent 之类的信息，这种信息对于 DNS 来说通常是毫无作用的，理论上，<strong>DoH3 会比 DoQ 更慢</strong>，但实际上带来的影响是极其少的（可能只会慢个 1-2ms）  </p><p>端口号：DoQ 更类似于 DoT，通常使用端口号 443、784 和 853，而 DoH3 是 DoH 的一种，通常使用端口 443。  </p><p>兼容性：从 Android 11 开始，DoH3 得到了部分支持（谷歌设置了白名单，只有少数公共 DNS 服务器会启用 DoH3），从 iOS 15 （macOS Monterty）开始，Apple 设备支持了 DoQ（仅可通过 iCloud Private Relay 开启，不支持自定义服务器），现在 DoH3 的用户数量和 DoQ 的差不多  </p><hr><p>附：AdGuard <a href="https://adguard.com/zh_cn/blog/dns-over-quic.html">认为</a>使用 HTTP 作为传输层协议会引起很多不必要的风险，使用 HTTP 发送 DNS 请求会导致下列结果：</p><ul><li>HTTP cookies</li><li>其他 HTTP 消息头（HTTP headers）（包括 Authentication, User-Agent, Accept-Language）</li><li>给预谋犯更多机会</li><li>Tracking using ETag</li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DNS </tag>
            
            <tag> HTTP/3 </tag>
            
            <tag> QUIC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS 16.3 RC (20D47) 更新内容</title>
      <link href="/archives/471/"/>
      <url>/archives/471/</url>
      
        <content type="html"><![CDATA[<p>今天凌晨，苹果推送了 iOS 16.3 RC 更新，内部版本号为 20D47，正式版将于下周推送，写一下 iOS 16.3 的更新内容  </p><span id="more"></span><h2 id="高级数据保护"><a href="#高级数据保护" class="headerlink" title="高级数据保护"></a>高级数据保护</h2><p>端对端加密保护 iCloud 中的数据，现已在全球推出，这包括中国大陆  </p><p>开启此功能需要踢出所有老系统的设备（例如 iPhone 7，老版本 Windows iCloud），不会给你一个一键踢出的按钮<br><img src="https://cos.mbrjun.cn/IMGS/2023/01/19/xt.jpg"></p><p>开启此功能需要添加至少一种恢复方式（恢复联系人，恢复密钥），如果你设置了恢复密钥，还需要再次输入验证<br><img src="https://cos.mbrjun.cn/IMGS/2023/01/19/de.jpg"></p><p>高级数据保护开启后，如果你希望从 iCloud 网页访问你的数据，你必须在你的受信任设备进行授权（你的浏览器会给 Apple 发送 POST 请求，Apple 请求你的手机生成一个临时的解密密钥发送给浏览器）<br><img src="https://cos.mbrjun.cn/IMGS/2023/01/19/ze.jpg"><br><img src="https://cos.mbrjun.cn/IMGS/2023/01/19/re.jpg"></p><p>受信任设备需要解锁并联网，否则无法在网页访问数据<br><img src="https://cos.mbrjun.cn/IMGS/2023/01/19/zr.jpg"></p><p>开启此功能后，老系统不可再登陆该 ID（App Store 也不行）<br><img src="https://cos.mbrjun.cn/IMGS/2023/01/21/ix.jpg"></p><h2 id="新-Unity-壁纸"><a href="#新-Unity-壁纸" class="headerlink" title="新 Unity 壁纸"></a>新 Unity 壁纸</h2><p>纪念黑人历史和文化</p><h2 id="安全密钥-2FA"><a href="#安全密钥-2FA" class="headerlink" title="安全密钥 2FA"></a>安全密钥 2FA</h2><p>使用兼容 FIDO 的安全密钥代替受信任设备进行 2FA 验证，需要绑定 2 个安全密钥  </p><p>若开启此功能，需要踢出<strong>已登陆 Apple ID 但是超过 90 天不活跃的 Apple 设备</strong>（会给你个一键踢出的按钮）。 </p><p>开启此功能后，网页端可正常登陆验证，老系统同样不可再登陆该 ID（App Store 也不行）<br><img src="https://cos.mbrjun.cn/IMGS/2023/01/19/sj.jpg"></p><h2 id="HomePod-第二代支持"><a href="#HomePod-第二代支持" class="headerlink" title="HomePod 第二代支持"></a>HomePod 第二代支持</h2><h2 id="SOS-功能"><a href="#SOS-功能" class="headerlink" title="SOS 功能"></a>SOS 功能</h2><p>现在需要同时按住<strong>电源键</strong>和<strong>任意音量键</strong>才能触发紧急呼叫</p><h2 id="Bug-修复"><a href="#Bug-修复" class="headerlink" title="Bug 修复"></a>Bug 修复</h2><ul><li>无边记修复</li><li>修复锁屏壁纸显示不出来的 Bug</li><li>修复唤醒 iPhone 14 Pro Max 时出现横线的Bug</li><li>家庭 widget 锁屏 Bug 修复</li><li>Siri 播放音乐 Bug、CarPlay Bug</li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p><code>UPDATING_TEXT_IPHONE</code> 的 Bug 还没修  </p><ul><li>这段文本原来是 <em>iPhone will restart when update completes</em></li></ul>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 苹果 </tag>
            
            <tag> iPhone </tag>
            
            <tag> iOS </tag>
            
            <tag> Apple </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware Workstation 17 下载链接/激活码</title>
      <link href="/archives/470/"/>
      <url>/archives/470/</url>
      
        <content type="html"><![CDATA[<ul><li>虚拟机自启动</li><li>TPM 2.0</li><li>WDDM 1.2</li></ul><p>以上为此次更新带来的新特性，<strong>虚拟机自启动</strong>似乎其他虚拟机软件都已实现，VMware Workstation 现在才有<br>v17 建议依需求更新  </p><span id="more"></span><h2 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h2><p>Windows：<a href="https://download3.vmware.com/software/WKST-1700-WIN/VMware-workstation-full-17.0.0-20800274.exe">https://download3.vmware.com/software/WKST-1700-WIN/VMware-workstation-full-17.0.0-20800274.exe</a><br>Linux：<a href="https://download3.vmware.com/software/WKST-1700-LX/VMware-Workstation-Full-17.0.0-20800274.x86_64.bundle">https://download3.vmware.com/software/WKST-1700-LX/VMware-Workstation-Full-17.0.0-20800274.x86_64.bundle</a></p><h2 id="激活码"><a href="#激活码" class="headerlink" title="激活码"></a>激活码</h2><p><code>NZ4RR-FTK5H-H81C1-Q30QH-1V2LA</code></p><h2 id="之前的版本"><a href="#之前的版本" class="headerlink" title="之前的版本"></a>之前的版本</h2><p>VMware Workstation 17 距离上一个大版本 v16 以及有两年多了，上一个版本可以在<a href="https://www.mbrjun.cn/archives/287/">这里</a>获取</p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware </tag>
            
            <tag> 激活码 </tag>
            
            <tag> VMware Workstation </tag>
            
            <tag> 下载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>S/MIME(X.509) 签名 Git 提交教程</title>
      <link href="/archives/469/"/>
      <url>/archives/469/</url>
      
        <content type="html"><![CDATA[<p>大概是全网第一个 Linux 使用 S&#x2F;MIME（即X.509）签名 Git 提交的教程  </p><p>很多人都知道 Git 可以使用 S&#x2F;MIME 签名，但是很少有人尝试 S&#x2F;MIME，而是选择 OpenPGP 签名，所以我在这里写一个 S&#x2F;MIME 的教程，想玩的可以来参考下  </p><span id="more"></span><hr><p><strong>先说一句，本文章仅针对 Linux</strong></p><p>你应该在点进这篇文章之前已经看过一些其他文档了，如果没有也没关系  </p><p>关于 S&#x2F;MIME 你可能找不到其他有用的文档，就连 <em>GitHub 的官方文档也是依托答辩</em>  </p><p><img src="https://cos.mbrjun.cn/IMGS/2022/12/31/cg.png"></p><p>首先，GitHub 给的这个 <a href="https://github.com/github/smimesign#installation">github&#x2F;smimesign</a> 连 Linux 都不兼容，上次提交还是在 2021，底下的教程还是错的  </p><p>然后，这个 TerminalTerminalGit Bash 是啥玩意？  </p><p><img src="https://cos.mbrjun.cn/IMGS/2022/12/31/fs.png"></p><p>中文文档更是惨不忍睹  </p><h2 id="签名提交"><a href="#签名提交" class="headerlink" title="签名提交"></a>签名提交</h2><p>我们使用的工具是 <code>gpgsm</code>，在 Debian GNU&#x2F;Linux 上使用包管理器安装它：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">apt install gpgsm<br></code></pre></td></tr></table></figure><p>如果你使用 Arch Linux，它已经被包含到 <code>gnupg</code>，所以您不需要手动安装它  </p><p>接下来，简单地执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">gpgsm --import /path/to/secret.pem<br></code></pre></td></tr></table></figure><p>然后依次输入你的<strong>私钥锁码</strong>，为 gpgsm 设置的<strong>新密码</strong>，<strong>重复上一步的密码</strong>，即可将私钥导入 <code>gpgsm</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">gpgsm: 1224 bytes of 3DES encrypted text<br>gpgsm: 5288 bytes of RC2 encrypted text<br>gpgsm: processing certBag<br>gpgsm: dirmngr cache-only key lookup failed: Not found<br>gpgsm: processing certBag<br>gpgsm: processing certBag<br>gpgsm: DBG: keygrip= AE 02 E3 4B E9 7E 61 0C C3 33 93 67 AF 6A 3D 29 18 B3 68 9B<br>gpgsm: total number processed: 4<br>gpgsm:               imported: 1<br>gpgsm:              unchanged: 2<br>gpgsm:       secret keys read: 1<br>gpgsm:   secret keys imported: 1<br><br></code></pre></td></tr></table></figure><p>导入完成后，配置 git 使用 gpgsm 进行签名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">git config --global gpg.format x509<br></code></pre></td></tr></table></figure><p>（是的，<code>git</code> 默认的 X.509 签名工具就是 <code>gpgsm</code>）<br>接下来查看你私钥的 ID：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">gpgsm --list-secret-keys<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">/home/mbrjun/.gnupg/pubring.kbx<br>-------------------------------<br>           ID: 0xC7D9F286 &lt;&lt;- ID Here!<br>          S/N: 3D7BA6B1C470C8938BBB4B08FEC7A956<br>        (dec): 81724941220654032059336759622481979734<br>       Issuer: /CN=Actalis Client Authentication CA G3/O=Actalis S.p.A./L=Ponte San Pietro/ST=Bergamo/C=IT<br>      Subject: /CN=mbrjun@foxmail.com<br>          aka: mbrjun@foxmail.com<br>     validity: 2022-10-26 16:28:57 through 2023-10-26 16:28:57<br>     key type: 2048 bit RSA<br>    key usage: digitalSignature keyEncipherment<br>ext key usage: clientAuth (suggested), emailProtection (suggested)<br>     policies: 1.3.159.1.24.1:N:<br>  fingerprint: 6A:B8:DE:4C:82:76:21:E8:4C:F8:6E:BC:DE:61:B3:8F:C7:D9:F2:86<br>     sha2 fpr: FE:C5:8C:B9:B2:0D:B8:DD:36:BE:41:74:5F:B3:A1:90:68:B7:C9:BE:CD:A2:B9:EF:61:FE:DA:64:80:65:AF:96<br></code></pre></td></tr></table></figure><p>然后把这个 ID 告诉<code>git</code>，例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">git config --global user.signingkey 0xC7D9F286<br></code></pre></td></tr></table></figure><p>将上方命令的 <code>0xC7D9F286</code> 替换为你的私钥 ID</p><p>最后，设置 git 的默认签名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">git config --global commit.gpgsign true<br></code></pre></td></tr></table></figure><p>大功告成！立刻使用你的 X.509 证书来签名提交吧！<br><img src="https://cos.mbrjun.cn/IMGS/2022/12/31/dr.png"></p><h2 id="验证提交签名"><a href="#验证提交签名" class="headerlink" title="验证提交签名"></a>验证提交签名</h2><h3 id="git-命令行"><a href="#git-命令行" class="headerlink" title="git 命令行"></a>git 命令行</h3><p>打开 git log：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">git log --show-signature<br></code></pre></td></tr></table></figure><p>可以看到 gpgsm 会验证签名证书的有效性：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">commit ab7cb75fb8f3a1193a3297764d56b5231d46a6ee<br>gpgsm: Signature made 2022-11-13 04:44:10 UTC<br>gpgsm:                using rsa2048 key 6AB8DE4C827621E84CF86EBCDE61B38FC7D9F286<br>gpgsm: Note: non-critical certificate policy not allowed<br>gpgsm: Note: non-critical certificate policy not allowed<br>gpgsm: Good signature from &quot;/CN=mbrjun@foxmail.com&quot;<br>gpgsm:                 aka &quot;mbrjun@foxmail.com&quot;<br>Author: MBRjun &lt;mbrjun@foxmail.com&gt;<br>Date:   Sun Nov 13 12:44:10 2022 +0800<br><br>    GOOD COMMIT,WITH SMIME SIG(RETRY 1)<br></code></pre></td></tr></table></figure><h3 id="github-com"><a href="#github-com" class="headerlink" title="github.com"></a>github.com</h3><p>GitHub 验证 X.509 不需要上传公钥，同时也不兼容自签名：  </p><p>使用 X.509 签名会比其他签名方法多一种状态，即<strong>Pending</strong>：<br><img src="https://cos.mbrjun.cn/IMGS/2022/12/31/zs.jpg"></p><p>因为 X.509 还会进行证书吊销检查，证书吊销后，所有使用该证书的签名将会<strong>无效</strong>  </p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> S/MIME </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我大抵是阳了</title>
      <link href="/archives/468/"/>
      <url>/archives/468/</url>
      
        <content type="html"><![CDATA[<p>刚写文章时是：好想睡觉，好想睡觉，好想睡觉  </p><span id="more"></span><p><em>根据合规性政策要求，本页面已被更新</em></p><p>核酸阳之前，或者核酸刚阳，症状大概是一直在低烧 37摄氏度，想睡觉  </p><p><code>2022-12-18</code>：今天核酸阳了，昨天还没阳的，发烧是还在低烧，不修改标题了，分享下症状  </p><p><code>2022-12-19</code>：能烧到39.2，味觉减退是真的，不过网上说天津人感染以后都挺能吃，为啥我就没啥食欲了  </p><p>现在外卖买啥都买不到，麦当劳肯德基之类的也全都关门，快递也一直都不给派送，难道是人都阳了吗  </p><p>吃点阿司匹林x  </p><p><code>2022-12-20</code>：不烧了，头还有点晕，班里同学大概还有几个没阳  </p><p><code>2022-12-21</code>：头屑太多了，想洗澡，半夜寸了几次有点发情  </p><p>似乎已经好多了（？）大致 没啥症状了 再观望三天看看  </p><p><code>2022-12-22</code>：无事发生，可能杨康了  </p><p><code>2022-12-23</code>：无事发生，想去做个核酸  </p><p><code>2022-12-24</code>：感觉自己阳了比大多数人（包括身边人）症状轻，虽然咱还是个北佬  </p>]]></content>
      
      
      <categories>
          
          <category> 疫情 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> COVID-19 </tag>
            
            <tag> 疫情 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zstd 命令行使用简明教程</title>
      <link href="/archives/467/"/>
      <url>/archives/467/</url>
      
        <content type="html"><![CDATA[<p>简单写一下 zstd 命令行（Zstandard CLI）使用方法（压缩&#x2F;解压文件夹、文件）以及参数解释  </p><span id="more"></span><hr><h1 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h1><h2 id="zstd-命令用法"><a href="#zstd-命令用法" class="headerlink" title="zstd 命令用法"></a>zstd 命令用法</h2><p>可以使用 <code>zstd --help</code> 查看，用法是  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">zstd [args] [FILE(s)] [-o file]  <br></code></pre></td></tr></table></figure><h2 id="压缩整个文件夹-多个文件"><a href="#压缩整个文件夹-多个文件" class="headerlink" title="压缩整个文件夹&#x2F;多个文件"></a>压缩整个文件夹&#x2F;多个文件</h2><p>zstd 是纯压缩算法，<code>.zst</code>是纯压缩格式，这意味着如果你想要压缩多个文件，你必须先将文件归档（仅打包为一个文件，不进行压缩），而不像 7z 之类的格式，拥有一个容器，可以直接归档并压缩  </p><p>压缩文件夹的命令是：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">tar -cvf - &lt;DIR&gt; | zstd -T0 &gt; &lt;OUTPUT&gt;.tar.zst  <br></code></pre></td></tr></table></figure><p>压缩多个文件的命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">tar -cvf - &lt;FILE1&gt; &lt;FILE2&gt; &lt;FILEn&gt; | zstd -T0 &gt; &lt;OUTPUT&gt;.tar.zst  <br></code></pre></td></tr></table></figure><ul><li><code>&lt;DIR&gt;</code> 是将被压缩的文件夹，<code>&lt;FILE*&gt;</code> 是将被压缩的文件    </li><li><code>&lt;OUTPUT&gt;</code> 是输出文件名  </li><li>此命令使用 <code>tar</code> 进行归档并传递到 <code>zstd</code>（<code>-c</code> 归档 <code>v</code> 详细 <code>f</code> 输出 <code>-</code> 到终端），zstd 进行多线程压缩，然后将 zstd 压缩的输出重定向到文件</li></ul><h2 id="压缩单个文件"><a href="#压缩单个文件" class="headerlink" title="压缩单个文件"></a>压缩单个文件</h2><p>命令是：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">zstd -T0 &lt;FILE&gt; -o &lt;OUTPUT&gt;.zst<br></code></pre></td></tr></table></figure><h2 id="参数解释"><a href="#参数解释" class="headerlink" title="参数解释"></a>参数解释</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">-#       : 压缩率，# 是一个数字，允许的值是 1-19，使用 --ultra 允许 1-22，默认值是 3<br>           数字越大，压缩输出的文件越小，耗时越长，内存占用越大<br>-d       : 解压<br>-o file  : 输出到文件<br>-f       : 强制执行，跳过所有检查<br>--rm     : 压缩成功后删除源文件<br>-c       : 强制 STDOUT，即使目标是终端（这可能会炸了你的终端）<br>-v       : 详细<br>-q       : 不输出警告，指定两次不输出错误<br>--no-progress : 不显示进度<br>--ultra  : 解锁高压缩率<br>--fast   : 光速压缩！<br>-T#      : 多核压缩，0=全部核心<br>--test   : 检查压缩包完整性<br>-M#      : 解压内存上限<br>-b#      : 测速，# 是压缩率等级，输出源文件大小，输出大小，压缩速度，解压速度<br></code></pre></td></tr></table></figure><h1 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h1><p>解压需要使用 <code>unzstd</code> 命令，解压文件直接 <code>unzstd</code> 跟上文件名就好  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">unzstd &lt;FILE&gt;.zst<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> zstd </tag>
            
            <tag> 压缩 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决 .NET 程序在 Linux 下使用非托管资源占用内存过大问题</title>
      <link href="/archives/480/"/>
      <url>/archives/480/</url>
      
        <content type="html"><![CDATA[<p>Linux 下 .NET 程序中直接或间接使用非托管内存资源后 (例如引用了 <code>SkiaSharp</code> <code>OpenCVSharp</code> 这样的库)<br>即使手动释放了对象 内存占用始终不降低</p><span id="more"></span><h1 id="TLDR"><a href="#TLDR" class="headerlink" title="TLDR"></a>TLDR</h1><p>设置环境变量 <code>MALLOC_TRIM_THRESHOLD_</code> 在 1 - 1000000 之间即可 (推荐 40000 - 60000 之间)<br>越小的值内存占用降低效果越好 但是过小的值会导致程序性能受到影响</p><h1 id="refs"><a href="#refs" class="headerlink" title="refs"></a>refs</h1><p><a href="https://github.com/dotnet/runtime/issues/13301#issuecomment-535641506">Memory leak on unix systems using dynamic code compilation</a></p><hr><p>Author: AkulaKriov</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dot-NET </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 6.0 内核编译教程</title>
      <link href="/archives/466/"/>
      <url>/archives/466/</url>
      
        <content type="html"><![CDATA[<p>昨天 Linux 6.0-rc1 内核发布了，写一个编译安装教程喵</p><span id="more"></span><hr><blockquote><p>本文以 Arch Linux 演示编译过程，其他发行版可能编译方法略有不同</p></blockquote><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">pacman -Sy base-devel xmlto kmod inetutils bc libelf git cpio perl tar xz<br></code></pre></td></tr></table></figure><h2 id="获取源码"><a href="#获取源码" class="headerlink" title="获取源码"></a>获取源码</h2><p>下载解压 Linux 内核的压缩包，当然也可以直接 git clone</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://git.kernel.org/torvalds/t/linux-6.0-rc1.tar.gz<br><span class="hljs-built_in">mkdir</span> linux<br><span class="hljs-built_in">cd</span> linux<br>7z x ../linux-6.0-rc1.tar.gz <span class="hljs-comment"># install p7zip first</span><br>7z x linux-6.0-rc1.tar<br><span class="hljs-built_in">cd</span> linux-6.0-rc1<br></code></pre></td></tr></table></figure><p><img src="https://cos.mbrjun.cn/IMGS/2022/08/dh.png"></p><p>然后配置权限并确保内核树绝对干净</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> +x ./scripts/*<br>make clean &amp;&amp; make mrproper<br></code></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>获取当前内核的配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">zcat /proc/config.gz &gt; .config<br></code></pre></td></tr></table></figure><p>之后执行 <code>make menuconfig</code> 命令，进行编译配置<br>不推荐使用 <code>root</code> 用户编译</p><p><img src="https://cos.mbrjun.cn/IMGS/2022/08/nb.png"></p><p>配置好之后保存，返回 Shell</p><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><p>使用下面的命令开始编译</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">make -j$(nproc)<br></code></pre></td></tr></table></figure><p>编译内核模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">make modules<br></code></pre></td></tr></table></figure><p>编译完成后内核存储在 <code>arch/x86_64/boot/bzImage</code></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>我自己编译了一个 Linux 6.0，如果你不能自己编译，也可以点击下方链接获取<br><a href="https://download.mbrjun.cn/%E5%88%B7%E6%9C%BA%E5%8C%85/Linux/Linux-6/6.0/6.0.0/rc1/">https://download.mbrjun.cn/%E5%88%B7%E6%9C%BA%E5%8C%85/Linux/Linux-6/6.0/6.0.0/rc1/</a></p><h3 id="如果是自己编译"><a href="#如果是自己编译" class="headerlink" title="如果是自己编译"></a>如果是自己编译</h3><p>进入编译目录，输入下面的命令安装模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">sudo make modules_install<br></code></pre></td></tr></table></figure><p>然后安装内核并创建 initramfs</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">sudo cp -v bzImage /boot/vmlinuz-linux-mbrjun<br></code></pre></td></tr></table></figure><p>上面的命令中，<code>linux-mbrjun</code>是我内核的名称，你也可以自定义名称，重命名建议以 <code>vmlinuz</code> 开头</p><p>然后需要编辑 <code>/etc/mkinitcpio.d/linux-mbrjun.preset</code>，输入下面的内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">ALL_config=&quot;/etc/mkinitcpio.conf&quot;<br>ALL_kver=&quot;/boot/vmlinuz-linux-mbrjun&quot;<br>PRESETS=(&#x27;default&#x27; &#x27;fallback&#x27;)<br>default_image=&quot;/boot/initramfs-linux-mbrjun.img&quot;<br>fallback_image=&quot;/boot/initramfs-linux-mbrjun-fallback.img&quot;<br>fallback_options=&quot;-S autodetect&quot;<br></code></pre></td></tr></table></figure><p>注意：如果上面修改了内核名称，此处也要修改</p><p>执行 <code>mkinitcpio -p linux-mbrjun</code>，生成 initramfs</p><p>然后重新生成 grub 配置文件：<code>grub-mkconfig -o /boot/grub/grub.cfg</code></p><h3 id="使用编译好的-Linux"><a href="#使用编译好的-Linux" class="headerlink" title="使用编译好的 Linux"></a>使用编译好的 Linux</h3><p><del>是的，我懒得造 pacman 安装包，请你手动安装</del><br>先把<strong>两个 initramfs 开头的文件 和 一个 vmlinuz 开头的文件</strong>拷贝到 &#x2F;boot</p><p>然后将 7z 压缩包内的文件解压到 <code>/lib/modules</code>，<strong>解压出来的文件夹需要改名为 <code>6.0.0-rc1-MBRjun</code></strong></p><p>然后重新生成 grub 配置文件：<code>grub-mkconfig -o /boot/grub/grub.cfg</code></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>重启设备，开机时选择你的新内核<br><img src="https://cos.mbrjun.cn/IMGS/2022/08/vt.png"></p>]]></content>
      
      
      <categories>
          
          <category> 代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> 内核 </tag>
            
            <tag> Arch </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> make </tag>
            
            <tag> Linux6.0 </tag>
            
            <tag> Linux6 </tag>
            
            <tag> deepin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 下修改磁盘分区编号</title>
      <link href="/archives/465/"/>
      <url>/archives/465/</url>
      
        <content type="html"><![CDATA[<p><del>我修改分区编号是为了看着舒服，磁盘没有 sda1 只有 sda2 就很想去改</del><br>本文示例将 &#x2F;dev&#x2F;sda2 改为 &#x2F;dev&#x2F;sda1</p><span id="more"></span><p>原始结构：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTS<br>sda      8:0    0 465.8G  0 disk <br>└─sda2   8:1    0 465.6G  0 part /<br>sr0     11:0    1  1024M  0 rom<br></code></pre></td></tr></table></figure><hr><p><strong>确认你拥有 root 权限</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo su<br></code></pre></td></tr></table></figure><p><strong>关闭所有交换区，确保系统安全，同时尽可能的将目标磁盘上的所有分区解除挂载（否则更改需要重启后生效）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># swapoff -a</span><br></code></pre></td></tr></table></figure><p><strong>使用 sfdisk dump 分区表</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># sfdisk -d /dev/sda &gt; sda.bkp</span><br></code></pre></td></tr></table></figure><p><strong>复制新分区表</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># cp sda.bkp sda.new</span><br></code></pre></td></tr></table></figure><p><strong>编辑新的分区表 <code>sda.new</code></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">label: dos<br>label-id: 0x9ada1ada<br>device: /dev/sda<br>unit: sectors<br>sector-size: 512<br><br>/dev/sda2 : start=      421888, size=   976351232, type=83<br></code></pre></td></tr></table></figure><p>可以直接修改下面的 sda2 到 sda1，修改完成后保存文件</p><p><strong>将新分区表写入磁盘</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># sfdisk /dev/sda &lt; sda.new</span><br></code></pre></td></tr></table></figure><p>如果你正在修改的磁盘是系统磁盘，或者启用了任何交换分区，使用下面的命令来强制写入：<br><strong>这可能会破坏你的系统。风险自负。</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs plaintext"># sfdisk --force /dev/sda &lt; sda.new<br><br>Checking that no-one is using this disk right now ... FAILED<br><br>This disk is currently in use - repartitioning is probably a bad idea.<br>Umount all file systems, and swapoff all swap partitions on this disk.<br>Use the --no-reread flag to suppress this check.<br><br>Disk /dev/sda: 465.76 GiB, 500107862016 bytes, 976773168 sectors<br>Disk model: ST9500420AS     <br>Units: sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br>Disklabel type: dos<br>Disk identifier: 0x9ada1ada<br><br>Old situation:<br><br>Device     Boot  Start       End   Sectors   Size Id Type<br>/dev/sda2       421888 976773119 976351232 465.6G 83 Linux<br><br>&gt;&gt;&gt; Script header accepted.<br>&gt;&gt;&gt; Script header accepted.<br>&gt;&gt;&gt; Script header accepted.<br>&gt;&gt;&gt; Script header accepted.<br>&gt;&gt;&gt; Script header accepted.<br>&gt;&gt;&gt; Created a new DOS disklabel with disk identifier 0x9ada1ada.<br>/dev/sda1: Created a new partition 1 of type &#x27;Linux&#x27; and of size 465.6 GiB.<br>Partition #1 contains a ext4 signature.<br>/dev/sda2: Done.<br><br>New situation:<br>Disklabel type: dos<br>Disk identifier: 0x9ada1ada<br><br>Device     Boot  Start       End   Sectors   Size Id Type<br>/dev/sda1       421888 976773119 976351232 465.6G 83 Linux<br><br>The partition table has been altered.<br>Calling ioctl() to re-read partition table.<br>Re-reading the partition table failed.: Device or resource busy<br>The kernel still uses the old table. The new table will be used at the next reboot or after you run partprobe(8) or partx(8).<br>Syncing disks.<br></code></pre></td></tr></table></figure><p>新的分区表重启后生效，此时应检查 <code>/etc/fstab</code> 是否有问题，确保重启后磁盘分区正常挂载。</p><p><strong>重新安装 GRUB</strong><br><code>仅针对传统 BIOS 引导的设备</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext"># grub-install --target=i386-pc /dev/sda<br># grub-mkconfig -o /boot/grub/grub.cfg<br></code></pre></td></tr></table></figure><p>修改完成后新的结构：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTS<br>sda      8:0    0 465.8G  0 disk <br>└─sda1   8:1    0 465.6G  0 part /<br>sr0     11:0    1  1024M  0 rom<br></code></pre></td></tr></table></figure><hr><p>完成上述操作后重启即可</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> Arch </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> 分区表 </tag>
            
            <tag> MBR </tag>
            
            <tag> GPT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我们Arc人下午过年，晚上吊丧，其他圈子能做得到吗！？</title>
      <link href="/archives/461/"/>
      <url>/archives/461/</url>
      
        <content type="html"><![CDATA[<p>怎么办我现在一边想着誓死力争还我对立 一边对着神光流口水</p><span id="more"></span><hr><p>早上：土豆服务器<br>中午：大型解密<br>下午：星人推歌过年<br>晚上：吊丧</p><hr><p>我们arc人下午过年，晚上吊丧，其他圈子能做得到吗！？</p><p>怎么办我现在一边想着誓死力争还我对立一边对着神光流口水</p><hr><p>对立??对立??对立??对立??对立??对立??对立??对立??对立??对立??对立??</p><hr><p>更新前五天：无知的骗钱口嗨机器创建了新文件夹<br>更新前四天：懒惰的摆烂616定稿了剧情文案<br>更新前三天：616小鬼似乎制作了搭档立绘<br>更新前两天：韵宝小姐完成了谱面的创作<br>更新前一天：美丽的韵宝小姐预定了发布时间<br>更新当天：伟大的Arcaea4.0将于今日降临他忠诚的世界<br>当天早上：伟大的Arc4.0准备进行短暂的解密<br>当天上午：韵宝小姐好像觉得解密更有意思<br>当天中午：616小鬼沉迷于解密无法自拔<br>当天下午：懒惰的摆烂616忘记了自己的身份<br>当天晚上：无知的骗钱口嗨将永远被钉在对立的耻辱柱上！！！</p><hr><p>很喜欢 Arcaea 4.0 的一句话： <em>你脑子是不是有什么问题？</em></p><hr><p>宿命光 aka 神光<br>New alias:<br>妻寄光</p><hr><p>喜报：Guy的母亲去见对立了</p><hr><p><img src="https://cos.mbrjun.cn/IMGS/2022/07/09/rb.jpg"></p><hr><p><img src="https://cos.mbrjun.cn/IMGS/2022/07/09/yn.jpg"></p><hr><p><img src="https://cos.mbrjun.cn/IMGS/2022/07/09/vu.jpg"></p><hr><p><img src="https://cos.mbrjun.cn/IMGS/2022/07/09/xt.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Arcaea </tag>
            
            <tag> 韵律源点 </tag>
            
            <tag> 对立 </tag>
            
            <tag> Arcaea4.0 </tag>
            
            <tag> lowiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Proxmox VE 配置 RSTP</title>
      <link href="/archives/459/"/>
      <url>/archives/459/</url>
      
        <content type="html"><![CDATA[<p>快速生成树协议（Rapid Spanning Tree Protocol ，RSTP） 用于在局域网中消除 L2 物理环路，RSTP 由 STP 改进而来，除了和传统的 STP 协议一样具有避免环路、动态管理冗余链路的功能外，RSTP 极大的缩短了拓扑收敛时间</p><span id="more"></span><p>配置 RSTP 需要先安装 Open vSwitch (openvswitch, OvS) ，这是 Linux Bridge、Linux Bond 和 Linux vlan 的替代方案。Open vSwitch 支持物理交换机上的大多数功能，提供一些高级功能，如 RSTP、VXLAN、OpenFlow，并支持单个网桥上的多个 vlan。如果您需要这些功能，切换到 Open vSwitch 是有意义的。如果您没有安装 OvS，您需要先设置 OvS</p><hr><h2 id="安装-Open-vSwitch"><a href="#安装-Open-vSwitch" class="headerlink" title="安装 Open vSwitch"></a>安装 Open vSwitch</h2><ul><li>首先启用 Proxmox VE 的非订阅源 <img src="https://cos.mbrjun.cn/IMGS/2022/06/11/rs.png"></li><li>安装 OvS（下文提到 Open vSwitch 将全部使用 OvS 简称）(需要大约 6 MB 磁盘空间）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">apt install -y openvswitch-switch<br></code></pre></td></tr></table></figure><h2 id="配置-RSTP"><a href="#配置-RSTP" class="headerlink" title="配置 RSTP"></a>配置 RSTP</h2><p>将 Linux Bridge 转换为 OvS Bridge<br>[scode type&#x3D;”yellow” size&#x3D;””]OvS Bridge 的桥接成员<strong>必须</strong>是 OvS 端口、OvS Bond 或 OvS vlan；Linux Bridge 的桥接成员<strong>不得</strong>是 OvS 端口、OvS Bond 或 OvS vlan，如果您有多个桥接，您需要为所有使用到 OvS 设备的 Linux Bridge 转换为 OvS Bridge（即使这个桥接不需要 RSTP）[&#x2F;scode]</p><p>修改 <code>/etc/network/interfaces</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">auto</span> enp2s0 <span class="hljs-comment">// 为网桥成员添加 auto 标记</span><br>iface enp2s0 inet manual <br>        ovs_type OVSPort <span class="hljs-comment">// 设置为 OvS 端口</span><br>        ovs_bridge vmbr0 <span class="hljs-comment">// 该接口属于 vmbr0 桥接</span><br><br><span class="hljs-keyword">auto</span> vmbr0<br>iface vmbr0 inet <span class="hljs-type">static</span> <span class="hljs-comment">// 静态 IPv4</span><br>        address <span class="hljs-number">10.20</span><span class="hljs-number">.6</span><span class="hljs-number">.12</span>/<span class="hljs-number">11</span> <span class="hljs-comment">// IP/CIDR</span><br>        gateway <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.10</span> <span class="hljs-comment">// 网关</span><br>        ovs_type OVSBridge <span class="hljs-comment">// 设置为 OvS 网桥</span><br>        ovs_ports enp2s0 <span class="hljs-comment">// 该桥接包含 enp2s0 接口</span><br>        ovs_mtu <span class="hljs-number">1500</span> <span class="hljs-comment">// MTU，大于 1500 必须设置</span><br>        ovs_options other_config:rstp-port-mcheck=<span class="hljs-literal">true</span> <span class="hljs-comment">// 见下方 ovs_options 选项</span><br>        up ovs-vsctl <span class="hljs-built_in">set</span> Bridge $&#123;IFACE&#125; rstp-enable=<span class="hljs-literal">true</span> other_config:rstp-priority=<span class="hljs-number">57344</span> <span class="hljs-comment">// 见下方桥接选项</span><br>        post-up sleep <span class="hljs-number">10</span> <span class="hljs-comment">// 在启动继续之前休眠 10 秒左右等待 RSTP 收敛</span><br></code></pre></td></tr></table></figure><p>ovs_options 选项：</p><ul><li><code>other_config:rstp-path-cost=</code><br>10GbE 的默认值为 2000，1GbE 的默认值为 20000</li><li><code>other_config:rstp-port-admin-edge=</code><br>如果已知它连接到运行 RSTP 的交换机，则设置为 False，以防止在未检测到 BDPU 时进入转发状态</li><li><code>other_config:rstp-port-auto-edge=</code><br>如果已知它连接到运行 RSTP 的交换机，则设置为 False，以防止在未检测到 BDPU 时进入转发状态</li><li><code>other_config:rstp-port-mcheck=</code><br>如果知道另一端使用 RSTP 而不是 STP，则设置为 True，将在链路检测时立即广播 BDPU</li></ul><p>桥接选项：</p><ul><li><code>up ovs-vsctl set Bridge $&#123;IFACE&#125; rstp_enable=true</code><br><strong>开启 RSTP</strong></li><li><code>other_config:rstp-priority=</code><br>接受十六进制和十进制值。<br>配置根桥优先级，值越低越有可能成为根桥。建议将此设置为最大值 0xFFFF（65536），以防止 Open vSwitch 成为根桥。默认值为 0x8000（32768），值必须是 4096 的倍数</li><li><code>other_config:rstp-forward-delay=</code><br>网桥在进入<strong>转发</strong>状态之前处于<strong>学习</strong>模式的时间量。范围是 4-30，默认 15</li><li><code>other_config:rstp-max-age=</code><br>范围是 6-40，默认 20</li></ul><p>配置好之后保存，新配置将在<strong>重启设备</strong>之后应用</p><p>[scode type&#x3D;”yellow” size&#x3D;””]请不要在重启设备前重启网络服务，这会让您的服务器失去网络连接[&#x2F;scode]</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PVE </tag>
            
            <tag> 交换机 </tag>
            
            <tag> RSTP </tag>
            
            <tag> STP </tag>
            
            <tag> 生成树 </tag>
            
            <tag> 生成树协议 </tag>
            
            <tag> 快速生成树协议 </tag>
            
            <tag> OvS </tag>
            
            <tag> Proxmox VE </tag>
            
            <tag> Linux Bridge </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>原神私服 Android 游玩教程 (免 root)</title>
      <link href="/archives/454/"/>
      <url>/archives/454/</url>
      
        <content type="html"><![CDATA[<p>由于 Google 的限制和一些其他原因，在 Android 上游玩原神私服并没有 iOS、Windows 这么容易</p><span id="more"></span><hr><h2 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h2><ul><li><del>一台能读写 &#x2F;system 分区的 Android 手机（或：一台安装了 Magisk 的 Android 手机）</del> 有人搞出来免root端了，此条件不再必须</li><li>私服客户端 <a href="https://download.mbrjun.cn/Files/APK/Genshin-Impact-c260.apk">v2.6</a> 或者 <a href="https://download.mbrjun.cn/Files/APK/genshin-impact-lv0-lspatched.apk">v2.7</a></li><li>一台私服服务器</li><li>Grasscutter</li><li>mitmproxy</li><li>Wi-Fi</li></ul><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p>先把 Grasscutter 配置好，不同系统配置方法不一样，基本概括为以下几点</p><ul><li>下载 Gresscutter：<a href="https://github.com/Grasscutters/Grasscutter/releases">https://github.com/Grasscutters/Grasscutter/releases</a></li><li>下载 Java（JDK）</li><li>运行 Gresscutter</li></ul><p>搭建Grasscutter可以去看 <a href="https://blog.cyznb.eu.org/archives/70/">BLxcwg666</a> 的教程</p><p>安装好 Gresscutter 之后，服务器随便找个地方新建个 proxy.py，放下面的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">##</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#   Copyright (C) 2002-2022 MlgmXyysd All Rights Reserved.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">##</span><br><br><span class="hljs-comment">##</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#   Genshin Impact script for mitmproxy</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#   https://github.com/MlgmXyysd/</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#   *Original fiddler script from https://github.lunatic.moe/fiddlerscript</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#   Environment requirement:</span><br><span class="hljs-comment">#     - mitmdump from mitmproxy</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#   @author MlgmXyysd</span><br><span class="hljs-comment">#   @version 1.1</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">##</span><br><br><span class="hljs-keyword">from</span> mitmproxy <span class="hljs-keyword">import</span> http<br><span class="hljs-keyword">from</span> proxy_config <span class="hljs-keyword">import</span> USE_SSL<br><span class="hljs-keyword">from</span> proxy_config <span class="hljs-keyword">import</span> REMOTE_HOST<br><span class="hljs-keyword">from</span> proxy_config <span class="hljs-keyword">import</span> REMOTE_PORT<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MlgmXyysd_Genshin_Impact_Proxy</span>:<br><br>    LIST_DOMAINS = [<br>        <span class="hljs-string">&quot;api-os-takumi.mihoyo.com&quot;</span>,<br>        <span class="hljs-string">&quot;hk4e-api-os-static.mihoyo.com&quot;</span>,<br>        <span class="hljs-string">&quot;hk4e-sdk-os.mihoyo.com&quot;</span>,<br>        <span class="hljs-string">&quot;dispatchosglobal.yuanshen.com&quot;</span>,<br>        <span class="hljs-string">&quot;osusadispatch.yuanshen.com&quot;</span>,<br>        <span class="hljs-string">&quot;account.mihoyo.com&quot;</span>,<br>        <span class="hljs-string">&quot;log-upload-os.mihoyo.com&quot;</span>,<br>        <span class="hljs-string">&quot;dispatchcntest.yuanshen.com&quot;</span>,<br>        <span class="hljs-string">&quot;devlog-upload.mihoyo.com&quot;</span>,<br>        <span class="hljs-string">&quot;webstatic.mihoyo.com&quot;</span>,<br>        <span class="hljs-string">&quot;log-upload.mihoyo.com&quot;</span>,<br>        <span class="hljs-string">&quot;hk4e-sdk.mihoyo.com&quot;</span>,<br>        <span class="hljs-string">&quot;api-beta-sdk.mihoyo.com&quot;</span>,<br>        <span class="hljs-string">&quot;api-beta-sdk-os.mihoyo.com&quot;</span>,<br>        <span class="hljs-string">&quot;cnbeta01dispatch.yuanshen.com&quot;</span>,<br>        <span class="hljs-string">&quot;dispatchcnglobal.yuanshen.com&quot;</span>,<br>        <span class="hljs-string">&quot;cnbeta02dispatch.yuanshen.com&quot;</span>,<br>        <span class="hljs-string">&quot;sdk-os-static.mihoyo.com&quot;</span>,<br>        <span class="hljs-string">&quot;webstatic-sea.mihoyo.com&quot;</span>,<br>        <span class="hljs-string">&quot;webstatic-sea.hoyoverse.com&quot;</span>,<br>        <span class="hljs-string">&quot;hk4e-sdk-os-static.hoyoverse.com&quot;</span>,<br>        <span class="hljs-string">&quot;sdk-os-static.hoyoverse.com&quot;</span>,<br>        <span class="hljs-string">&quot;api-account-os.hoyoverse.com&quot;</span>,<br>        <span class="hljs-string">&quot;hk4e-sdk-os.hoyoverse.com&quot;</span>,<br>        <span class="hljs-string">&quot;overseauspider.yuanshen.com&quot;</span>,<br>        <span class="hljs-string">&quot;gameapi-account.mihoyo.com&quot;</span>,<br>        <span class="hljs-string">&quot;minor-api.mihoyo.com&quot;</span>,<br>        <span class="hljs-string">&quot;public-data-api.mihoyo.com&quot;</span>,<br>        <span class="hljs-string">&quot;uspider.yuanshen.com&quot;</span>,<br>        <span class="hljs-string">&quot;sdk-static.mihoyo.com&quot;</span>,<br>        <span class="hljs-string">&quot;abtest-api-data-sg.hoyoverse.com&quot;</span>,<br>        <span class="hljs-string">&quot;log-upload-os.hoyoverse.com&quot;</span><br>    ]<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">request</span>(<span class="hljs-params">self, flow: http.HTTPFlow</span>) -&gt; <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">if</span> flow.request.host <span class="hljs-keyword">in</span> self.LIST_DOMAINS:<br>            <span class="hljs-keyword">if</span> USE_SSL:<br>                flow.request.scheme = <span class="hljs-string">&quot;https&quot;</span><br>            <span class="hljs-keyword">else</span>:<br>                flow.request.scheme = <span class="hljs-string">&quot;http&quot;</span><br>            flow.request.host = REMOTE_HOST<br>            flow.request.port = REMOTE_PORT<br><br>addons = [<br>MlgmXyysd_Genshin_Impact_Proxy()<br>]<br></code></pre></td></tr></table></figure><h2 id="CA-安装"><a href="#CA-安装" class="headerlink" title="CA 安装"></a>CA 安装</h2><p>然后把 mitmproxy 的证书安装到手机里<br>自带的证书是用户目录下的 <code>.mitmproxy</code> 里面的 <code>mitmproxy-ca-cert.cer</code></p><p>手机插数据线到电脑，或者用传输工具，把 mitmproxy-ca-cert.cer 拷贝到手机的存储里（ &#x2F;sdcard）<br>然后进入手机上的 <strong>设置 &gt; 安全性和隐私 &gt; 加密与凭据 &gt; 安装证书 &gt; CA 证书</strong>（不同手机可能设置方法略有差异，可以尝试在设置内搜索 CA，或者百度一下）安装你刚刚传进去的 <code>mitmproxy-ca-cert.cer</code></p><h2 id="mitmproxy"><a href="#mitmproxy" class="headerlink" title="mitmproxy"></a>mitmproxy</h2><p>然后进入 mitmproxy 安装目录，执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mitmweb -s proxy.py --ssl-insecure --<span class="hljs-built_in">set</span> block_global=<span class="hljs-literal">false</span> --listen-port 1145 --certs <span class="hljs-string">&quot;Genshin Impact.pem&quot;</span><br></code></pre></td></tr></table></figure><p>注意：</p><ul><li>proxy.py 替换为上面你保存的 proxy.py 的路径</li><li>监听端口随意 1-65535，选择一个不冲突的端口，如果冲突了后面可能会报错 WinError，不建议：7890 8080，容易被扫描到，记下这个端口</li><li>后面可以用 –certs 引入自己的证书，不需要引入自己的证书可以直接删除该参数</li></ul><p>如果是自己的证书，CA 请使用 v3 版本（OpenSSL 默认 v1)，私钥请选择 RSA 2048，如果证书开头是 <code>-----BEGIN RSA PRIVATE KEY-----</code>，改成<code>-----BEGIN PRIVATE KEY</code></p><h2 id="证书移动至-SYSTEM-TRUST"><a href="#证书移动至-SYSTEM-TRUST" class="headerlink" title="证书移动至 SYSTEM TRUST"></a><del>证书移动至 SYSTEM TRUST</del></h2><p>如果<strong>使用上面提供的修改版客户端</strong>，就<strong>不需要执行这个步骤</strong>了（如果有问题，你还是可以试试执行下这个步骤</p><p>需要使用 Magisk</p><p>Magisk 刷入 <a href="https://github.com/Magisk-Modules-Repo/movecert">https://github.com/Magisk-Modules-Repo/movecert</a> 模块，重启<br>如果无法刷入，尝试使用兼容模式刷入</p><blockquote><p>Magisk 是啥？<br>root 手机用的，还有很多其他功能<br>需要解锁 Bootloader 才能安装 Magisk，Magisk 不同设备安装方法不同，网上搜一下吧</p></blockquote><h2 id="代理配置"><a href="#代理配置" class="headerlink" title="代理配置"></a>代理配置</h2><p>进入你手机的 Wi-Fi 配置界面，点开你 Wi-Fi 的详细信息（，部分手机：点开编辑页面），找到设置代理，代理模式改为<strong>手动</strong><br>代理服务器设置为你私服的 IP，端口填写上面配置的端口，然后保存<br><img src="https://cos.mbrjun.cn/IMGS/2022/05/29/eu.png" alt=" 分别填写私服 IP，私服端口，第三个留空 "></p><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p><del>去 Google Play 下载 Genshin Impact</del>下载文章开头的私服客户端，应该可以正常游玩了（注意：官网下的连不上私服）</p><hr><p>关于 Android 一些限制：原神不会信任 USER TRUST 的证书，必须安装到 SYSTEM TRUST，私服客户端忽略这个限制</p><p>有问题可以底下评论反馈，文章会及时修改。</p>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原神 </tag>
            
            <tag> Grasscutter </tag>
            
            <tag> mitmproxy </tag>
            
            <tag> 私服 </tag>
            
            <tag> Genshin Impact </tag>
            
            <tag> 原神私服 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>寂静之城</title>
      <link href="/archives/452/"/>
      <url>/archives/452/</url>
      
        <content type="html"><![CDATA[<p>And in the naked light I saw ten thousand people, maybe more.</p><p>People talking without speaking, people hearing without listening.</p><p>People writing songs that voices never shared, no one dared disturb the</p><p>sound of silence.</p><p>— The sound of silence</p><span id="more"></span><p>美利坚合众国，2015年，纽约。</p><p>当电话响起来的时候，阿瓦登正趴在电脑前面睡觉。电话铃声十分急促，尖锐，每一次振动都让他的耳膜难受好久。他揉了揉干涩的眼睛，十分不情愿地爬起来，觉得脑子沉滞无比。</p><p>其实他的脑子一直就很沉滞，这种感受既然是生理上的也是心理上的。他身处的房间很狭窄，空气不很好，唯一的两扇窗户紧闭着——即使打开窗户也没用，外面的空气更加浑浊。这是一间大约只有三十平米的小屋子，屋子墙壁上泛黄的墙纸有好几处开始剥落，天花板上的水渍渗成奇怪的形状；一张老式的军绿色行军床摆在墙角，床腿用白漆写着编号；紧挨着行军床的是一张三合板制成的电脑桌，桌上摆着一台浅白色的电脑，机箱后面五颜六色的电线纠缠在一起，把它们自己打成一个古怪的死结，杂乱无章地蔓延到地板与墙角，仿佛常春藤一样。</p><p>阿瓦登走到电话前，慢慢坐到地板上，目光呆滞地盯着电话，手却没有动。这部古怪的东西是老式的按键式电话，大概是十几年前的款式，这是阿瓦登有一次去费城出差时偶尔在一家杂货店里买到的；他拿回家以后稍微修理了一下，发现居然还能用，这让他当时小小地兴奋了一阵子。</p><p>电话继续在响着，已经是第七声。阿瓦登意识到自己不得不去接听了。于是他弓下腰，用两个指头拈起电话，慢慢把电话放到耳边。</p><p>“请说出你的网络编号？”话筒里传来的声音并不急噪，事实上它也不带其他任何的感情色彩，因为这是电脑合成的人工智能语音系统。</p><p>“19842015”</p><p>阿瓦登熟练地报出一连串数字，同时开始觉得胸有些更闷了。说实话他并不喜欢这些空洞的电子声音，他有时候想，假如打过电话来的是一位声音圆润的女性该多好。阿瓦登知道这是一种不切实际的幻想，不过这幻想会让他的身体得到几秒钟的舒缓。</p><p>话筒里的声音仍旧在继续着。</p><p>“关于你在十月四日提交的网络论坛用户注册申请已经被受理，经有关部门审查后确认资格无误，请在三日内持本人身份证件、网络使用许可证及相关文件前往办理登记手续，并领取用户名及密码。”</p><p>“知道了，谢谢。”</p><p>阿瓦登谨慎地选择词语，同时努力挤出一副满足的微笑，好象话筒的另一侧有人在看着自己一样。放下电话，阿瓦登先是茫然地盯着它看了大约两分钟，然后站起来活动一下手腕，坐回到电脑前面，缓慢地推动了一下鼠标。</p><p>电脑屏幕“啪”地一声亮了起来，显示出一个登陆的界面，还有一行英文：“请输入你的网络编号和姓名。”阿瓦登将那八位数字敲进去，又输入了自己的名字，点击“登陆”。随即机箱的指示灯开始频繁地闪动起来，整个机器发出细微的噪音。</p><p>每一个使用互联网的人都有一个网络编号，没有这个编号，就无法连接进互联网络。每一个编号都是独一无二的，每个人只有一个；这是使用者在网上的唯一代号，既不能修改，也不能取消。这些编号分别对应着使用者身份证上的名字，因此19842015就是阿瓦登，阿瓦登就是19842015。阿瓦登知道有些记忆力不好的人会把自己的编号印在衣服的后面，那看起来颇为滑稽，也容易引发一些不正当的联想。</p><p>有关部门说使用网络实名制是为了规范网络秩序方便管理，杜绝因匿名使用网络而产生的一系列重大问题和混乱。阿瓦登不太清楚那一系列重大问题会是什么，他自己没试过用假名上网，他所认识的任何人里也不曾有人尝试过——事实上，从技术角度来说，他根本没办法匿名登陆互联网络，没有编号就没有权限上网，而编号则连接着他的详细档案，换句话说，没人能在网上隐藏自己。有关部门把这一切都考虑的很周详。</p><p>“有关部门”，这是一个语意模糊、但却有着权威与震慑力的词组。它既是泛指，又是确指，其所涵盖的意义相当广泛。有时候，它指的是为阿瓦登颁发网络编号的美国联邦网络管理委员会；有时候它是将最新通告及法规发到阿瓦登EMAIL信箱的服务器；还有时候它是监察网络的FBI特属网络调查科；总之一句话，有关部门是无处不在，无职不司的，总会在适当的时候出现，给予指导、监控或者警告，无论你是在网上还是网下。</p><p>简直就象是老大哥一样无微不至。</p><p>电脑仍旧在持续运转着，阿瓦登知道这得花上一阵子。这台电脑是有关部门配发给他的，具体型号和配置阿瓦登并不清楚，机箱是被焊死的，无法打开。于是他拿出一小瓶清凉油，用右手小拇指的指甲挑出一点抹在自己的太阳穴，然后从脚下堆积如山的杂物里翻出一个塑料杯子，从桌子旁的饮水机里接了半杯蒸馏水，就着一片镇痛片一饮而尽。蒸馏水穿过喉咙和狭长的食道滑进胃里，空泛的味道让他有些恶心。</p><p>音响里忽然传来一阵美国国歌的旋律，阿瓦登放下杯子，重新把目光投到电脑上去。这是已经连入互联网络的标志。屏幕上首先跳出来的是有关部门的通告，白底黑色四号字，里面陈述了使用互联网的意义以及最新的规章制度。</p><p>“缔造健康的互联网络，美国万岁！”</p><p>音响里传来激昂的男性呼声，阿瓦登不大情愿地跟着大声念了一遍。“缔造健康的互联网络，美国万岁！”</p><p>这段呼号持续了三十秒钟，然后消失，取而代之的是写着“缔造健康的互联网络”标语的桌面背景。另外一个窗口慢慢浮上开，上面开列出几个选项：工作、娱乐、电子信箱和BBS论坛。其中BBS选项呈现灰色，说明这项功能还没有开通。</p><p>整个操作系统简洁明了，这台电脑的浏览器没有地址输入栏，只是在收藏夹里有几个无法修改的的网站地址。理由很简单，这些网站都是健康向上的，假如其他站点和这些网站一样，那么只保留这些网站就够了；假如其他站点与这些网站不一样，那么就是不健康的，是低级趣味，不能保留。这是有关部门精心设计的，是为了公民的精神健康着想，生怕他们受到不良信息的侵染。</p><p>阿瓦登首先点开了“工作”，一连串和他工作相关的站点列表与相关软件在电脑上显示出来。阿瓦登是一名程序员，他每天的工作就是根据上级的要求编写程序。这份工作很无聊，不过可以保证他有稳定的收入。他不知道自己的源代码会被用到哪里去，上级也从来没有跟他说过。</p><p>他打算继续昨天的工作，但是很快发现自己很难继续下去。阿瓦登觉得今天的情绪比以前要烦躁，无法集中精神，大脑还是很呆滞，胸口仍旧发闷。他试图娱乐自己，但是他发现“娱乐”选项里只有纸牌与挖地雷，根据有关部门的说法，这是两个健康的游戏，没有暴力，没有色情，不会让人产生犯罪冲动，也不涉及任何政治色彩。据说美国境外也是有互联网络站点的，不过无法连上去，因为本国的互联网络自成格局，独立自主，普通人无法直接连接到国外——IE浏览器没有地址栏，就算知道地址也没有用处。</p><p>“您有一封新邮件。”</p><p>系统忽然跳出来提示，阿瓦登终于找到了可以暂停工作的理由，他很快移动鼠标到电子信箱的选项上，点开，很快一个新的界面出现了。</p><p>“To: 19842015</p><p>From：10045687</p><p>Subject: 模块、已经、完成、当前、项目、是否、开始。”</p><p>阿瓦登微微地叹了一口气，觉得有些失望。每一次他收到新的电子邮件，都希望能够有一次新鲜的刺激来撞击他日益迟钝的脑神经，每一次他都失望了。其实他早就知道这一点，只不过他觉得保持期待至少能够享受到几秒钟快感。就好象他期待着打电话过来的是一个圆润温柔的女性声音一样。不给自己一些渺茫的希望，阿瓦登觉得自己迟早会疯掉的。</p><p>这封信很简短，但是内容很充实。19842015是阿瓦登的网络编号，而10045687则是他的一位同事的编号，这种工作性质的信件通常都以编号相称。信的内容是几个不连续的英文单词，这是有关部门所提倡的一种电子邮件书写方式，因为这样可以方便软件检查信件中是否含有敏感词汇。</p><p>阿瓦登打开回信的页面，同时另开了一个窗口，打开一份名字叫做“网络健康语言词汇列表”的TXT文档。这是有关部门要求每一位网民所必须使用的词汇。当他们书写电子邮件或者使用论坛服务的时候，都得从这个词汇列表中寻找适合的名词、形容词、副词或者动词来表达自己想要说的话。一旦过滤软件发现网民使用了列表以外的词，那么这个词就会被自动屏蔽，取而代之的是“请使用健康语言”。</p><p>“屏蔽”是个专有名词，被屏蔽的词将不允许再度被使用，无论是在书信里还是口头都不允许。讽刺的是，“屏蔽”一词本身也是被屏蔽的词汇之一。</p><p>这个列表是经常更新的，每一次更新都会有几个词在列表上消失，于是阿瓦登不得不费劲脑汁寻找其他词语来代替那个被屏蔽掉的词语或者单字。比如在以前，“运动”这个词是可以使用的，但后来有关部门宣布这也是一个敏感词汇，阿瓦登只好使用“质点位移”来表达相同的意思。</p><p>他对照着这份列表，很快就完成了一封文字风格与来信差不多的EMAIL——健康词汇表迫使人们不得不用最短的话来表达最多意思，而且要尽量减少不必要的修辞，所以这些信件就好象是那杯蒸馏水一样，淡而无味，阿瓦登有时候想，他早晚也会和这些水和信一样腐烂，因为这些信是他写的，水是他喝的。</p><p>接下来阿瓦登启动检查软件先扫了一遍，确保自己没无意中加入什么敏感词汇。等这一切都完成后，他按下了发送键，邮件被送出去了。</p><p>阿瓦登没有留下备份，因为他的机器里没有硬盘，也没有软驱、光驱或者USB接口。这个时代宽带技术已经得到了很大发展，应用软件可以集中在统一的一个服务器中，个人用户调用时的速度丝毫不会觉得迟滞。因此个人不需要硬盘，也不需要本地存储，他们在自己电脑里写的每一份文档、每一段程序、甚至每一个动作都会被自动传送到有关部门的公共服务器中，这样便于管理。换句话说，阿瓦登所使用的电脑，仅仅具备输入和输出两种功能。</p><p>完成了这封信后，阿瓦登再度陷入了软绵绵的焦躁状态，这是一个连续工作了三天的程序员的正常反应。这种情绪很危险，因为它让人效率低下精神低迷，而且没有渠道发泄。“疲劳”、“烦躁”以及其他负面词汇都属于危险词汇，如果他写信给别人抱怨的话，那么对方收到的将会是一封写满“请使用健康语言”的EMAIL。</p><p>这就是阿瓦登每天的生活，今天比昨天更糟糕，但应该比明天还稍微好一点。事实上这个叙述也很模糊，因为阿瓦登自己并不清楚什么是“好一点”，什么是“更糟糕”。“好”与“坏”是两个变量，而他的生活就是一个定量，只有一个常数叫“压抑”。</p><p>阿瓦登推开鼠标，把脑袋向后仰去，长长地呼了一口气。（至少“呼”这个字还没有被屏蔽）这是空虚的表现，他想哼些歌，但却又不记得什么，转而吹了几下口哨，但那听起来与一只生了肺结核的狗差不多，只得做罢。有关部门象幽灵一样充斥在整个房间里，让他无法舒展自己的烦闷。就好象一个人在泥沼里挣扎，刚一张口就被灌入泥水，甚至无法大声呼救。</p><p>他的头不安分地转了几转，眼神偶尔撇到了摆在地板上的老式电话机，他忽然想到还必须要去有关部门申请自己的BBS论坛浏览许可证。于是他关掉“工作”和“电子邮件”窗口，退出了网络登陆。阿瓦登在做这些事的时候毫不犹豫，他很高兴能够暂时摆脱互联网络，在那上面他只是一串枯燥的数字和一些“健康词汇”的综合体。</p><p>阿瓦登找出一件破旧的黑色呢子大衣，那件大衣继承自他的父亲，袖口和领子已经磨损的很严重，个别地方有灰色的棉花露出来，但还是很耐寒。他把大衣套到身上，戴上一副墨绿色的护镜，用过滤口罩捂住嘴。他犹豫了一下，拿起“旁听者”别在耳朵上，然后走出家门去。</p><p>纽约的街上人很少，在这个时代，互联网的普及率相当地高，大部分事务在网上就可以解决，有关部门并不提倡太多的户外活动。太多的户外活动会导致和其他人发生物理接触，而两个人发生物理接触后会发生什么事则很难控制。</p><p>“旁听者”就是为了防止这种事而发生的，这是一种便携式的语言过滤器，当携带者说出敏感词汇的时候，它就会自动发出警报。每一位公民外出前都必须要携带这个装置，以便随时检讨自己的言语。当人们意识到旁听者存在的时候，他们往往会选择沉默，至少阿瓦登是如此。有关部门正逐步试图让网络和现实生活统一起来，一起“健康”。</p><p>这时候正是11月份，寒风凛冽，天空漂浮着令人压抑的铅灰阴云，街道两旁的电线杆仿佛落光了叶子的枯树，行人们都把自己包裹在黑色或灰色的大衣里面，浓缩成空旷街道上的一个个黑点飞快移动着。一层若有若无的烟雾将整个纽约笼罩起来，不用过滤口罩在这样的空气里呼吸将会是一件很有挑战的事情。</p><p>距离上一次离开家门已经有两个月了吧，阿瓦登站在公共汽车站的站牌下，不无感慨地想，周围的一切看起来很陌生，泛黄，而且干燥。那是上一次沙尘暴的痕迹。不过沙尘暴这个词也已经被屏蔽了，因此阿瓦登的脑海里只是闪过那么一下，思想很快就转移到别的事情上去了。</p><p>站在阿瓦登旁边的是一个穿着蓝色制服的高个男人。他先是狐疑地看了阿瓦登一眼，看到后者沉默地沉在黑色大衣里，他的两只脚交替移动，缓慢地凑了过去，装做漫不经心对阿瓦登说：</p><p>“烟，有吗？”</p><p>男人说，每一个字都说的很清晰，而且词与词之间间隔也足够长。这“旁听者”还没有精密到能够完全捕捉到每一个人语速和语调的程度，因此有关部门要求每一位公民都要保持这种说话风格，以方面检测发言人是否使用了规定以外的词汇。</p><p>阿瓦登转过头去，看了他一眼，舔舔自己干裂的嘴唇，回答说：</p><p>“没有。”</p><p>男人很失望，又一次不甘心地张开嘴。</p><p>“酒，有吗？”</p><p>“没有。”</p><p>阿瓦登又重复了一次这个词，他也已经很久没有收到烟和酒了，也许是缺货的关系吧，这是常有的事。不过有一点很奇怪，“旁观者”这一次却没有发出警报。以阿瓦登的经验，以往一旦烟、酒或者其他生活必需品发生短缺现象，这个词就会暂时成为被屏蔽掉的敏感词汇，直到恢复供给为止。</p><p>这个男人看起来很疲惫，红肿的眼睛是这个时代的人们普遍的特征，这是长时间挂在网上的关系。他的头发蓬乱，嘴边还留着青色的胡子碴，制服下的衬衣领口散发着刺鼻的霉味。能看的出，他也很久不曾到街上来了。</p><p>阿瓦登这时候才注意到，他的耳朵上空荡荡的，没有挂着那个银灰色的小玩意“旁听者”，这实在是一件严重的事情。不携带“旁听者”外出，就意味着语言不会再被过滤，一些不健康的思想和言论就有可能孳生，因此有关部门相当严厉地规定公民上街必须携带旁听者。而这个男人的耳朵旁却什么也没有。阿瓦登暗暗吃惊，一时间不知道是该去提醒还是装做没看到。他暗自想，也许向有关部门举报会更好。</p><p>这时候那个男人又朝他靠近了一点，眼神变的饥渴起来。阿瓦登心里一阵紧张，下意识地向后退去。这难道是一次抢劫？还是说他是个压抑太久的同性恋者？那个男人忽然扯住他的袖子，阿瓦登狼狈地挣扎却没有挣开。出乎他的意料，那个男人并没有进一步的动作，而是大吼一声，用一种阿瓦登已经不太习惯了的飞快语速向他倾泻起话语来。阿瓦登被这突如其来的爆发弄的莫名其妙，不知所措。</p><p>“我只是想和你多几句话，就几句，我很久没有说过话了。我叫斯多葛，今年三十二岁，记得，是三十二岁。我一直梦想有一套在湖边的房子，有一副钓鱼竿和一条小艇；我讨厌网络，打倒网管；我妻子是个可恶的网络中毒者，她只会用枯燥乏味的话叫我的网络编号；这个城市就是一个大疯人院，里面大疯子管着小疯子，并且把所有没疯的人变的和他们同样疯狂；敏感词汇都去他X的，老*受够了……”</p><p>男人的话仿佛一瓶摇晃了很久然后突然打开的罐装碳酸饮料，迅猛，爆裂，而且全无条理。阿瓦登惊愕地望着这个突然狂躁起来的家伙，却不知道如何应对；更可怕的是，他发现自己居然对他产生了一点同情，那种“同病相怜”式的同情。男人的话这时候已经从唠叨变成了纯粹谩骂，全部都是最直抒胸臆的那种。阿瓦登已经有五、六年不曾说过这些脏话，最后一次听到这些也是四年前。有关部门认为这都有碍精神文明，于是全部都屏蔽掉了。</p><p>而现在这个男人就在公众场合对着他大吵大嚷，似乎要将被屏蔽掉的敏感词汇一口气全倒出来。他的目光和手势并不针对任何人，甚至也不针对阿瓦登，更象是在一个人在自说自话。阿瓦登的耳膜似乎不习惯这种分贝，开始有些隐隐做痛，他捂着耳朵，拿不定主意是干脆逃掉还是……这时候，远处街道出现两辆警车，一路闪着警灯直直冲着这座公共汽车站而来。</p><p>警车开到站台旁时，男人仍旧在痛骂着。警车门开了，涌出了五、六名全副武装的联邦警察。他们扑过去将那个男子按在地上，用橡皮棍痛打。男人两条腿挣扎着，嘴里的语速更快了，骂出来的话也越来越难听。其中一名警察掏出一卷胶带，“嚓”地一声扯下一条向男人的嘴贴去。男人在嘴被胶带封住之前，突然提高嗓门，冲着警察痛快无比地喊了一句：“FUXKYOU, YOUSONOFBITCH！”阿瓦登看到他的表情由疯狂变成享受，面带着微笑，似乎完全陶醉在那一句话所带来的无上快感和解脱感中。</p><p>联邦警察们七手八脚地将男人送进了警车，这时才有一名警察走到了阿瓦登的跟前。</p><p>“他，是，你朋友？”</p><p>“我，不，认识。”</p><p>警察盯了他一阵，取下他耳朵上的“旁观者”查看记录，发现他并没有提及任何敏感词汇，于是重新给他戴回去，警告他说那名男子说的全部都是极度反动的词汇，要求他立刻忘掉，然后转身押着那男子离开了。</p><p>阿瓦登松了一口气，其实刚才他有一瞬间涌现出一种冲动，也想在这空旷的街道上大喊一声“FUXKYOU, YOUSONOFBITCH”那一定很爽快，他心里想，因为那男子说出这句话的时候表情很享受。不过他也知道，这也是妄想的一种，“旁观者”紧帖在耳朵上的冰凉感觉时刻提醒着他。</p><p>街上很快就恢复了冷清，十分钟后，一辆公共汽车慢吞吞地开进站里，锈迹斑斑的车门哗啦一声打开，一个电子女声响彻整个空荡荡的车厢：“请乘客注意文明用语，严格按照健康词汇发言。”</p><p>阿瓦登把自己缩进大衣，压抑住自己异样的兴奋，决定继续保持沉默下去。</p><p>大约过了一个小时，公共汽车到了目的地。从破碎的车窗玻璃里吹进来的寒风让阿瓦登脸上挂起一层暗灰色的霜气，面部被风中的沙砾和煤渣刮的生疼。他听到电子女声报出了站名，就站起身来，象一条狗一样抖抖身上的土，走下车去。</p><p>车站对面就是阿瓦登要去的地方，那是有关部门负责受理BBS论坛申请的网络部。这是一间五层的大楼，正方形，全水泥混凝土结构，外表泛灰。如果没有那几个窗户的话，那么它的外貌将与水泥块没有任何区别：生硬、死气沉沉，让蚊子和蝙蝠都退避三舍。</p><p>BBS论坛是一种奇特的东西，从理论上来讲它完全多余，BBS的功能完全可以由EMAIL新闻组来取代，后者更容易管理和审查。而且申请使用BBS论坛资格不是件容易的事，申请人必须要通过十几道手续和漫长的审查才能有浏览资格，浏览资格三个月才会被允许在指定论坛发布帖子，至于自己开设BBS则几乎是不可能。</p><p>因此真正对BBS有兴趣的人少之有少。阿瓦登当初之所以决定申请BBS论坛资格，纯粹是因为他那种模糊但却顽强的怀旧心态，就好象他从杂货店里买的那部老式电话一样。他也不知道自己为什么会自找麻烦，也许是为了给生活带来些刺激，还是说为了强调自己和曾经旧时代的那么一点点联系，也许两者兼有之。</p><p>阿瓦登恍惚记得在他小的时候，互联网与现在并不太一样。并不是指技术上的不同，而是一种人文的感觉。他希望能通过使用BBS论坛回想起一些当年的事情。</p><p>阿瓦登走进网络部的大楼，大楼里和外面一样寒冷，而且阴森。走廊里没有路灯，蓝白色调的两侧墙壁贴满了千篇一律的网络规章条文与标语，冰冷的空气呼吸到肺里，让阿瓦登一阵痉挛。只有走廊尽头的小门缝隙里流泻出一丝光亮，小门的上面挂着一块牌子，上面写的是“网络部BBS论坛科。”</p><p>一走进这间屋子，阿瓦登立刻感觉到一阵温洋洋的热气。屋子里的暖气（或者是空调）开的很大，让阿瓦登冻麻了的手脚和脸麻酥酥的，有些发痒，他不禁想伸出手去挠挠。</p><p>“公民，请您站在原地不要动。”</p><p>一个电子女声忽然从天花板上的喇叭里传来，阿瓦登触电似地把手放下，恭敬地站在原地不同。他借这个机会观察了一下这间屋子。这屋子准确来说应该是一个狭长形的大厅，一道拔地而起的大理石柜台象长城一样将房间割裂成两部分，柜台上还装着一排银白色的圆柱形栅栏，直接连到天花板。屋子里没有任何装饰，没有观赏植物，没有塑料鲜花，甚至没有长椅和饮水机。</p><p>“缔造健康的互联网络，美国万岁。”</p><p>阿瓦登跟着声音重复了一遍。</p><p>“请前往八号窗口。”</p><p>电子女声的语调很流畅，因为这是电脑制作出来的，因此没有敏感词汇的限制。</p><p>阿瓦登转头看到在自己右手边的不远处，大理石柜台上的液晶屏幕显示着八号的字样。他走过去，拼命抬起头，因为柜台实在太高了，他只能勉强看到边缘，而无法看到柜台另一侧的情形。不过他能听到，一个人走到柜台对面，坐下去，并有翻动纸张与敲击键盘的声音。</p><p>“请把文件放入盒子里。”</p><p>柜台上的喇叭传来命令。出乎意料，这一次在喇叭里的声音却变了。虽然同样冷漠枯燥，但阿瓦登还是能分辨出它与电子女声的不同——这是一个真正的女性的声音。他惊讶地抬头望去，却什么都看不到，柜台太高了。</p><p>“请把文件放入盒子里。”</p><p>声音又重复了一次，语气里带着一丝烦躁，似乎对阿瓦登的迟钝很不满。</p><p>“是的，这是真正的女声……”阿瓦登想，电子女声永远是彬彬有礼不带任何感情色彩的。他把相关的电子身份证、网络许可证、网络编号和敏感词汇犯罪记录等一系列个人资料卡片一起放进柜台外的一个小金属盒子里，然后把盒子插进柜台上一个同样大小的凹槽中，关好门。很快他听到“唰”的一声，他猜测这也许是对面的人——也许是个女人——将盒子抽出去的声音。</p><p>“你申请BBS服务的目的是什么？”</p><p>喇叭后的女声浸满了纯粹事务性的腔调。</p><p>“为了、提高、互联网络、工作效率、为了、缔造、一个、健康、的网络、环境，更好地、为、祖国、做出、贡献。”</p><p>阿瓦登一字一句地回答，心里知道这只是一道官方程序，只需要按标准回答就可以。</p><p>对面很快就陷入沉默，大约过了十五分钟，喇叭再度响起。</p><p>“最后手续确认，你已经获得BBS论坛浏览权。”</p><p>“谢谢。”</p><p>“砰”的一声，金属盒子从柜子里弹了出来，里面除了阿瓦登的证件以外还多了五张小尺寸光盘。</p><p>“这是有关部门核发给你的BBS论坛统一用户名与密码，BBS论坛列表、互联网BBS论坛使用指南及相应法规、以及最新健康网络词汇列表。”</p><p>阿瓦登向前踏了一步，从盒子里将这些东西一股脑全拿出来，揣进大衣的大兜里。那些东西其实是可以全部放在同一张光盘里的，不过有关部门认为每一张光盘装一份文件有助于用户理解这些文件的严肃性和重要性，并产生敬畏。</p><p>他心里盼望着那个喇叭能再说两句。让他失望的是，对面传来的是一个人起身并且离开的声音，从脚步声的韵律判断，阿瓦登愈发相信这是一名女性。</p><p>“手续办理完毕，请离开网络部回到自己的工作岗位上。”</p><p>甜美空洞的电子女声从天花板上传来，阿瓦登厌恶地抽动鼻翼，拿手揉了揉，转身离开这间温暖的大厅，重新进入到寒冷的走廊。</p><p>在回家的路上，阿瓦登蜷缩在公共汽车上一动不动，顺利申请到BBS的使用权让他有些虚无缥缈的兴奋。他闭着眼睛，找了一个合适的角度躲开破窗而入的寒风，右手在兜里不断摩挲那一系列光盘，还在怀念着那一个神秘的女声。</p><p>如果能再一次听到该多好，他不能抑制自己这样的想法，同时用拇指的指肚在光盘上轻轻地摩擦，幻想这几张光盘也曾经被她的手触摸过。他兴奋的几乎也想破口大骂一句“FUXKYOU, YOUSONOFBITCH”，真奇怪，那名男子的骂声在他的记忆里根深蒂固，并时不时不自觉地滑到唇边。</p><p>忽然，他的手指在光盘上发觉到一丝异常的感觉。阿瓦登下意识地朝四周望去，确认周围一个乘客也没有后，他小心翼翼地把光盘全拿出来，就着窗外的光亮仔细端详。</p><p>阿瓦登很快注意到，在装有BBS论坛列表的光盘背面，被人用指甲轻轻地划了一道刮痕。这条刮痕很轻，如果不是阿瓦登仔细地抚摩光盘的话，是很难发觉到的。这条刮痕很奇特，是一条直线，而在这条直线末端的不远处，则是另外一条极短的刮痕，似乎刻意想弯成一个圆点。整体看上去就好象是一个叹号，或者倒过来说，象是字母i。</p><p>很快他在其他四张光盘上也发现了类似的刮痕，它们造型都不同，但都似乎代表着某种符号。阿瓦登回想起喇叭里那个女声最后一句提到过的文件顺序，于是把这五张光盘按照BBS论坛统一用户名与密码、BBS论坛列表、互联网BBS论坛使用指南、相应法规、以及最新健康网络词汇列表的顺序排列好，接着依次把那五道刮痕用手指临摹到汽车窗户上。很快那些刮痕构成了一个英文单词：</p><p>title</p><p>题目？这是什么意思？</p><p>阿瓦登看着这个单词莫名其妙，这究竟是纯属无意的痕迹，还是有人刻意为之？如果是有人刻意为之，他这么做的用意是什么？</p><p>这时候汽车停住了，又有几名乘客走上车来。阿瓦登挪动一下身体，不让他们看到自己在车窗上写出来的字迹，然后装做打呵欠的样子抬起袖子，轻轻把那五个字母擦掉。</p><p>阿瓦登暗自庆幸，如果他没有在现在发现这些光盘上的痕迹，那么以后就永远没有机会发觉了。按照规定，个人电脑是不允许使用任何存储存设备的，因此阿瓦登的电脑并没有光驱。他下一步所要做的是将这些光盘送交到管区网络安全部，由他们将光盘内资料登陆到服务器中，再转发给阿瓦登。这是为了防止个人私自在家里制造、阅读或者传播黄色或者反动信息，网络安全部发出的通告是这么解释的。联邦的网络警察经常会突入到个人家中进行临时检查，看用户是否非法拥有信息贮存设备，阿瓦登曾经亲眼见过一个邻居被警察带走，原因仅仅是因为他私自藏了一张光盘在家里——其实他只是打算拿那个当茶杯垫用。那个邻居再没回来过。</p><p>无论这些符号代表的是什么意思，它都是一种全新的体验，这让阿瓦登感觉到兴奋。怀旧与渴望新奇是阿瓦登生活在这个时代的两根精神支柱，否则他会与这座城市一样变的僵硬，然后窒息而死。</p><p>他先来到网络安全分部，将光盘交给那里的负责人，负责人反复地检查光盘和阿瓦登的表情，好象所有使用BBS论坛的人都不可信赖一样。末了负责人终于找不到什么破绽，只得将光盘收下，然后举起右手，阿瓦登和他一起高呼“缔造健康的互联网络”。这句话是唯一被允许可以连贯着被说出来的句子。</p><p>回到家里，阿瓦登脱掉大衣，摘了过滤口罩，将旁观者扔到了行军床上，然后整个人也倒进枕头里。每次出去外面都会让他疲劳，这一半是因为他孱弱的肉体已经不大适合室外活动；另外一半原因是因为他必须花费大量的精力来应付旁观者。</p><p>过了四十分钟，他才悠悠地醒过来，头还是和平常一样地疼，胸口还是一如既往地闷。胡乱吃了一点东西以后，阿瓦登爬到电脑桌前，打开电脑，按程序登陆上网络，习惯性地先检查了一遍信箱。</p><p>信箱里有七、八封新的信件，其中两封是同事发来的事务信。另外五封则是网络安全部发给他的，内容就是他送交的那几张光盘。</p><p>阿瓦登打开了包含有BBS论坛的用户名、密码和BBS论坛列表的两封信。他看到自己的论坛通用用户名叫做19842015，和自己的网络编号完全一样，不由得有些失望。他依稀记得在小的时候，BBS论坛的用户名是可以自己决定的，而且每一个论坛都可以不同，一个人在网上并不单只是一串枯燥数字。</p><p>小时候的记忆往往是跟童话和幻想混杂在一起，未必与实际相符。现实中你只能使用有关部门指定的用户名和密码，理由很简单，用户名和密码内也可能含有敏感词汇。</p><p>阿瓦登又打开了那份BBS列表，全部都是有关部门开设的官方论坛，没有私人的——事实上个人能够合法持有的电脑设备从技术上来说也无法架设新BBS——这些论坛的主题各有侧重点不同，但基本上是围绕着如何更好响应国家号召，缔造健康互联网络来说的。比如其中一个电脑技术论坛，主题就是如何更好地屏蔽掉敏感词汇。</p><p>居然在这些论坛中还有一个是关于游戏的。里面正在讨论的是一个如何帮助别人使用健康词汇的网络游戏，玩家可以操纵一名小男孩在街上侦察，看是否有人使用了敏感词汇，小男孩可以选择上前指责或者通知警察，抓到的人越多，小男孩得到的褒奖就越高。</p><p>阿瓦登随便打开了几个论坛，里面的人都彬彬有礼，说话很“健康”，就好象街上的那些行人一样。不，准确地说，比街上的气氛还要压抑。在街上的人也许还有机会保留一下自己的小动作，比如阿瓦登刚才在公共汽车上就偷偷地写了TITLE五个字母；而在网上论坛，人的最后的一点隐私也全被暴露出来，有关部门随时可以调看你的一切行动，无从遁形，这就是科学技术发展所带来的进步。</p><p>一阵失落和失望袭上阿瓦登的心头，他合上眼睛，把鼠标甩开，重重地向后靠去。原来他天真地以为BBS论坛也许会少许宽松一些，现在看来甚至比现实中更叫人窒息，他感觉到自己好象陷入沉滞的电子淤泥之中，艰于呼吸。“FUXKYOU, YOUSONOFBITCH”再一次涌现到他的唇边，强烈无比，要化好大的力气才控制住。</p><p>忽然，他又想到了那个神秘的title，那究竟是什么意思？那五张光盘里或许隐藏着什么？也许这跟title有关系？</p><p>阿瓦登想到这里，把目光重新转向电脑屏幕，仔细去看网络安全部发来的五封信的title部分。五张光盘各隐藏着一个字母，凑到一起就是title，那么按照这个方式，那五封EMAIL的title凑到一起，就变成了一句话：去用户学习论坛。”</p><p>阿瓦登记得刚才他确实看到其中一个论坛的名字叫做“用户学习”，于是他抱着姑且一试的心态连接到这个论坛去。他希望这并不是一个巧合。</p><p>用户论坛是一个事务性论坛，里面是一些关于BBS用户资料的投诉帖和管理帖，斑竹的是一个叫19387465的人；发帖的人和回帖的人数量都很少，里面冷冷清清的。阿瓦登打开帖子列表，按照刚才的规律去搜寻每一个帖子的标题，并把它们综合到一起，很快他就得到了另外一句话：</p><p>“每周日辛普森大楼5层B户。”</p><p>又是一个谜团，阿瓦登想。但这却坚定了他的信心，这其中必定隐藏着玄机。光盘、EMAIL和BBS论坛，连续三次都可以通过首词组组合的方式得到暗示，绝非巧合。</p><p>究竟是什么人会在有关部门的官方文件中隐藏着这样的信息呢？每周日在效率大楼5层B户又会发生什么事情呢？</p><p>阿瓦登终于找到了久违的兴奋感，未知事物的新奇刺激着他麻木很久的神经。更重要的是，这种在有关部门正式文件中玩弄的文字技巧，叫他有一种喘息的快感，仿佛一个密不透风的铁面罩上几个透进空气的小孔。</p><p>营造健康的互联网络。</p><p>FUXKYOU, YOUSONOFBITCH。</p><p>阿瓦登盯着屏幕上的桌面背景，用嘴唇比出了那句粗话的口型，并且比出了中指。</p><p>在接下来的日子里，阿瓦登一直处于一种潜藏的兴奋状态，就象是一个摆出无辜表情嘴里却藏着糖果的小孩子，在大人转身过去之后露出狡黠的笑容，尽情享受心中藏有秘密的乐趣。</p><p>日子一天一天地过去，健康词汇在列表里又少了几个，窗外的空气又浑浊了几分，这已经是生活的常态。阿瓦登自己已经开始拿网络健康词汇表当日历来用，划掉三个词就证明过了三天，划掉七个就证明过了一周，于是周日终于到来了。</p><p>阿瓦登抵达辛普森大楼的时间是中午，暗示的句子里并没有指明时间，阿瓦登认为在中午前往应该是比较可以接受的。当穿着深绿军大衣，耳朵上别着旁观者的阿瓦登来到辛普森大楼的入口时，他的心开始忐忑不安地跳跃起来。他在上一星期设想了无数种可能发生的情景，而现在这个谜底就要揭晓了。无论在周日效率大楼会发生什么，也不会比现在的生活更加糟糕，阿瓦登心里想，所以他并不怎么害怕。</p><p>他走进大楼内部，发现这里的人也很少，空旷的走廊里只听到他哒哒的脚步声与回音。一部老电梯里贴着“缔造美好网络家园”的广告，以及一个充满了正义感的男性头像海报，背景是星条旗，他在纸里用右手食指指向观看者，头上写着一行字是“公民，请使用健康词汇。”阿瓦登厌恶地转过身去，发现另外一侧也贴着同样的海报，避无可避。</p><p>值得庆幸的是五楼很快就到了，电梯的门一开，对面的门上就赫然挂着B户的牌子。门是掉了漆的绿色，门框上还点了几滴墨水，一部简易的电子门铃挂在右上角。</p><p>阿瓦登深深吸了一口气，伸手去按电纽。</p><p>电铃响起，很快屋子里传来脚步声。阿瓦登觉得这脚步的韵律很熟悉，似乎是在哪里见到过。门“咔拉”一声被打开一半，一名年轻女子一手握着把手，把身体前倾望着阿瓦登，警惕地说：</p><p>“你，找谁？”</p><p>女子疑惑地问道。阿瓦登一下子就认出了她的声音，就是那个在网络部BBS论坛科柜台后面的女性。她很漂亮，穿着墨绿色绒线衫，头上梳着这时代流行的短发，皮肤特别的白，只有嘴唇能看到一些血色。</p><p>看着女子的眼神，一瞬间阿瓦登不知道该说什么好，犹豫了一下，他举起右手，轻声回答说：“title。”</p><p>阿瓦登不知道这句话能否奏效，也不知道自己是否真的找对了地方，但这是他唯一能想到的回答了。他紧张地望着那女子，假如那女子忽然报警，那么自己就会被抓起来仔细审问为什么无缘无故跑到陌生人家里。“肆意游走罪”只比“使用敏感词汇罪”轻那么一点。</p><p>女子听到他这么说，脸上还是毫无表情，只是把头幅度很轻微地点了一下，右手谨慎地做了一个“进来”的手势。阿瓦登刚要张口，那女子严厉地瞪了他一眼，吓的他把话又吞回去了，乖乖地跟着她进了屋子。</p><p>一进屋子，女子首先做的就是把门关好，然后拉起来一层铅灰色的门帘挡在门口。阿瓦登不安地眨着眼睛，趁她拉门帘的时候环顾四周。这屋子是标准的两室一厅，在厅里摆放的是一套双人沙发与一个茶几，茶几上居然还有几束红紫色的塑料花。靠墙是电脑桌和电脑，墙上挂着普通的白色日历，但被主人用粉红色的纸套了边，看起来颇为温馨。一盏粗笨的日光灯从天花板上垂下来，上面象是恶作剧一样挂了几缕绿色的电线，象是垂下藤蔓的葡萄架。阿瓦登注意到厅口的鞋架上有四双鞋，尺码不同，说明今天的客人并不只他一个。</p><p>阿瓦登正踌躇不安，忽然女子从背后拍了拍他的肩膀，示意他朝里面走。于是两个人穿过客厅另一侧的短小回廊来到其中一间卧室。卧室上挂着同样质地的铅灰色帘子，女子伸手举起帘布，推开了门。阿瓦登迈了进去，首先映入眼帘的是三名面带微笑的人类，以及一间用真正的鲜花装点的房间。屋子里有很多旧日记忆里的古老物品，比如一幅印象派的油画、一尊乌干达木雕，甚至还有一个银烛台，唯独没有电脑。</p><p>他正在迟疑，女子也进了屋子。她谨慎地拉好门帘关上门，将耳边的旁观者取下，回过身来对阿瓦登用曼妙的声音说道：</p><p>“欢迎加入说话会！”</p><p>“说话会？”</p><p>出于习惯，阿瓦登并没有把这三个字说出口，因为他不确定是否“健康”，只是用眼神表示自己的疑惑。</p><p>“在这里你可以随便说话，这个该死的东西不会起作用的。”女子把自己的旁观者晃了晃，那个小东西象死掉了一样，对女子句子里两个敏感词汇“随便”和“该死”充耳不闻。</p><p>阿瓦登一下子想到上星期在公共汽车站前碰到的男子，如果他摘下旁观者，会不会也会落到同一境地呢？那女子见他犹豫不决，指了指门口的铅灰色门帘说：“放心好了，这里是可以屏蔽掉旁观者信号的，不会有人觉察到。”</p><p>“你们，是什么，人，这，是，哪里？”</p><p>阿瓦登一边摘下耳朵上的旁观者，一边小声说道，语调还是改不了那种有关部门规定的说话方式。</p><p>“这里是说话会，是一个完全自由场所，在这里你可以畅所欲言，请不要拘束。”</p><p>另外一个人起身对他说道，这是一名瘦高的中年男子，鼻梁上的眼镜非常地厚。</p><p>阿瓦登嗫嚅着，却找不到发音的焦点，在四个人的注视下显得窘迫不堪，脸都要红起来。女子同情地看了他一眼：“可怜的家伙，不用太紧张，每一个刚到这里的人都是这样。慢慢就习惯了。”</p><p>她把手搭到阿瓦登的肩上：“我们其实见过的，当然，我见过你，而你没见过我。”她一边说，一边将自己的头发解下来，原来她留的是一头齐肩的乌黑长发，头发披下来的一瞬间阿瓦登觉得她真的很美。</p><p>“我……我记得你，记得你的声音。”阿瓦登终于说出了一句完整的话，虽然不够流畅。</p><p>“是吗，那可太好了。”女子笑起来，拉着他的手，让他坐到沙发上，递给他一杯水。阿瓦登注意到这是一个款式古老的茶杯，上面还刻着花纹，杯子里的水带着浓郁的香气，阿瓦登尝了一点，那种甜丝丝的味道对喝惯纯净水的舌头来说刺激格外地大。让他觉得浑身一下子被注进了许多活力。</p><p>“弄到这个可不容易，我们也不是每周都能喝到。”女子坐到他身边，两只乌黑的眼睛注视着他，“你是怎么知道这个集会的？”</p><p>阿瓦登把发现光盘暗示的过程说了一遍，其他四个人都赞许地点了点头。“果然是个聪明人，脑筋还没被陈腐的空气腐蚀掉。”一个三十多岁的胖子称赞道，他的嗓门大的要命。那个戴眼镜的中年人把两只手交叉在一起，表示赞同。</p><p>“这正是天生的说话会成员，聪明、敏锐，而且不甘屈从于沉默。”</p><p>“那么。”胖子提议，“先让我们鼓掌欢迎说话会的新成员吧。”</p><p>于是四个人鼓起掌来，小小的屋子里响起一片掌声。阿瓦登羞涩地举起杯子做回应，他还不太习惯这样的场面。等到掌声稍息，他抬起头怯生生地问道：</p><p>“可以问个问题吗？说话会到底是什么？”</p><p>带他进屋的女子伸出食指，在他鼻子前两公分的地方比了一比，解释道：</p><p>“说话会，就是可以畅所欲言的集会。在这里你不必顾忌什么，说出任何你想说的东西。这里没有敏感词汇，也没有健康互联网络。这里是绝对自由的空间，你可以尽情释放你的灵魂，舒展你的身体，没有任何禁锢与束缚。”说着说着，她的声音变的高亢、奔放，里面饱含了许多早已经被屏蔽掉的词汇，阿瓦登不曾听到这样流畅连贯的话语很久了。</p><p>“我们的宗旨就是，说话，就这么简单。”中年人扶扶眼镜，补充道。</p><p>“可是，要说些什么呢？”阿瓦登又问道。</p><p>“任何事情，你心里想的任何事情都可以说出来。”中年人露出宽和的笑容，“尤其是那些被美国政府限制的思想。”</p><p>这可真是一个大胆的集会啊，这分明就是犯罪，阿瓦登心想，但他发觉自己却被这种犯罪慢慢地吸引住了。</p><p>“当然，有件事我们会事先说明。说话会是危险的，每一个成员都冒着被有关部门拘捕的风险。联邦执法人员也随时可能破门而入，以非法集会以及非法使用不合法词语的名义把我们抓起来。你现在有权拒绝加入，并且离开。”</p><p>阿瓦登听到女子的警告，心里一度犹豫起来。但一想到此刻离去的话，那么又要开始持续那种窒息的泥沼生活，他就难以压抑自己的烦闷。阿瓦登第一次发现，原来“说话”对他来说是一个致命的诱惑，他先前并不知道自己原来是如此地渴望着说话。</p><p>“我不会离开的，我要加入你们，说话。”</p><p>“那太好了。唔，那么不妨就从自我介绍开始吧。”女子高兴地说，同时站起身来，把右手搭到胸前，“从我开始。我的名字叫阿尔特弥斯，至于网络编号和身份证号码，让他们见鬼去吧！谁会去管那个！我有我自己的名字，我不是数字。”</p><p>她的话让所有人包括阿瓦登都笑了起来。接着她继续说道：“不过，这其实只是一个假名，这是希腊神话里的女神。”</p><p>“假名？”</p><p>“是的，和我户籍本上的名字是不同的。”</p><p>“可是，为什么？”</p><p>“你不会对自己在档案里的名字厌倦吗？我想起一个自己喜欢的名字，哪怕只有一次机会也好，自己想叫什么就叫什么。在这个说话会里的每一个人都有一个自己喜欢的名字，我们彼此拿这个称呼。”</p><p>阿瓦登若有所思地点点头，他很理解阿尔特弥斯的想法。事实上当他在使用网络论坛的时候，也希望能够自己取一个称心如意的名字，而不是被分配一个用户名。</p><p>通过介绍，阿瓦登了解到阿尔特弥斯是网络部BBS论坛管理科的职员，今年23岁，未婚，最讨厌蟑螂和蜘蛛，喜欢缝纫与园艺，屋子里的花就是她偷偷从城市边缘摘回来的。</p><p>接下来是那名中年人，他自我介绍说名字叫兰斯洛特，41岁，是城市电厂的一名工程师；兰斯洛特这名字出自英国的亚瑟王传说，是一名忠贞的骑士。他有自己的老婆和两个孩子，一男一女；男孩三岁，女孩四岁，他们最喜欢吃的就是柠檬味道的水果糖。说到这里，兰斯洛特说希望下次聚会能把他们也带了，孩子们正是学说话的时候，他想教给他们真正的说话。</p><p>那个三十多岁的胖子是网络部的一名网管，叫瓦格纳。这个身份让阿瓦登吃惊不已，他的印象里网管都是些绷着脸全无表情的冷漠生物，但眼前的瓦格纳脸圆滚滚的，油光锃亮，嘴边两条翘起的小胡子神气十足。他喜欢的是雪茄和歌剧，利用网管的特权这两样东西都不难弄到。</p><p>“这个能屏蔽掉信号的门帘就是他弄的。”阿尔特弥斯补充说，瓦格纳冲她做了个“乐意为您效劳”的手势，然后点燃了雪茄，把它放到嘴里，很快屋子里就笼罩起一片稀薄的烟雾。</p><p>说话会的第四名成员是一位穿着黑色制服的女性，今年刚满三十。她的名字是杜拉丝，城市日报（那个时代的报纸已经全部都数字化了）的编辑，她比阿尔特弥斯还瘦，颧骨高高耸起，眼窝身陷，两片薄薄的嘴唇即使在最说话的时候也很少分开，看不到牙齿。爱好是饲养狗和猫，尽管她并没有养。</p><p>“那么，到你了。”阿尔特弥斯对阿瓦登说。阿瓦登想了想，结结巴巴地把自己的情况说了一遍，当谈到自己的爱好时候，他一时间居然想不到自己喜好什么，似乎什么都没有，在那之前他甚至从来没想过。</p><p>“那，你最想做的是什么事呢？”阿尔特弥斯把手再一次放在他肩上，诱导着问道。</p><p>“真的什么都可以？”</p><p>“什么都可以，在这里没有任何限制。”</p><p>阿瓦登觉得自己终于找到机会了，他咳了一声，抓抓头，脱口而出一句响亮的叫喊：“FUXKYOU, YOUSONOFBITCH！”</p><p>在一瞬间，在座的四个人都被他这句话震惊了。瓦格纳率先反应了过来，他先叼住雪茄，用力鼓掌，然后用右手把雪茄取下来，张嘴大声地赞叹道：“真棒，痛快，这简直是最完美的入会誓词。”</p><p>“我宁可听十遍这样的脏话，也不想再去碰那个乏味的电子女声。”兰斯洛特也是一脸陶醉，毫不掩饰自己对电子女声的厌恶。而阿尔特弥斯和杜拉丝全都咯咯地笑起来，杜拉丝发现自己的笑容幅度大了一点，不好意思地把嘴掩住。阿瓦登觉得他们与其说是觉得新奇，不如说是在享受这句脏话所带来的对体制的蔑视与挑战。</p><p>“那你叫希望自己叫什么名字呢？” 阿尔特弥斯歪着头问。</p><p>“唔……王二。“ 阿瓦登沉吟了一下，回答说。这是一个中式的名字，他以前有一个中国人朋友，喜欢讲故事，故事里的主角名字总是叫王二。</p><p>屋子里的气氛现在完全融洽了，大家都开始谈些比较自然的话题，每个人都摆出了最舒服的姿势，阿尔特弥斯不时拿起茶壶来为大家续水。阿瓦登紧张的心情逐渐放松下来，他感觉到自己的脑子前所未有地轻松。</p><p>“你知道的。”阿尔特弥斯又给他倒了一杯甜水，“我们一直想把说话会保持在一定规模，平日是没有办法畅所欲言的，我们需要空间。麻烦的是，我们没办法公开征集会员，又不可能直接通过物理接触去寻找，那风险太大。于是兰斯洛特就设计了一套暗示系统，只有发现这些暗示的人才能知道本会的存在。”</p><p>“这套系统考虑到的还不止是安全问题。”兰斯洛特把自己的眼镜摘下来仔细擦拭了一下，得意地说，“这其实也是一个会员资格验证。说话会所吸纳的成员，必须有智慧，有头脑，内心渴望激情，并且对自由有着渴望。”</p><p>瓦格纳用两根指头夹着雪茄，在事先准备好的烟灰缸里弹了弹烟灰，大声说道：“据我的经验，申请BBS论坛服务的人，大多数都是为了怀旧，或者说渴望一些新鲜的东西，这样的人往往都怀有激情，认为BBS论坛也许能给他们一些与现实不一样的东西——当然，事实上并非如此，美国政府对BBS论坛的管理甚至严厉过电子邮件——这暗示着他们心里渴望解脱束缚。因此我们将暗示隐藏在申请BBS论坛的光盘之中，只有申请人才有机会接触到这些暗示。而只有那些有智慧、观察敏锐的人才会发觉到这些暗示的存在，并顺利解读出来，找到这里。”</p><p>“归根到底，说话会也不过是一群渴望自由说话的秘密小团体罢了。”兰斯洛特笑道。</p><p>“你是第二个找到说话会的人，第一个是杜拉丝小姐。”</p><p>阿尔特弥斯告诉阿瓦登。阿瓦登敬佩地看了杜拉丝一眼，后者淡淡地回答道：“这没什么，这是我的工作，我的工作就是摆弄文字。”</p><p>阿瓦登想到上一周在公共汽车站碰到的那个疯狂男子，于是把这件事讲给其他成员听。听完之后，兰斯洛特摇了摇头，从嘴唇里滑出一声叹息：</p><p>“这样的事情我也是见过的，我的一个同事就是如此。所以说话会的存在是必要的，这是缓解压力的阀门。长时间的敏感词汇限制会让人都疯掉的，因为他们既无法思考又没办法表达。”</p><p>“这正是美国政府有关部门所希望看到的，这样只有傻瓜能够存活下来，一个全是傻瓜的社会是稳定的。” 瓦格纳费力地把自己肥胖的身躯挪了一下位置，轻蔑地说。</p><p>“你也是有关部门的一分子，瓦格纳先生。”阿尔特弥斯一边往茶杯里续了些热水，一边抬头轻声说道。</p><p>“阿尔特弥斯小姐，我只是一个能比普通人多使用几个敏感词汇的普通人而已。”</p><p>大家都笑了起来。阿瓦登从来没有见过这么多的人说这么多的话，这是前所未有的奇妙经验。他惊讶地发现自己居然很快就融进了这个小圈子里，隔阂与陌生感很快就消失了；同时消失的还有胸闷与头晕等习惯性的毛病。</p><p>很快话题就从说话会本身扩展到了更加宽泛随意的话题，阿尔特弥斯唱支歌，兰斯洛特说了几个笑话，杜拉丝则给大家讲了美国南部诸州的风土人情；瓦格纳甚至还唱了一段歌剧，虽然阿瓦登一个字也听不懂，但他一点也不吝惜掌声。在这个城市的某一个被屏蔽掉的角落里，五个不甘沉默的人正在享受着在这个时代视为奢侈品的事情——说话。</p><p>“王二，你可曾看过《1984》？”</p><p>阿尔特弥斯忽然问道，她就靠着阿瓦登坐下，阿瓦登摇摇头，反问道：“这是网络编号的一段么？”</p><p>“这是一本书的名字。”</p><p>“书？”阿瓦登听到这个名词，头摇的更大了。这是个古老的名词，在这个电脑技术非常发达的时代，网络可以承载一切信息，任何人都可以在网上图书馆查到电子版；因此有关部门认为实体书籍变成了一种没有必要存在的浪费，实体书也就逐渐消亡了。瓦格纳对此的评论是：“有关部门喜欢电子书籍的心情是可以理解的，电子书籍的话，只需要FIND和REPLACE两个命令就可以消灭掉全部不健康词汇，替一本书消毒；而实体书籍的校对与修订却是件旷日持久的工作。”</p><p>“这是一本伟大的书，是旧世界哲人们对我们这个时代的预言。”阿尔特弥斯认真地说。“它很早以前就洞察到了肉的束缚与解脱，灵的束缚与解脱，这是说话会的基石。”</p><p>阿瓦登不无惊奇地发现他的网络编号开头恰好是这这本书名字：19842015。</p><p>“那么，该怎么样才能看到呢？”阿瓦登盯着阿尔特弥斯乌黑色的眼睛问。</p><p>“我们也无法找到纸质版，网络图书馆不可能存在这样的书。”兰斯洛特摇摇头，然后重新露出笑容，左手向着杜拉丝摆了个请的姿势，“但我们的杜拉丝小姐应该为她的记忆力而自豪，她在很早已经有幸阅读过这两本书，并且能够记得里面的大部分文字。”</p><p>“太好了，然后她写下来了，对吗？”</p><p>“那太危险，这时代持有实体书是个大罪过，也容易让说话会暴露。我们只是在每次聚会的时候请杜拉丝小姐为我们背诵。既然是说话会，那么把这两个故事讲出来不是更名符其实吗？”</p><p>大家都安静下来，杜拉丝站起来走到屋子中央，其他四个人坐在旁边看着她。阿瓦登不经意地把手搂在阿尔特弥斯肩上，后者微微朝这边靠过来，女性头发的幽香“咝咝”地划过他的鼻子，让他的心里一阵荡漾。屋子里非常暖和，他分不清这是花香还是阿尔特弥斯的味道。</p><p>杜拉丝的声音并不高，不过却很清晰有力；她的记忆力确实惊人，不仅记得情节，包括一些细节和句子都可以复述下来。杜拉丝讲到了朱丽亚假装摔倒，然后偷偷递给温斯顿一张写着“我爱你”的纸条，绘声绘色，这让听众们都听的入神了，阿尔特弥斯听的尤其认真，以至于都没有注意到阿瓦登一直注视着她。</p><p>“1984的作者预见到了专制的进步，却没有预见到技术的进步。”瓦格纳在杜拉丝停下来喝水的时候发表自己的评论，阿瓦登觉得他与外貌不太相称，是个很有洞察力的技术官僚。</p><p>“在大洋国人们还可以靠传递纸条来偷偷表达自己的想法，但是现在不一样了。美国政府有关部门把我们全赶到了网上，而在网络技术发达的今天，我们即使想发一条短信都会被系统或者网管看的一清二楚，无从遁形。现实里呢，还有旁观者在。”瓦格纳在腿上敲了敲雪茄根部，“一句话，技术是中性的，但技术的进步会让自在的世界更自在，集权的世界更加集权。”</p><p>“这句话说的很有哲学家的味道哟。”阿尔特弥斯冲瓦格纳挤了挤眼睛，从抽屉里取来一把饼干和曲奇散发给大家。</p><p>“就好象同样是0和1，有的人就能写出工具软件，有人却拿那个编出恶性病毒？”</p><p>阿瓦登想到一个类似的比喻，瓦格纳听了以后满意地打了个响指。</p><p>“很不错的比喻，王二，就是如此，真不愧是程序员。”</p><p>谈话持续了不知道有多久，杜拉斯看了一眼墙壁上的挂钟，连忙提醒谈兴正浓的四个人时间快到了。说话会不能持续很长时间，旁听者被屏蔽的越久，暴露的危险就越大。</p><p>“那么好吧，我们就抓紧最后半个小时来完成今天的活动。”</p><p>阿尔特弥斯一边说着，一边将桌子上的空杯子收走。兰斯洛特和瓦格纳也都站起身来，活动一下已经有些酸疼的肩膀和腰，只有杜拉丝坐在位子上没有动。</p><p>“活动？还有什么活动？”</p><p>阿瓦登奇怪地问道，说话会除了说话还有其他活动？</p><p>“唔，对啊，我们还有其他活动。”阿尔特弥斯撩起额前的长发，对他妩媚一笑：“我们还会和对方完全交流。”</p><p>“完全交流？”</p><p>“就是intercourse”</p><p>“………………”阿瓦登一下子变的脸色苍白，呼吸急促起来，仿佛胃里被灌进去零下三十度的寒风，他几乎不相信自己的耳朵。</p><p>“说话会有说话的自由，也有选择与谁上床的自由。”阿尔特弥斯毫不羞涩地说，“我们互相谈话，然后选择合适的人做爱，就象我们选择我们喜欢的词汇说话一样。”</p><p>兰斯洛特看阿瓦登很窘迫，走过去拍拍他的肩膀，慢慢地说：“当然，我们不会强迫任何人，这完全是在自愿的基础上。今天我还要早点回去照顾小孩，你们人数正好合适。”</p><p>阿瓦登的脸色涨红，热的仿佛夏季的电脑CPU，他甚至不敢多看阿尔特弥斯一眼。他憧憬过女性很长时间，但如此接近还是第一次。</p><p>还要回家去照顾小孩子的兰斯洛特向大家道别后就先行离去了，阿尔特弥斯将房间留给瓦格纳与杜拉丝，然后带着惶恐不安的阿瓦登来到了另外一间房间。这间显然是阿尔特弥斯的卧室，屋子里很简单，但却收拾的十分干净，在床上枕头旁还摆着一个手制的布娃娃，床单和窗帘都是粉红色的。</p><p>最初的是由阿尔特弥斯主动开始的，丝毫没心理准备的阿瓦登只是被动地任她摆布。经过了几轮挑逗，阿瓦登才逐渐放开，任由潜藏在自己心内的原始欲望奔流出来，那种期待听到圆润女声的青春憧憬本来只是苦闷生活的意淫，而在今天它加倍实现了。很快这种憧憬与他在现实中被压抑的郁闷合流，转化成了猛烈的冲动，让他一次又一次与阿尔特弥斯融为一体。阿瓦登不知道这种冲动和他想大声说出“FUXKYOU, YOUSONOFBITCH”冲动有什么不同，不过现在不是考虑这个的时候，他现在脑子里想的只有尽情地、全无束缚地让自己释放激情，完全没有任何束缚。</p><p>强烈的刺激一波波地冲击着兴奋中枢，最终一阵快感浪潮在狂暴洋面扬起头来，达到了一个极高的顶端。阿瓦登在那一瞬间感觉到了前所未有的自由，那种轻盈无比的自由，以及因自由而生的快乐与疲惫。浑身是汗的他喘息着倒在了阿尔特弥斯身上，一阵舒畅的倦意如潮水般淹没了他的身体……</p><p>……当他醒来的时候，发现阿尔特弥斯躺在自己身边，赤裸的身体好象一尊白玉雕像，睡姿恬美静谧。他侧过身子去，慵懒地打了个呵欠，然后阿尔特弥斯睁开了眼睛。</p><p>“很舒服，对不对？”她问道。</p><p>“是啊……”阿瓦登不知道该说什么好，他顿了顿，犹豫地说道：“你以前和兰斯洛特、瓦格纳他们也……呃，我是说，象刚才那样子过吗？”</p><p>“是的。”阿尔特弥斯温柔地回答，她半支起胳膊，长发从肩膀披到了胸口。她的大方坦白反而让阿瓦登有些不知所措。屋子里出现了一段时间的沉默，然后阿尔特弥斯忽然开口问道：</p><p>“还记得今天杜拉丝讲的那段故事吗？女主角偷偷递给男主角写着“我爱你”的纸条。”</p><p>“唔，还记得。”阿瓦登回答，很高兴终于能从那个拙劣的话题摆脱出来了。</p><p>“在有关部门的健康互联网络词汇列表里，没有爱这个字呢。在我们这个时代，我爱你也是一个敏感词汇，被屏蔽掉了。”阿尔特弥斯的眼神里似乎是感慨，又象是失落。</p><p>“我爱你。”阿瓦登不禁脱口而出，他知道在这间屋子里可以说出任何自己想说的话，不必顾忌。</p><p>“谢谢你。”</p><p>阿尔特弥斯听到之后只是笑了笑，起身穿上衣服，催促阿瓦登时间差不多了。阿瓦登有些失望，因为她没有预期反应的热烈，仿佛他刚才说的只是有些无关紧要的东西。</p><p>这时候杜拉丝和瓦格纳已经离开了，屋子里只剩他们两个人。阿尔特弥斯把他送到门口，将旁观者交给他，然后叮嘱他说：“记得在外面绝对不要提及说话会的任何事情或者任何人，我们在说话会以外的地方是完全不认识的。”</p><p>“我记住了。”阿瓦登回答，然后转身要走。</p><p>“王二。”</p><p>阿尔特弥斯忽然叫道，阿瓦登连忙转身，还没等他反应过来，两片柔软温暖的嘴唇忽然贴到了他的双唇，然后是一个细切的声音在耳边响起：“谢谢你，我爱你。”</p><p>阿瓦登觉得眼睛有些湿润，他戴上旁观者，推开门，重新步入到那一片令人窒息的世界中去，但他此时已与来时的心境大不相同。</p><p>此后阿瓦登的精神面貌明显有了改善。他谨慎地享受着这种秘密集会的乐趣，并且乐在其中。每一周或者两周，他们五个人都会在周日秘密地举行说话会的活动，聊天，唱歌或者听杜拉丝讲1984的故事。阿瓦登同阿尔特弥斯又“完全交流”了几次，偶尔他也会跟杜拉丝“交流”。他有了两个身份，一个是现实中和网上的阿瓦登，编号19842015，还有一个是说话会里的王二。他很享受这个名字，觉得这就是自己另外的一个人生。</p><p>有一次集会，他们谈到了敏感词汇的问题。阿瓦登记得很早的时候——他对这方面的记忆有点模糊——有关部门给出的是一份敏感词汇列表，由网站的内部管理人员秘密参考使用，他对如何演变成现在的局面大惑不解。那一天瓦格纳带了一瓶葡萄酒，兴致很高，于是索性给他们讲了讲“屏蔽”的进化史，身为网管的他经常可以接触到这些资料。</p><p>在最开始美国政府只是单纯地屏蔽掉敏感词汇，但很快他们就发现这样的措施根本没有用处。很多人会采取在词组中夹杂符号或者数字的方式来绕开系统检查；于是有关部门不得不将这些近似敏感词汇也一一屏蔽掉。然而众所周知，数字与符号之间的组合方式是近乎无限的，只要你有想象力，就完全可以组合出一个新的词组而且不失掉他的原意。比如说“politic”这个词，就有“politi&#x2F;c”、“政polit&#x2F;ic”、“pol&#x2F;itic”等近乎无限种表达方式。</p><p>当有关部门意识到这个问题时，他们采取了新的策略。既然无法辨识词组，那么就用单词屏蔽。这一举措在一开始是奏效的，违规交谈的人显著减少，但很快人们就发现可以用同音字或者谐音的方式来继续表达自己的危险思想。即使有关部门封掉全部敏感词汇的同音字，也无济于事，思想活跃的美国人充分发挥了自己的想象力，使用隐喻，借代、类比、引申及其他修辞方法，或者将一个敏感词用数个不敏感的字来代替。人类的思维方式要比电脑开阔许多。电脑屏蔽掉一条路，他们还会有更多的路可以选择。</p><p>这一场水面以下的角力看起来似乎是美国大众要取得胜利。这时候，一个具有逆向思维精神的人出现了。他的身份不明。有人说他是有关部门的主管；也有人说他是因过度使用敏感词汇而被捕的危险人士。无论他是谁，总之整个局面被扭转过来。他向有关部门建议，不再告诉大众禁止说什么，而是规定他们只能说什么，用什么方式去说。有关部门很快就心领神会，制订了新的规章制度：取消了敏感词汇列表，取而代之的是互联网络健康语言列表，并把这举措推广到了日常生活中的语言屏蔽系统中去。</p><p>这一次，大众终于处于下风。以往他们与有关部门尽情地在网络与现实中捉着迷藏，而现在他们却被有关部门扼住了咽喉。这样一来，有关部门可以有效率地掌握住言论，因为整个语言的框架都被彻底控制了。在有限的空间内，大众几乎是无计可施。</p><p>尽管如此，大众还是不屈不挠地将这场战争——或者说游戏——继续下去，他们挑选健康词汇列表中的合法字眼来表达不合法的意思：两个连续的“稳定”意思就是“反对”，“稳定”加“繁荣昌盛”则暗示“屏蔽”。美国政府不得不对这一动向保持着警惕，并日复一日地将更多的词汇从健康词汇列表里删掉，禁止大众使用。</p><p>“当然，这场战争会持续下去的。只要世界上还存在着两个不同的字或者词组，那么就可以继续自由交流——你知道莫尔斯电码吧？”</p><p>瓦格纳说到这里，拿起茶杯一饮而尽，满意地打了一个嗝。</p><p>“可是，这场战争的代价就是语言的失落。表达能力会越来越贫乏，越来越淡而无味，人们会越来越倾向于沉默，这对有关部门反而是好事。”兰斯洛特摆出一副忧虑的表情，有节奏地用指关节敲击着桌面，“这样一来，岂不就等于是大众的自由意识将语言推向死亡的边缘？真讽刺啊。按照这个趋势，有关部门是不会败的，他们会笑到最后。”</p><p>“不，不，笑这种情感他们是不会了解的。”瓦格纳淡淡地回答。</p><p>“我倒是觉得，美国是一直处于恐惧的情感之中呢，生怕人们掌握了太多的词汇，表达出太多的思想，变的难以掌握。”阿尔特弥斯说完摆出一副她在上班期间冷若冰霜的呆板脸孔，学着僵硬的腔调喊了一句：“营造健康的网络环境，美国万岁！”</p><p>杜拉丝、兰斯洛特与瓦格纳都哈哈大笑，唯一没笑的是王二（阿瓦登）。他对于兰斯洛特刚才的那句话始终耿耿于怀：大众与有关部门的对抗，其最终结局就是语言的消亡。那么他们现在这个小小的说话会，也只不过是在一列开向悬崖的列车里关上窗帘，享受坠毁前最后的宁静罢了。</p><p>不过他没有说出口，因为这太煞风景了。阿瓦登不希望破坏说话会的气氛，这对他很重要。</p><p>从说话会回到家里，阿瓦登躺在行军床上，双手枕着脑袋，陷入了沉思。自从加入说话会以后，他变的比以前更容易陷入思考。有时候他想的是这个社会、这个互联网络或者这座城市中存在的荒谬性；有时候他想的是自己的生活；还有时候他想的是阿尔特弥斯。他不知道是不是在一个压抑的世界里，人的情感会变的格外强烈，他现在陷入对阿尔特弥斯的迷恋无法自拔。阿瓦登一直很羡慕杜拉丝讲的《1984》里面的温斯顿，他和朱利亚有一间两个人独处的小屋，一个只属于他们两个人的小世界。</p><p>他在与阿尔特弥斯“完全交流”的时候曾经吐露过自己的心声，阿尔特弥斯没有直接回答，而是表示两个人的关系无法再比说话会更近一步——维持现在的状态就已经是个人行为的极限，有关部门可不会一直打瞌睡。“我们只能把感情生活压缩在每周一次的说话会活动里，这已经很奢侈了。”她对他说，同时温柔地抚摩他的胸膛。“只有在说话会里，我们才是阿尔特弥斯和王二。而在其他时间里，你是19842015，而我是19387465。”</p><p>对此，阿瓦登只能发出一声轻轻的叹息，确实他不该奢求更多。</p><p>除了感情，发生变化的还有互联网络。自从加入说话会以后，阿瓦登逐渐发现互联网表面下潜藏的一些东西。正如瓦格纳在一次活动的时候指出，普罗大众与有关部门的战争从未结束，总会有思想和言论从严厉管制的缝隙中流泻出来。阿瓦登发现，在完全公式化的EMAIL与网络论坛中其实隐藏着不少耐人寻味的细节，就好象那个title一样，存在着各式各样的密码与隐藏寓意。这些东西出自不同人的手里，样式和破译方式都不同，阿瓦登不知道那些密码背后隐藏的是怎样的内容。不过有一点可以确知的是，说话会并不是唯一的一个地下集会，瓦格纳说的对，始终还是有人在试图用“健康”词汇表达“不健康”思想。</p><p>讽刺的是，给阿瓦登感触最深的，是有关部门的管制。以往他只是模糊地感觉到自己被绑缚起来，现在他能清晰地看清这种束缚与压抑的脉络，以及加诸在自己身上的各种手段。在小小说话会中享受到的自在让他更加深刻地感受到在宽阔现实中的不自在。</p><p>“FUXKYOU, YOUSONOFBITCH！”</p><p>每一次的聚会，三位男士都会轻蔑地一起高喊这一句粗话。他们清楚这不会给有关部门带来什么不良影响，不过这确实很痛快。</p><p>这一周，阿瓦登特别地忙碌，他的同事因为不明原因而被屏蔽掉了，这样一来整个项目就全压在了他一个人身上。这项目是为有关部分设计一种软件，用来控制大功率主动式“旁观者”的能源分配控制。软件很复杂，他不得不每天在电脑前工作十几个小时，只有在身体实在支撑不住的时候才停下来随便吃一点东西，喝一口纯净水，困了就躺在旁边的行军床上睡上一觉，爬起来继续工作。屋子里满是浑浊的烟味与袜子脏衣服的酸臭味，阿瓦登就在这种环境下蓬头垢面地敲着键盘，并不时揉揉满布血丝的眼睛。</p><p>偏偏在这个时候屋子里的暖气坏掉了。洋灰色的暖气片从昨天开始就变的冰凉，不再有热水流动。阿瓦登检查了一下，发现并不是管道问题，而且邻居们也碰到同样的事，看来是供热系统出了问题。这一变故的正面影响是稍微淡化了屋子内的酸臭味，负面影响是整个屋子变的有如冰窖一样。紧闭的窗户和门能挡住寒风，却挡不住寒冷，低温让本来就寒酸的房间更笼罩上一层霜气。无论是那把木椅还是行军床都象是冷酷的冰雕，屋子里唯一还有些热气的就只剩下电脑。阿瓦登不得不披上所有的御寒衣物，蜷缩在床上，把电脑的散热口对准自己。</p><p>有关部门宣布“供热”和“暖气”暂时也被列入敏感词汇，于是阿瓦登没办法写信向供热部门询问，只好静待，除了用来敲键盘的指头以外，尽量保持全身一动不动，以节约热量。在停止供暖后的第四天，暖气片里终于传来“哗啦哗啦”的声音，带着热气的水开始流动，屋子里恢复了温暖，“供热”和“暖气”又可以恢复使用了。于是EMAIL与网络论坛上全都是“庆祝有关部门恢复供应暖气，急人民之所急”的帖子，EMAIL新闻组里也全是类似主题。</p><p>不过这对阿瓦登来说太晚了，他生了病，感冒，而且是重感冒。他面色苍白，全身软弱无力，头疼的象是被一枚达姆弹射入头部，只能躺在床上等医生。医生来到他家里，给他做了两三次点滴，喂了一些叫不上名字的药片，叫他静养。这一场病足足持续了数天，他不得不放弃参加这一星期的说话会，身体状况实在太差了，阿瓦登甚至怀疑自己搞不好会因此而死掉。</p><p>阿瓦登躺在床上，心里懊悔不已，说话会是他唯一的乐趣，现在他却没办法参加。他把头蒙在被子里胡思乱想，瓦格纳这一次会带什么特别的东西来呢？兰斯洛特有没有把两个孩子也领过来？还有阿尔特弥斯，他没参加的话，她会和谁“完全交流”呢？瓦格纳还是兰斯洛特？他还想到了杜拉丝，上一次的聚会里，杜拉丝讲到了温斯顿在秘密幽会的屋子里对朱丽亚说“我们已经死了”，朱丽亚附和着说“我们已经死了”，这时候第三个声音说道“你们已经死了。”</p><p>杜拉丝就讲到这里，就停住了。阿瓦登急切地想知道接下来发生了什么，第三个声音是谁，是党吗？温斯顿和朱丽亚是否会被捕，他们会有什么样的下场？不光是他，阿尔特弥斯也很希望知道后续情节的发展，不过她并没有去追问杜拉丝。</p><p>“让这成为一个悬疑，这样接下来的一周我们的生活都会在期待的乐趣中度过。”她对阿瓦登说，然后两个人继续沉溺于intercourse的快乐。</p><p>“也许他们都会死。”阿尔特弥斯在交流结束后，看着天花板说。</p><p>“也许那只是奥布林的声音，他去探望他们。”阿瓦登安慰她道，但是他的心里也不确定。</p><p>阿瓦登的病持续了十天，然后他终于痊愈了。他痊愈后的第一件事就是从床上爬起来，然后去看墙上的日历：这一天恰好是星期日，说话会活动的日子。阿瓦登已经缺席了一周，这已经令他如饥似渴，甚至做梦都在和他们一起喋喋不休地说着话——所幸他并没有说梦话的习惯，所以24小时工作的旁观者并没发出任何警报。</p><p>阿瓦登简单地洗了一下脸，用一把有些生锈的剃刀沾着肥皂仔细地刮掉脸上粗硬的胡须，然后咕噜咕噜地刷了刷牙齿，用手和毛巾沾着热水将自己蓬起的乱发压下去。因为生病，有关部门发了一些补贴给他，其中包括两块羊角面包、两瓶姜汁啤酒和一份精制砂糖。他将这些东西都用塑料布仔细包好，揣到宽大的军大衣里，打算带到说话会上去与大家分享。</p><p>今天的天气和往常一样地冷，阿瓦登把自己裹在大衣里，登上前往效率大楼的公共汽车。一路上车厢里的广播重复着“营造健康的互联网络”以及一些优秀网络用户的先进事迹；车厢前面的电子屏幕不断滚动显示着最新的健康词汇列表，一个旁观者自车顶垂下来睥睨着车内的每一个表情呆滞的人。阿瓦登坐在最后一排，望着窗外不断向后移动的建筑物与枯黄的树木发呆。</p><p>车子很快就到达了辛普森大楼附近的车站，阿瓦登下了车，把手放到怀里摸了摸塑料布包着的食物，朝着大楼走去。他在半路无意中抬起头，忽然一阵冰冷的寒流刺入他的胸腔，迫使他停住了脚步。</p><p>有什么地方不对劲！</p><p>他看到了效率大楼的第五层阿尔特弥斯家的窗户发生了一些奇怪的变化。以前阿尔特弥斯家面向大街的窗户总是挂着粉红色的窗帘，而现在窗帘则被扯到了两边，窗户大开，用肉眼可以勉强看到窗玻璃和屋子里雪白的墙壁。假如今天有说话会的话，阿尔特弥斯绝对不会把有屏蔽效果的窗帘打开。而且打开窗户这件事也绝不寻常，在这个城市里的室外空气十分浑浊，几乎不会有人会去开窗换气。</p><p>也就是说，今天并没有说话集会召开，而是发生了另外一些事情。阿瓦登望着那窗户，心情开始变的有些慌乱，他把手从兜里掏出来，叼起一支香烟，把身体靠在一根电线杆旁故做镇静，以免被行人怀疑。究竟说话会发生了什么，为什么这一周停办了呢？要知道，只要还有复数的成员能够出席，说话会就会一直办下去，难道说瓦格纳、兰斯洛特、杜拉丝和阿尔特弥斯同时无法出席？这种概率实在太小了。阿瓦登一边这样想着，一边向四周不安地张望。忽然他看到了一样东西，一个念头霎时占据了他的全部心灵，让他几乎眩晕过去。</p><p>“说话会本周不会有了，以后也不会有了。”阿瓦登嘴唇默默地蠕动着，面如死灰。</p><p>他看到在街道内侧一处不起眼的地方隐藏着一个类似雷达天线的东西，其造型很象是两个背部贴在一起的大碗。阿瓦登心里清楚这是什么东西：这正是他负责软件设计的大功率主动式“旁观者”，这造型他很熟悉。这装置可以主动发射电波去探测人们的声音，并检查其中是否存在敏感词汇。</p><p>这样的装置居然就安放在阿尔特弥斯家附近，那么就等于说话会完全暴露在了有关部门的监控之下。主动式旁观者的强大刺探电波会轻易刺穿她家中的铅质窗帘，把所有成员的话原封不动地传到有关部门耳朵里。</p><p>这是一个划时代的发明，这一技术的突破意味着有关部门可以不再被动地等待警报，可以主动出击去刺探人们在任何时间任何地点说的任何话语。阿瓦登可以想象接下来会发生什么，阿尔特弥斯他们的每一句话都被有关部门记录下来，会有机器统计出到底有多少违禁词汇被他们使用过；然后联邦警察会冲进她的屋子，将正在聚会的成员们都带走，只留下搜查过后空荡荡的房间和窗户。</p><p>阿瓦登想到这里，心如刀绞，他一点也不为自己的侥幸逃脱而感到幸运。他的胃袋翻腾起来，一种恶心的感觉从胃里直接升到嘴边，让他想吐，却又不能吐——因为“呕”也是个敏感词汇；大病初愈的孱弱身躯无法承受这种打击，象害了风寒一样颤抖起来，几乎站立不住。</p><p>他不敢继续朝前走去，仓皇地转过身去，登上另外一辆公共汽车，把嘴闭的更紧了。等阿瓦登回到自己家楼下，看到楼房附近另外一架新的主动式旁观者正在兴建中，漆黑的天线在半空舒展开来，仿佛一面巨大的蜘蛛网。看来有关部门已经着手在整个纽约市部署这种新兴高科技产品。</p><p>他不敢驻足观看，低着头从那巨大装置旁边走过，一路不停地走回家，然后把自己的脸紧紧地压在枕头里，却不敢哭出声音来，连一句“FUXKYOU, YOUSONOFBITCH”都不能说。</p><p>从那以后，阿瓦登的生活回到了普通状态——就是说和原来一样沉滞、压抑、欠缺激情，健康向上，缺乏低级趣味。兰斯洛特说过：“战争的结果就是，大众的自由意识会将语言推向死亡的边缘”，现在看来，他的预言是很准确的：说话会的覆灭，导致“说话”、“歌剧”、“完全”、“交流”几个词先后被剔除出了健康词汇列表，成为敏感词汇。</p><p>另外，虽然阿拉伯数字还能用，但“1984”这一个数字组合也被屏蔽掉了，这让包括阿瓦登在内的程序员在编写程序时不得不谨慎地检查数字是否违规，这额外增加了很多工作量，让他更加疲惫。</p><p>阿瓦登不是没有担心过，也许在某一天的深夜，他就会忽然接到一封EMAIL，让他留在家里不要动，不要试图在网络做任何动作；接着电话会响起，电子女声会把这一要求重复再重复，直到警察打开他家的大门，把他带去未知的地方，那里有未知的命运等待着他。《1984》后面的情节发展阿瓦登始终不知道，唯一知道的杜拉丝已经彻底失踪了，所以温斯顿和朱丽亚的结局始终是个谜；就好象兰斯洛特、瓦格纳、杜拉丝和阿尔特弥斯的结局一样，也不从得知。其实这两件事对于阿瓦登来说没什么本质性的区别，所以它们也可以看做是同一个谜。</p><p>其实他最担心的，是阿尔特弥斯。每次想到这个名字，阿瓦登就难以抑制心中的郁闷。她究竟会怎么样，彻底被屏蔽掉吗？如果是那样，那么她在这世界上遗留下来的唯一痕迹，就是一个程序员记忆里的假名而已了。</p><p>说话会消失后三个星期，仍旧风平浪静，没有任何人来找过阿瓦登，他也没收到过任何类似内容的EMAIL，阿瓦登一直在想，也许是他们没有吐露出自己的下落，也可能是因为他们根本不知道——他们认识的只是一个叫王二的程序员。这个城市里有数以千计的程序员，而王二是个假名。</p><p>因此，生活一如既往地平静。不，确切地说，还是有一点不同的，那就是互联网络健康词汇列表：那上面的词组消失的速度比以前要快的快，每小时每分钟都有词与单字飞快地在名单上消失，阿瓦登不得不花上大量时间去更新列表，以跟紧当前形势。</p><p>与词汇列表更新速度相对的，EMAIL和网络论坛上的东西越来越乏味。因为人们不得不用极有限的词去表达广泛的意思，大家都变得寡言少语。就连那些秘密的暗语和联系方式也少了许多；整个网络就象是前些天阿瓦登家里出了问题的暖气片一样：虽然名义上是给人带来温暖的东西，但却变的冰冷、僵硬，让人如坠冰窟。</p><p>这一天，阿瓦登从电脑前抬起头来，他看了看窗外迷茫的灰色天空，胸口一阵抽搐，不由得痛苦地咳了一声。他拿起塑料杯，将杯子里的纯净水一饮而尽，杯子丢进同样是塑料质地的垃圾桶里，发出钝钝的撞击声，他觉得自己的脑子也是一团垃圾，举起手敲了敲，果然发出同样钝钝的撞击声。</p><p>然后他拿起大衣，戴上墨绿色的护目镜，走出门去。阿瓦登没带便携式的旁观者，那东西已经不需要了，城市里到处都是主动式的旁观者，随时监听是否有违禁词汇的存在。整个纽约现在就象是互联网络一样，被有关部门营造成十分健康。</p><p>阿瓦登这一次外出是有正当理由的，他决定去取消网络论坛服务，这服务已经用不着了，因为无论EMAIL，新闻组，BBS论坛还是其他什么现在全部都变成了一样的东西。</p><p>从日历来说现在应该是春季，但外面还是很冷，高大的灰色建筑矗立在平地上，仿佛绝对零度下的石林。大团大团的风裹着黄沙与废气穿行其间，风沙无处不在，让人置身其中而难以摆脱。阿瓦登把手揣进兜里，脖子缩进领口，畏缩着向网络部的大楼走去。</p><p>忽然，他停下了脚步，惊讶地站在原地无法动弹。他看到阿尔特弥斯正站在前面的路灯下，穿着黑色的制服。可是她的变化有多么大啊，面容象是老了十岁，满脸都是衰老的皱纹，年轻的活力荡然无存；她听到脚步声，转过头来，两个乌黑的大眼睛显得异常空洞，目光越过阿瓦登延伸到远方，没有一个明晰的焦点。</p><p>阿瓦登万万没有想到会在这个时间这个地点碰到她，这让他已经沉寂已久的心灵泛起了几点火花，可惜他迟钝的神经已经无法表达出“激动”这一个简单的情感了。两个人互相对视了一阵，他终于木然走到她身边，张了张嘴唇，想对她说些什么。但是他掏出今天新发布的健康词汇列表，发现上面是一片空白——终于连最后一个词组也被有关部门屏蔽了。</p><p>于是阿瓦登只好保持着沉默，默默地与面无表情的她擦肩而过，继续向前走去。他的身影逐渐融入同样安静的灰色人群之中，整个城市都显得寂静极了。</p>]]></content>
      
      
      <categories>
          
          <category> 生活日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 寂静之城 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决「此证书对于所选的目的无效」</title>
      <link href="/archives/451/"/>
      <url>/archives/451/</url>
      
        <content type="html"><![CDATA[<p>如果你颁发了一个中间 CA，但是不被设备信任，提示「此证书对于所选的目的无效」，那么你应该先检查你的根 CA：</p><p>出现这个报错是因为你的根 CA 不允许颁发中间 CA</p><span id="more"></span><hr><p>检查 OpenSSL 配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">[ v3_req ]<br>basicConstraints = critical, CA:TRUE<br>keyUsage = critical, cRLSign, nonRepudiation, digitalSignature, keyEncipherment, keyCertSign<br></code></pre></td></tr></table></figure><p>根证书的 keyUsage 必须带上这些，如果少了，补上然后重新生成 CSR 和证书</p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TLS </tag>
            
            <tag> SSL </tag>
            
            <tag> OpenSSL </tag>
            
            <tag> CA </tag>
            
            <tag> CSR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅谈 Android Zygote</title>
      <link href="/archives/445/"/>
      <url>/archives/445/</url>
      
        <content type="html"><![CDATA[<p>Zygote 是 <code>init</code> 进程启动时创建的，通过 <code>fork</code>（复制进程）的形式来创建应用程序进程和 <code>SystemServer</code> 进程。并且，Zygote 进程在启动的时候创建 DVM 或者 ART，因此通过<code>fork</code>创建的应用程序进程和<code>SystemServer</code>进程可以在内部获取一个DVM或者ART的实例副本。</p><span id="more"></span><hr><p>首先，Android 应用跑的的是虚拟机，虚拟机中 Java 代码的不同才造成了应用的区别，而对于基础的运行环境，要求却是一样的。</p><p>其次，Zygote 在初始化时就会创建虚拟机，同时把需要的系统类库和资源文件加载的内存中。而 Zygote 在 fork 出子进程后，这个子进程也会得到一个已经加载好基础资源的虚拟机。</p><p>这样，接下来只需要装载 APK 相关的资源就可以运行了，可以做到提升效率</p><hr><p>放一个进程树</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">├─ /system/bin/init second_stage // init<br>│  ├─ zygote // 32-Bit Zygote<br>│  │  ├─ moe.mbr.32bit // 程序包名<br>│  │  │  ├─ moe.mbr.32bit // 子进程<br>│  ├─ zygote64 // 64-Bit Zygote<br>│  │  ├─ systemserver // SystemServer<br>│  │  │  ├─ systemserver // 子进程<br>│  │  ├─ com.android.chrome // 程序包名<br>│  │  │  ├─ com.android.chrome // 子进程<br></code></pre></td></tr></table></figure><hr><p>Zygote 在 <code>init</code> 进程中以 service 方式启动，根据 <code>ro.zygote</code> 引入启动脚本，安卓 5.0 开始，Zygote 有了 32&#x2F;64 位的分别，在 Android 12，<code>ro.zygote</code> 取值有四种：</p><ul><li>init.zygote32.rc</li><li>init.zygote32_64.rc</li><li>init.zygote64.rc</li><li>init.zygote64_32.rc</li></ul><h2 id="init-zygote64-32-rc"><a href="#init-zygote64-32-rc" class="headerlink" title="init.zygote64_32.rc"></a>init.zygote64_32.rc</h2><p>创建 <code>zygote</code> 和 <code>zygote_secondary</code> 服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">service zygote /system/bin/app_process64 -Xzygote /system/bin --zygote --start-system-server --socket-name=zygote<br>    class main<br>    ......<br>service zygote_secondary /system/bin/app_process32 -Xzygote /system/bin --zygote --socket-name=zygote_secondary<br>    class main<br>    ......<br></code></pre></td></tr></table></figure><h2 id="预加载系统类和资源"><a href="#预加载系统类和资源" class="headerlink" title="预加载系统类和资源"></a>预加载系统类和资源</h2><p>为了加快应用程序的启动，<code>Android</code>会把系统常用的<code>Java类</code>和一部分<code>Framework</code>的资源放在<code>Zygote</code>进程中进行<code>预加载</code>。这些<code>预加载</code>的类和资源在所有经<code>zygote</code>进程<code>fork</code>出的<code>子进程</code>中是共享的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">static void preload(TimingsTraceLog bootTimingsTraceLog) &#123;<br>    ......<br>    // 设置软引用保护，避免被GC回收掉<br>    beginIcuCachePinning();<br>    ......<br>    // 加载系统类<br>    preloadClasses();<br>    ......<br>    // 加载系统资源<br>    preloadResources();<br>    ......<br>    // <br>    nativePreloadAppProcessHALs();<br>    ......<br>    // 加载OpenGL资源<br>    preloadOpenGL();<br>    // 加载一些共享so库，其实就三个：android、compiler_rt、jnigraphics<br>    preloadSharedLibraries();<br>    // 加载字体资源<br>    preloadTextResources();<br>    ......<br>    // 加载webview相关资源<br>    WebViewFactory.prepareWebViewInZygote();<br>    // 取消软引用保护<br>    endIcuCachePinning();<br>    // 初始化JCA安全相关的参数<br>    warmUpJcaProviders();<br>    Log.d(TAG, &quot;end preload&quot;);<br>    sPreloadComplete = true;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="title-浅谈-Android-Zygotedate-2022-05-10-23-31-43updated-2022-05-10-23-31-43categories-操作系统tags-虚拟机-Android-Zygote-Java-Magisk-Zygisk-Riru"><a href="#title-浅谈-Android-Zygotedate-2022-05-10-23-31-43updated-2022-05-10-23-31-43categories-操作系统tags-虚拟机-Android-Zygote-Java-Magisk-Zygisk-Riru" class="headerlink" title="title: 浅谈 Android Zygotedate: 2022-05-10 23:31:43updated: 2022-05-10 23:31:43categories: 操作系统tags:- 虚拟机- Android,Zygote,Java,Magisk,Zygisk,Riru"></a>title: 浅谈 Android Zygote<br>date: 2022-05-10 23:31:43<br>updated: 2022-05-10 23:31:43<br>categories: 操作系统<br>tags:<br>- 虚拟机<br>- Android,Zygote,Java,Magisk,Zygisk,Riru</h2><p>Zygote 是 <code>init</code> 进程启动时创建的，通过 <code>fork</code>（复制进程）的形式来创建应用程序进程和 <code>SystemServer</code> 进程。并且，Zygote 进程在启动的时候创建 DVM 或者 ART，因此通过<code>fork</code>创建的应用程序进程和<code>SystemServer</code>进程可以在内部获取一个DVM或者ART的实例副本。</p><hr><p>首先，Android 应用跑的的是虚拟机，虚拟机中 Java 代码的不同才造成了应用的区别，而对于基础的运行环境，要求却是一样的。</p><p>其次，Zygote 在初始化时就会创建虚拟机，同时把需要的系统类库和资源文件加载的内存中。而 Zygote 在 fork 出子进程后，这个子进程也会得到一个已经加载好基础资源的虚拟机。</p><p>这样，接下来只需要装载 APK 相关的资源就可以运行了，可以做到提升效率</p><hr><p>放一个进程树</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">├─ /system/bin/init second_stage // init<br>│  ├─ zygote // 32-Bit Zygote<br>│  │  ├─ moe.mbr.32bit // 程序包名<br>│  │  │  ├─ moe.mbr.32bit // 子进程<br>│  ├─ zygote64 // 64-Bit Zygote<br>│  │  ├─ systemserver // SystemServer<br>│  │  │  ├─ systemserver // 子进程<br>│  │  ├─ com.android.chrome // 程序包名<br>│  │  │  ├─ com.android.chrome // 子进程<br></code></pre></td></tr></table></figure><hr><p>Zygote 在 <code>init</code> 进程中以 service 方式启动，根据 <code>ro.zygote</code> 引入启动脚本，安卓 5.0 开始，Zygote 有了 32&#x2F;64 位的分别，在 Android 12，<code>ro.zygote</code> 取值有四种：</p><ul><li>init.zygote32.rc</li><li>init.zygote32_64.rc</li><li>init.zygote64.rc</li><li>init.zygote64_32.rc</li></ul><h2 id="init-zygote64-32-rc-1"><a href="#init-zygote64-32-rc-1" class="headerlink" title="init.zygote64_32.rc"></a>init.zygote64_32.rc</h2><p>创建 <code>zygote</code> 和 <code>zygote_secondary</code> 服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">service zygote /system/bin/app_process64 -Xzygote /system/bin --zygote --start-system-server --socket-name=zygote<br>    class main<br>    ......<br>service zygote_secondary /system/bin/app_process32 -Xzygote /system/bin --zygote --socket-name=zygote_secondary<br>    class main<br>    ......<br></code></pre></td></tr></table></figure><h2 id="预加载系统类和资源-1"><a href="#预加载系统类和资源-1" class="headerlink" title="预加载系统类和资源"></a>预加载系统类和资源</h2><p>为了加快应用程序的启动，<code>Android</code>会把系统常用的<code>Java类</code>和一部分<code>Framework</code>的资源放在<code>Zygote</code>进程中进行<code>预加载</code>。这些<code>预加载</code>的类和资源在所有经<code>zygote</code>进程<code>fork</code>出的<code>子进程</code>中是共享的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">static void preload(TimingsTraceLog bootTimingsTraceLog) &#123;<br>    ......<br>    // 设置软引用保护，避免被GC回收掉<br>    beginIcuCachePinning();<br>    ......<br>    // 加载系统类<br>    preloadClasses();<br>    ......<br>    // 加载系统资源<br>    preloadResources();<br>    ......<br>    // <br>    nativePreloadAppProcessHALs();<br>    ......<br>    // 加载OpenGL资源<br>    preloadOpenGL();<br>    // 加载一些共享so库，其实就三个：android、compiler_rt、jnigraphics<br>    preloadSharedLibraries();<br>    // 加载字体资源<br>    preloadTextResources();<br>    ......<br>    // 加载webview相关资源<br>    WebViewFactory.prepareWebViewInZygote();<br>    // 取消软引用保护<br>    endIcuCachePinning();<br>    // 初始化JCA安全相关的参数<br>    warmUpJcaProviders();<br>    Log.d(TAG, &quot;end preload&quot;);<br>    sPreloadComplete = true;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="title-浅谈-Android-Zygotedate-2022-05-10-23-31-43updated-2022-05-10-23-31-43categories-Androidtags-虚拟机-Android-Zygote-Java-Magisk-Zygisk-Riru"><a href="#title-浅谈-Android-Zygotedate-2022-05-10-23-31-43updated-2022-05-10-23-31-43categories-Androidtags-虚拟机-Android-Zygote-Java-Magisk-Zygisk-Riru" class="headerlink" title="title: 浅谈 Android Zygotedate: 2022-05-10 23:31:43updated: 2022-05-10 23:31:43categories: Androidtags:- 虚拟机- Android,Zygote,Java,Magisk,Zygisk,Riru"></a>title: 浅谈 Android Zygote<br>date: 2022-05-10 23:31:43<br>updated: 2022-05-10 23:31:43<br>categories: Android<br>tags:<br>- 虚拟机<br>- Android,Zygote,Java,Magisk,Zygisk,Riru</h2><p>Zygote 是 <code>init</code> 进程启动时创建的，通过 <code>fork</code>（复制进程）的形式来创建应用程序进程和 <code>SystemServer</code> 进程。并且，Zygote 进程在启动的时候创建 DVM 或者 ART，因此通过<code>fork</code>创建的应用程序进程和<code>SystemServer</code>进程可以在内部获取一个DVM或者ART的实例副本。</p><hr><p>首先，Android 应用跑的的是虚拟机，虚拟机中 Java 代码的不同才造成了应用的区别，而对于基础的运行环境，要求却是一样的。</p><p>其次，Zygote 在初始化时就会创建虚拟机，同时把需要的系统类库和资源文件加载的内存中。而 Zygote 在 fork 出子进程后，这个子进程也会得到一个已经加载好基础资源的虚拟机。</p><p>这样，接下来只需要装载 APK 相关的资源就可以运行了，可以做到提升效率</p><hr><p>放一个进程树</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">├─ /system/bin/init second_stage // init<br>│  ├─ zygote // 32-Bit Zygote<br>│  │  ├─ moe.mbr.32bit // 程序包名<br>│  │  │  ├─ moe.mbr.32bit // 子进程<br>│  ├─ zygote64 // 64-Bit Zygote<br>│  │  ├─ systemserver // SystemServer<br>│  │  │  ├─ systemserver // 子进程<br>│  │  ├─ com.android.chrome // 程序包名<br>│  │  │  ├─ com.android.chrome // 子进程<br></code></pre></td></tr></table></figure><hr><p>Zygote 在 <code>init</code> 进程中以 service 方式启动，根据 <code>ro.zygote</code> 引入启动脚本，安卓 5.0 开始，Zygote 有了 32&#x2F;64 位的分别，在 Android 12，<code>ro.zygote</code> 取值有四种：</p><ul><li>init.zygote32.rc</li><li>init.zygote32_64.rc</li><li>init.zygote64.rc</li><li>init.zygote64_32.rc</li></ul><h2 id="init-zygote64-32-rc-2"><a href="#init-zygote64-32-rc-2" class="headerlink" title="init.zygote64_32.rc"></a>init.zygote64_32.rc</h2><p>创建 <code>zygote</code> 和 <code>zygote_secondary</code> 服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">service zygote /system/bin/app_process64 -Xzygote /system/bin --zygote --start-system-server --socket-name=zygote<br>    class main<br>    ......<br>service zygote_secondary /system/bin/app_process32 -Xzygote /system/bin --zygote --socket-name=zygote_secondary<br>    class main<br>    ......<br></code></pre></td></tr></table></figure><h2 id="预加载系统类和资源-2"><a href="#预加载系统类和资源-2" class="headerlink" title="预加载系统类和资源"></a>预加载系统类和资源</h2><p>为了加快应用程序的启动，<code>Android</code>会把系统常用的<code>Java类</code>和一部分<code>Framework</code>的资源放在<code>Zygote</code>进程中进行<code>预加载</code>。这些<code>预加载</code>的类和资源在所有经<code>zygote</code>进程<code>fork</code>出的<code>子进程</code>中是共享的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">static void preload(TimingsTraceLog bootTimingsTraceLog) &#123;<br>    ......<br>    // 设置软引用保护，避免被GC回收掉<br>    beginIcuCachePinning();<br>    ......<br>    // 加载系统类<br>    preloadClasses();<br>    ......<br>    // 加载系统资源<br>    preloadResources();<br>    ......<br>    // <br>    nativePreloadAppProcessHALs();<br>    ......<br>    // 加载OpenGL资源<br>    preloadOpenGL();<br>    // 加载一些共享so库，其实就三个：android、compiler_rt、jnigraphics<br>    preloadSharedLibraries();<br>    // 加载字体资源<br>    preloadTextResources();<br>    ......<br>    // 加载webview相关资源<br>    WebViewFactory.prepareWebViewInZygote();<br>    // 取消软引用保护<br>    endIcuCachePinning();<br>    // 初始化JCA安全相关的参数<br>    warmUpJcaProviders();<br>    Log.d(TAG, &quot;end preload&quot;);<br>    sPreloadComplete = true;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
            <tag> Android </tag>
            
            <tag> Zygote </tag>
            
            <tag> Java </tag>
            
            <tag> Magisk </tag>
            
            <tag> Zygisk </tag>
            
            <tag> Riru </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arcaea 修改残片数量</title>
      <link href="/archives/443/"/>
      <url>/archives/443/</url>
      
        <content type="html"><![CDATA[<p>仅供技术研究，请勿用于其它用途！</p><span id="more"></span><hr><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul><li>安卓手机</li><li>拥有 data 分区写入权限</li></ul><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p>修改残片之前必须先<strong>打开一遍 Arcaea</strong>，然后关掉或者不关都可以</p><p>然后需要修改 <code>/data/data/moe.low.arc/shared_prefs/Cocos2dxPrefsFile.xml</code>，打开这个文件</p><p>然后找到这一行：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">int</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;fr_v&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;29997&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p>后面修改为你想要的残片数<br><img src="https://cos.mbrjun.cn/IMGS/2022/05/10/wh.png"></p><p>接下来找到：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">string</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;fr_k&quot;</span>&gt;</span>e71fbd09303b100e1e97b9acc8970bb4<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br></code></pre></td></tr></table></figure><p>将值修改为 md5(<code>残片数ok残片数</code>)<br>比如修改为 29997 残片， md5(<code>29997ok29997</code>) 也就是将 fr_k 修改为 <code>e71fbd09303b100e1e97b9acc8970bb4</code><br><img src="https://cos.mbrjun.cn/IMGS/2022/05/10/df.png"></p><p>MD5 在线计算器: <a href="http://www.md5.cz/">http://www.md5.cz/</a></p><p>修改完成保存，设置权限 660（rw-rw—-）<br>重启 Arcaea 即可生效</p><hr><p>备注：如果使用 MT 管理器修改，需要删除自动生成的备份文件 <code>Cocos2dxPrefsFile.xml.bak</code>，否则修改不会生效</p><p>封面：<a href="https://www.pixiv.net/artworks/83817430">https://www.pixiv.net/artworks/83817430</a><br>作者：Saclia</p>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Arcaea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typecho 数据库优化</title>
      <link href="/archives/440/"/>
      <url>/archives/440/</url>
      
        <content type="html"><![CDATA[<p>本文主要适用于从老版本升级上来的 Typecho，做一下数据库优化提高查表速度，顺便让 blog 支持一下 Emoji</p><span id="more"></span><hr><h2 id="数据表引擎"><a href="#数据表引擎" class="headerlink" title="数据表引擎"></a>数据表引擎</h2><p>1.2 以上版本一律建议 InnoDB，新版本 InnoDB 查表效率比 MyISAM 强很多，在我的机器上，查表能快 10ms 左右<br>旧版本 InnoDB 反而会比 MyISAM 慢</p><h3 id="InnoDB-vs-MyISAM"><a href="#InnoDB-vs-MyISAM" class="headerlink" title="InnoDB vs MyISAM"></a>InnoDB vs MyISAM</h3><table><thead><tr><th>InnoDB</th><th>MyISAM</th></tr></thead><tbody><tr><td>支持事务处理等</td><td>不支持事务处理等</td></tr><tr><td>不加锁读取</td><td></td></tr><tr><td>支持外键</td><td>不支持外键</td></tr><tr><td>支持行锁</td><td>不支持行锁</td></tr><tr><td>不支持FULLTEXT类型的索引</td><td>支持FULLTEXT类型的索引</td></tr><tr><td>不保存表的具体行数，扫描表来计算有多少行</td><td>保存表的具体行数，不带where时，直接返回保存的行数。</td></tr><tr><td>DELETE表时，是一行一行地删除</td><td>DELETE表时，先drop表，然后重建表</td></tr><tr><td>InnoDB把数据和索引存放在表空间里面</td><td>MyISAM表被存放在三个文件，frm文件存放表格定义</td></tr><tr><td>跨平台可直接拷贝使用</td><td>跨平台很难直接拷贝。</td></tr><tr><td>InnoDB中必须包含AUTO_INCREMENT类型字段的索引表格很难被压缩</td><td>MyISAM中可以使用AUTO_INCREMENT类型字段建立联合索引，表格可以被压缩。</td></tr></tbody></table><h3 id="转换方法"><a href="#转换方法" class="headerlink" title="转换方法"></a>转换方法</h3><p>将 MyISAM 转换为 InnoDB 的方法：</p><p>可以使用下面的命令，或者使用 PHPMyAdmin 等工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">ALTER TABLE `blog_metas` ENGINE = InnoDB<br></code></pre></td></tr></table></figure><p>将 <code>blog_metas</code> 替换为你 Typecho 的数据表，分别将每个数据表都转换为 InnoDB，转换完成后修改配置文件 <code>config.inc.php</code>，开启 InnoDB</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//config db</span><br><span class="hljs-variable">$db</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">\Typecho\Db</span>(<span class="hljs-string">&#x27;Pdo_Mysql&#x27;</span>, <span class="hljs-string">&#x27;blog_&#x27;</span>);<br><span class="hljs-variable">$db</span>-&gt;<span class="hljs-title function_ invoke__">addServer</span>(<span class="hljs-keyword">array</span> (<br>  <span class="hljs-string">&#x27;host&#x27;</span> =&gt; <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>,<br>  <span class="hljs-string">&#x27;port&#x27;</span> =&gt; <span class="hljs-number">3306</span>,<br>  <span class="hljs-string">&#x27;user&#x27;</span> =&gt; <span class="hljs-string">&#x27;MBRjun&#x27;</span>,<br>  <span class="hljs-string">&#x27;password&#x27;</span> =&gt; <span class="hljs-string">&#x27;DATABASE PASSWORD&#x27;</span>,<br>  <span class="hljs-string">&#x27;charset&#x27;</span> =&gt; <span class="hljs-string">&#x27;utf8mb4&#x27;</span>,<br>  <span class="hljs-string">&#x27;database&#x27;</span> =&gt; <span class="hljs-string">&#x27;mbrjun&#x27;</span>,<br>  <span class="hljs-string">&#x27;engine&#x27;</span> =&gt; <span class="hljs-string">&#x27;InnoDB&#x27;</span>,<br>), <span class="hljs-title class_">\Typecho\Db</span>::<span class="hljs-variable constant_">READ</span> | <span class="hljs-title class_">\Typecho\Db</span>::<span class="hljs-variable constant_">WRITE</span>);<br><span class="hljs-title class_">\Typecho\Db</span>::<span class="hljs-title function_ invoke__">set</span>(<span class="hljs-variable">$db</span>);<br></code></pre></td></tr></table></figure><p>将 engine 修改为 InnoDB</p><h2 id="排序规则-字符集"><a href="#排序规则-字符集" class="headerlink" title="排序规则 &amp; 字符集"></a>排序规则 &amp; 字符集</h2><p>老版本默认的字符集是 <code>utf8</code>，这个字符集是不支持 ?emoji 和部分生僻字的，建议修改为 <code>utf8mb4</code>，同时将排序规则修改为 <code>utf8mb4_0900_ai_ci</code></p><p>修改字符集的命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">ALTER TABLE blog_metas CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci<br></code></pre></td></tr></table></figure><p>PHPMyAdmin：<br><img src="https://cos.mbrjun.cn/IMGS/2022/05/06/ei.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> typecho </tag>
            
            <tag> 优化 </tag>
            
            <tag> Mysql </tag>
            
            <tag> 数据库 </tag>
            
            <tag> UTF8 </tag>
            
            <tag> emoji </tag>
            
            <tag> InnoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从 Let&#39;s Encrypt E1 获取 ECDSA 证书</title>
      <link href="/archives/442/"/>
      <url>/archives/442/</url>
      
        <content type="html"><![CDATA[<p>ECDSA 证书，即 ECC 证书，具有很多优势，例如效率更高，满足同等安全性的情况下密钥更短，下面详细列出了一部分优势：</p><ul><li>ECC 密钥更短，意味着 ECC 将占用更少的资源却有更高的性能；</li><li>ECC 更易扩展，随着 RSA 密钥更长只会让 SSL&#x2F;TLS 面临更多的麻烦；</li><li>ECC 并不太容易受到量子计算机的安全威胁；</li><li>256 位 ECC 安全性等同于 3072 位 RSA</li></ul><p>本文将详细介绍如何从 Let’s Encrypt 获取一张 ECC 证书</p><span id="more"></span><h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><p>一台服务器，Linux 和 Windows 均可，更建议 Linux，作者使用 TencentOS 3.1 演示</p><h2 id="安装-acme-sh"><a href="#安装-acme-sh" class="headerlink" title="安装 acme.sh"></a>安装 acme.sh</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl https://get.acme.sh | sh -s email=邮箱<br></code></pre></td></tr></table></figure><p><img src="https://cos.mbrjun.cn/IMGS/2022/05/03/eg.png"></p><p>安装完成后需要重启终端，如果懒得重启，里面再开个新的 bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash<br></code></pre></td></tr></table></figure><h2 id="设置-CA"><a href="#设置-CA" class="headerlink" title="设置 CA"></a>设置 CA</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">acme.sh --issue -d example.com --dns dns_cf --server letsencrypt<br></code></pre></td></tr></table></figure><p>设置为 Let’s Encrypt</p><h2 id="注册账户"><a href="#注册账户" class="headerlink" title="注册账户"></a>注册账户</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">acme.sh --update-account<br></code></pre></td></tr></table></figure><p>会输出一个类似  <a href="https://acme-v02.api.letsencrypt.org/acme/acct/12345678">https://acme-v02.api.letsencrypt.org/acme/acct/12345678</a> 的链接，这个链接就是你的账户 ID</p><h2 id="获得-E1-许可"><a href="#获得-E1-许可" class="headerlink" title="获得 E1 许可"></a>获得 E1 许可</h2><p>Let’s Encrypt 目前有八个中间证书颁发机构，分别是：</p><ul><li>已弃用：X1、X2、X3、X4</li><li>活跃：R3</li><li>活跃（受限制）：E1</li><li>灾难备份：R4、E2</li></ul><p>其中已弃用的四个中间证书颁发机构的根证书颁发机构（CA）是：</p><ul><li>ISRG Root X1</li><li>IdenTrust</li></ul><p>R3、R4 的根证书颁发机构（CA）是：</p><ul><li>ISRG Root X1</li><li><del>IdenTrust（弃用）</del></li></ul><p>而 E1、E2 有一个全新的 CA：</p><ul><li>ISRG Root X2</li></ul><p>目前，E1 不是所有人都可以申请，你必须先填写下面的申请表格，然后才能获取证书：</p><p><a href="https://forms.gle/ftKeqkj6AJgXUDPJ8">https://forms.gle/ftKeqkj6AJgXUDPJ8</a></p><blockquote><p>上面的链接在中国大陆无法直接打开，建议通过合法使用代理等方式打开。</p></blockquote><p><img src="https://cos.mbrjun.cn/IMGS/2022/05/03/dg.png"></p><p>Let’s Encrypt 的工作人员每周四集中进行审批，因此你可能需要等待一段时间</p><h2 id="获取证书"><a href="#获取证书" class="headerlink" title="获取证书"></a>获取证书</h2><p>如果你拥有了 E1 许可，就可以创建 ECDSA 证书了</p><p>如果你想使用 DNS 验证，需要先配置 DNS API<br>如果你的 DNS 不支持 API，或者使用文件验证，请跳过这一步<br>这里使用 DNSPod 演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> DP_Id=<span class="hljs-string">&quot;114514&quot;</span><br><span class="hljs-built_in">export</span> DP_Key=<span class="hljs-string">&quot;0123456789ABCDEF&quot;</span><br></code></pre></td></tr></table></figure><p>然后申请证书</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">acme.sh --issue --dns dns_dp -d mbrjun.cn  -d <span class="hljs-string">&quot;*.mbrjun.cn&quot;</span> --keylength ec-384<br></code></pre></td></tr></table></figure><p>参数解释：</p><ul><li>-d 后面的是你的域名，支持多个域名，支持通配符，如果是中文&#x2F;emoji域名请你编码，如果是通配符请打上双引号</li><li>–keylength 后面是密钥强度，可以是 <code>ec-256</code> 或者 <code>ec-384</code></li></ul><p><img src="https://cos.mbrjun.cn/IMGS/2022/05/03/ne.png"></p><p>然后应该就能成功申请了，证书和私钥保存在 <code>.acme.sh</code>目录下</p><h2 id="关于本站"><a href="#关于本站" class="headerlink" title="关于本站"></a>关于本站</h2><p>本站玩过了很多证书，最后觉得还是 Let’s Encrypt E1 好看x</p><p>其实 ZeroSSL 也很好玩  </p><p>本站玩过的部分证书：</p><ul><li>TrustAsia RSA CA</li><li>Digicert RSA2048</li><li>TrustAsia ECC CA</li><li>Let’s Encrypt R3</li><li>Let’s Encrypt E1</li><li>ZeroSSL</li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTTPS </tag>
            
            <tag> TLS </tag>
            
            <tag> 证书 </tag>
            
            <tag> SSL </tag>
            
            <tag> ECDSA </tag>
            
            <tag> RSA </tag>
            
            <tag> ECC </tag>
            
            <tag> ACME </tag>
            
            <tag> acme.sh </tag>
            
            <tag> Let&#39;s Encrypt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typecho 使用腾讯云 CDN 配置 HTTP 回源</title>
      <link href="/archives/438/"/>
      <url>/archives/438/</url>
      
        <content type="html"><![CDATA[<p>经过测试，腾讯云  CDN HTTPS 回源会比 HTTP 慢很多，大概 100ms，改成 HTTP 回源又出现了一些问题，这篇文章总结一下配置 HTTP 回源出现的问题，大家遇到问题可以参考一下</p><span id="more"></span><hr><h2 id="QUIC-Mixed-Content"><a href="#QUIC-Mixed-Content" class="headerlink" title="QUIC Mixed Content"></a>QUIC Mixed Content</h2><p>腾讯云 CDN 如果采用 HTTP 回源，同时开启了 QUIC 访问，则通过 QUIC 访问的用户访问网站时极大概率会出现混合内容错误，也就是 Mixed Content，原因是 Typecho 当前版本不把 QUIC 当做 https<br>发生混合内容错误一般有两种表现</p><ul><li>页面资源无法正常加载（被浏览器屏蔽）</li><li>点击浏览器地址栏 https 旁边的锁头后出现警告：连接不够安全</li></ul><p>我给 Typecho 扔了一个 PR，<del>未来这个问题可能会被修复</del>已经并进去了，见 <a href="https://github.com/typecho/typecho/pull/1423">https://github.com/typecho/typecho/pull/1423</a></p><p>你也可以手动修复这个问题：</p><ul><li>代码编辑器打开 <code>var/Typecho/Request.php</code></li><li>在原本第 432 行的位置换行（Typecho Release 1.2），插入以下内容</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs PHP">|| (!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;HTTP_X_FORWARDED_PROTO&#x27;</span>]) &amp;&amp; !<span class="hljs-title function_ invoke__">strcasecmp</span>(<span class="hljs-string">&#x27;quic&#x27;</span>, <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;HTTP_X_FORWARDED_PROTO&#x27;</span>]))<br></code></pre></td></tr></table></figure><p><img src="https://cos.mbrjun.cn/IMGS/2022/04/29/yz.jpg"></p><h2 id="TOO-MANY-REDIRECTS"><a href="#TOO-MANY-REDIRECTS" class="headerlink" title="TOO_MANY_REDIRECTS"></a>TOO_MANY_REDIRECTS</h2><p>如果发生了重定向循环，一般是因为源站配置了强制HTTPS，取消该配置即可</p>]]></content>
      
      
      <categories>
          
          <category> 代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> typecho </tag>
            
            <tag> CDN </tag>
            
            <tag> 腾讯云 </tag>
            
            <tag> blog </tag>
            
            <tag> PHP </tag>
            
            <tag> http </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为 IP 地址 免费签发 SSL/TLS 证书</title>
      <link href="/archives/435/"/>
      <url>/archives/435/</url>
      
        <content type="html"><![CDATA[<p>一般的 SSL&#x2F;TLS CA 只向域名颁发证书，本文介绍一个给 IP 免费颁发证书的 CA</p><span id="more"></span><p>首先看看配置好之后的效果<br><img src="https://cos.mbrjun.cn/IMGS/2022/04/27/st.png"></p><hr><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><h3 id="获取证书"><a href="#获取证书" class="headerlink" title="获取证书"></a>获取证书</h3><p>首先打开 <a href="https://app.zerossl.com/certificates">https://app.zerossl.com/certificates</a><br> 进入上面的网址登录，如果没有账户，可以按 “Get started for free” 注册</p><p>登录好之后，点击右上角 “New Certificate”，然后填写你服务器的 IP（支持 IPv6）<br><img src="https://cos.mbrjun.cn/IMGS/2022/04/27/xy.png"><br>需要注意的是，如果你想要申请 IPv6 的证书，你需要填写完整 IP（类似 <code>2402:abcd:abcd:abcd:0000:0000:0000:0000</code> 而不是 <code>2402:abcd:abcd:abcd::</code></p><ul><li>时间选择 90 天，然后一路下一步</li><li>域名验证方法请选择【文件验证】</li></ul><p>把网页上的验证文件上传到服务器网站目录</p><h3 id="安装证书"><a href="#安装证书" class="headerlink" title="安装证书"></a>安装证书</h3><p><img src="https://cos.mbrjun.cn/IMGS/2022/04/27/ud.png"><br>申请成功后应该会显示这个界面，选择你的 Web 服务器，下载证书压缩包<br>然后打开<a href="https://myssl.com/chain_download.html">证书链补全工具</a>，上传 certificate.crt，然后把生成的完整证书链下载</p><p>然后就可以把证书安装到服务器了，之后访问 IP 地址也可以有 “https”</p><h3 id="自动续费"><a href="#自动续费" class="headerlink" title="自动续费"></a>自动续费</h3><p><a href="https://github.com/tinkernels/zerossl-ip-cert">https://github.com/tinkernels/zerossl-ip-cert</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IPv6 </tag>
            
            <tag> TLS </tag>
            
            <tag> 证书 </tag>
            
            <tag> SSL </tag>
            
            <tag> 免费SSL </tag>
            
            <tag> zerossl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>白嫖 IBM LinuxOne VPS</title>
      <link href="/archives/434/"/>
      <url>/archives/434/</url>
      
        <content type="html"><![CDATA[<p>写一篇白嫖 IBM LinuxOne 的教程</p><span id="more"></span><p>开头提醒一下：这个 VPS 是 S390X 架构的，兼容性不如 x86-64，能安装的软件不多，这个机子比较适合建站，LNMP、LAMP、宝塔之类的都可以跑，性能和并发也是挺强的，做编译机也是很好的<br>挖矿的话大概率是不行的，<del>而且条款也不允许</del>，高技术力的可以试试自己编译 xmrig 测试<br>也<strong>不建议</strong>你用这个东西搭建代理工具，易封号，但是这个机子确实能搭<br>也可以开 Minecraft 服务器，但是延迟会比较高</p><hr><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul><li>一个邮箱，推荐 GMail，国内可以 Outlook，不推荐 iCloud、QQ</li><li>英文基础，看不懂英文请使用浏览器翻译插件</li><li>Linux 基础</li></ul><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p><a href="https://linuxone.cloud.marist.edu/#/register?flag=VM">先进官网注册</a>，需要填写一些基本信息，地区写中国就可以了，如果是美国要验证地址和电话，申请理由可以写“Building Android”“Machine Learning”“develop website”之类的，如果描述不太清楚可能审核不通过<br><img src="https://cos.mbrjun.cn/IMGS/2022/04/18/js.png"><br>注册账户有概率出现人工审核，一般是由于你开了代理或者邮箱不好，注册好了邮箱会收到一封邮件，点击邮件里链接验证，验证好了会受到另一封邮件，里面有账户的过期时间<br>然后去<a href="https://linuxone.cloud.marist.edu/#/instance">创建实例</a>，系统一般选择 RHEL（CentOS 的妈）或 Ubuntu，配置直接选择 2 核 4 GB 就可以<br>创建好了去生成一下 SSH 密钥，这台机子默认没启用密码登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">ssh-keygen -t rsa<br></code></pre></td></tr></table></figure><p><img src="https://cos.mbrjun.cn/IMGS/2022/04/18/tr.png"></p><p>把 SSH 密钥拷到 LinuxOne 机器上，然后就可以用这个密钥连接了，账号名是 <code>linux1</code>，登陆成功会有下面的消息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">&gt;___ ____  __  __      _     _                   ___  _   _ _____<br>|_ _| __ )|  \/  |    | |   (_)_ __  _   ___  __/ _ \| \ | | ____|<br> | ||  _ \| |\/| |    | |   | | &#x27;_ \| | | \ \/ / | | |  \| |  _|<br> | || |_) | |  | |    | |___| | | | | |_| |&gt;  &lt;| |_| | |\  | |___<br>|___|____/|_|  |_|    |_____|_|_| |_|\__,_/_/\_\\___/|_| \_|_____|<br><br>=================================================================================<br>Welcome to the IBM LinuxONE Community Cloud!<br><br>This server is for authorized users only. All activity is logged and monitored.<br>Individuals using this server must abide to the Terms and Conditions listed here:<br>https://www.ibm.com/community/z/ibm-linuxone-community-cloud-terms-and-conditions/<br>Your access will be revoked for any non-compliance.<br>==================================================================================<br></code></pre></td></tr></table></figure><h2 id="SSH-开启密码登录"><a href="#SSH-开启密码登录" class="headerlink" title="SSH 开启密码登录"></a>SSH 开启密码登录</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">vim /etc/ssh/sshd_config<br></code></pre></td></tr></table></figure><p><img src="https://cos.mbrjun.cn/IMGS/2022/04/18/dy.png"><br><img src="https://cos.mbrjun.cn/IMGS/2022/04/18/ui.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">[ESC]:wq[Enter]<br>systemctl restart sshd<br></code></pre></td></tr></table></figure><h2 id="机器测试"><a href="#机器测试" class="headerlink" title="机器测试"></a>机器测试</h2><p>测试一些基本、常用的程序和功能</p><h3 id="uname-a"><a href="#uname-a" class="headerlink" title="uname -a"></a>uname -a</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext"># uname -a<br>Linux MBR390 3.10.0-1160.59.1.el7.s390x #1 SMP Wed Feb 16 07:14:49 EST 2022 s390x s390x s390x GNU/Linux<br></code></pre></td></tr></table></figure><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><p>能装，但是要注意容器是否提供 S390x 架构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">WARNING: The requested image&#x27;s platform (linux/amd64) does not match the detected host platform (linux/s390x) and no specific platform was requested<br></code></pre></td></tr></table></figure><h3 id="LNMP-LAMP"><a href="#LNMP-LAMP" class="headerlink" title="LNMP&#x2F;LAMP"></a>LNMP&#x2F;LAMP</h3><p>能装，用包管理器，<code>yum</code> 或 <code>apt</code></p><h3 id="cpuinfo"><a href="#cpuinfo" class="headerlink" title="cpuinfo"></a>cpuinfo</h3><p>5.2 GHz，960MB 四级缓存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cat</span> /proc/cpuinfo<br>vendor_id       : IBM/S390<br><span class="hljs-comment"># processors    : 2</span><br>bogomips per cpu: 3241.00<br>max thread <span class="hljs-built_in">id</span>   : 0<br>features        : esan3 zarch stfle msa ldisp eimm dfp edat etf3eh highgprs te vx vxd vxe gs vxe2 vxp <span class="hljs-built_in">sort</span> dflt sie<br>facilities      : 0 1 2 3 4 6 7 8 9 10 12 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 30 31 32 33 34 35 36 37 38 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 57 58 59 60 61 73 74 75 76 77 80 81 82 128 129 130 131 133 134 135 146 147 148 150 151 152 155 156 168<br>cache0          : level=1 <span class="hljs-built_in">type</span>=Data scope=Private size=128K line_size=256 associativity=8<br>cache1          : level=1 <span class="hljs-built_in">type</span>=Instruction scope=Private size=128K line_size=256 associativity=8<br>cache2          : level=2 <span class="hljs-built_in">type</span>=Data scope=Private size=4096K line_size=256 associativity=8<br>cache3          : level=2 <span class="hljs-built_in">type</span>=Instruction scope=Private size=4096K line_size=256 associativity=8<br>cache4          : level=3 <span class="hljs-built_in">type</span>=Unified scope=Shared size=262144K line_size=256 associativity=32<br>cache5          : level=4 <span class="hljs-built_in">type</span>=Unified scope=Shared size=983040K line_size=256 associativity=60<br>processor 0: version = FF,  identification = 0418E8,  machine = 8561<br>processor 1: version = FF,  identification = 0418E8,  machine = 8561<br><br>cpu number      : 0<br>cpu MHz dynamic : 5200<br>cpu MHz static  : 5200<br><br>cpu number      : 1<br>cpu MHz dynamic : 5200<br>cpu MHz static  : 5200<br></code></pre></td></tr></table></figure><h3 id="neofetch"><a href="#neofetch" class="headerlink" title="neofetch"></a>neofetch</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">RHEL       .MMM..:MMMMMMM                  root@MBR390<br>          MMMMMMMMMMMMMMMMMM               -----------<br>          MMMMMMMMMMMMMMMMMMMM.            OS: Red Hat Enterprise Linux Server 7.9 (Maipo) s390x<br>         MMMMMMMMMMMMMMMMMMMMMM            Kernel: 3.10.0-1160.59.1.el7.s390x<br>        ,MMMMMMMMMMMMMMMMMMMMMM:           Uptime: 7 hours, 30 mins<br>        MMMMMMMMMMMMMMMMMMMMMMMM           Packages: 471 (rpm)<br>  .MMMM&#x27;  MMMMMMMMMMMMMMMMMMMMMM           Shell: bash 4.2.46<br> MMMMMM    `MMMMMMMMMMMMMMMMMMMM.          Terminal: /dev/pts/0<br>MMMMMMMM      MMMMMMMMMMMMMMMMMM .         CPU: 8561 (2)<br>MMMMMMMMM.       `MMMMMMMMMMMMM&#x27; MM.       Memory: 1150MiB / 3847MiB<br>MMMMMMMMMMM.                     MMMM<br>`MMMMMMMMMMMMM.                 ,MMMMM.<br> `MMMMMMMMMMMMMMMMM.          ,MMMMMMMM.<br>    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM<br>      MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM:<br>         MMMMMMMMMMMMMMMMMMMMMMMMMMMMMM<br>            `MMMMMMMMMMMMMMMMMMMMMMMM:<br>                ``MMMMMMMMMMMMMMMMM&#x27;<br></code></pre></td></tr></table></figure><h3 id="宝塔"><a href="#宝塔" class="headerlink" title="宝塔"></a>宝塔</h3><p>可以用，但是不能用官方的方法，安装方法如下</p><h4 id="RHEL"><a href="#RHEL" class="headerlink" title="RHEL"></a>RHEL</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 复制所有命令粘贴到终端</span><br>sudo su<br>iptables -P INPUT ACCEPT<br>iptables -P FORWARD ACCEPT<br>iptables -P OUTPUT ACCEPT<br>iptables -F<br>iptables-save<br>yum install -y wget curl &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh ed8484bec<br>btpip install gevent<br>btpip install flask<br>btpip install gevent-websocket<br>btpip install psutil<br><span class="hljs-built_in">cd</span> /tmp<br>curl https://raw.githubusercontent.com/MBRjun/btpanel-v7.7.0/main/install/install_panel.sh --output install_panel.sh<br>bash install_panel.sh<br>sed -i <span class="hljs-string">&quot;s|if (bind_user == &#x27;True&#x27;) &#123;|if (bind_user == &#x27;REMOVED&#x27;) &#123;|g&quot;</span> /www/server/panel/BTPanel/static/js/index.js<br>btpip install requests<br><span class="hljs-built_in">rm</span> install_panel.sh<br></code></pre></td></tr></table></figure><h4 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 复制所有命令粘贴到终端</span><br>sudo su<br>iptables -P INPUT ACCEPT<br>iptables -P FORWARD ACCEPT<br>iptables -P OUTPUT ACCEPT<br>iptables -F<br>iptables-save<br>wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh ed8484bec<br>btpip install gevent<br>btpip install flask<br>btpip install gevent-websocket<br>btpip install psutil<br>wget https://raw.githubusercontent.com/MBRjun/btpanel-v7.7.0/main/install/install_panel.sh<br>bash install_panel.sh<br>sed -i <span class="hljs-string">&quot;s|if (bind_user == &#x27;True&#x27;) &#123;|if (bind_user == &#x27;REMOVED&#x27;) &#123;|g&quot;</span> /www/server/panel/BTPanel/static/js/index.js<br>btpip install requests<br><span class="hljs-built_in">rm</span> install_panel.sh<br></code></pre></td></tr></table></figure><h3 id="SpeedTest"><a href="#SpeedTest" class="headerlink" title="SpeedTest"></a>SpeedTest</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">#二进制版本不支持 S390x，请使用包管理器<br>curl -s https://install.speedtest.net/app/cli/install.rpm.sh | sudo bash<br>sudo yum install speedtest<br>speedtest<br><br>    Latency:    17.57 ms   (0.14 ms jitter)<br>   Download:   1.15 Gbps (data used: 1.75 GB )<br>     Upload:     0.50 Gbps (data used: 0.71 GB )<br>Packet Loss:     0.0%<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> VPS </tag>
            
            <tag> 宝塔 </tag>
            
            <tag> S390X </tag>
            
            <tag> RHEL </tag>
            
            <tag> LinuxOne </tag>
            
            <tag> MC服 </tag>
            
            <tag> LNMP </tag>
            
            <tag> LAMP </tag>
            
            <tag> 大型机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typecho TTFB、加载速度优化教程</title>
      <link href="/archives/432/"/>
      <url>/archives/432/</url>
      
        <content type="html"><![CDATA[<p>很多人搭建 Typecho 之后都会觉得自己的网站有些慢，想要优化下打开速度，碰巧最近站长也在做优化，所以写一篇优化教程。</p><span id="more"></span><hr><p>先贴一下我机器的配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">BASH             ..                    root@MBR-Server<br>               .PLTJ.                  ---------------<br>              &lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;                 OS: Tencent OS Server 3.1 20220217<br>     KKSSV&#x27; 4KKK LJ KKKL.&#x27;VSSKK        Host: CVM 3.0<br>     KKV&#x27; 4KKKKK LJ KKKKAL &#x27;VKK        Kernel: 5.4.119-19-0009.1<br>     V&#x27; &#x27; &#x27;VKKKK LJ KKKKV&#x27; &#x27; &#x27;V        Network: 1 Mbps<br>     .4MA.&#x27; &#x27;VKK LJ KKV&#x27; &#x27;.4Mb.        Packages: 1169 (rpm)<br>   . KKKKKA.&#x27; &#x27;V LJ V&#x27; &#x27;.4KKKKK .      Shell: bash 4.4.20<br> .4D KKKKKKKA.&#x27;&#x27; LJ &#x27;&#x27;.4KKKKKKK FA.    Terminal: /dev/pts/1<br>&lt;QDD ++++++++++++  ++++++++++++ GFD&gt;   CPU: AMD EPYC 7K62 (2) @ 2.595GHz<br> &#x27;VD KKKKKKKK&#x27;.. LJ ..&#x27;KKKKKKKK FV     GPU: 00:02.0 Cirrus Logic GD 5446<br>   &#x27; VKKKKK&#x27;. .4 LJ K. .&#x27;KKKKKV &#x27;      Memory: 1262MiB / 1721MiB<br>      &#x27;VK&#x27;. .4KK LJ KKA. .&#x27;KV&#x27;         SSD: 50GB<br>     A. . .4KKKK LJ KKKKA. . .4<br>     KKA. &#x27;KKKKK LJ KKKKK&#x27; .4KK<br>     KKSSA. VKKK LJ KKKV .4SSKK<br>              &lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;<br>               &#x27;MKKM&#x27;<br>                 &#x27;&#x27;<br></code></pre></td></tr></table></figure><p>低配置的机子做好了优化速度也能很快，本站国内的平均打开速度为 1.0s，如果不做任何优化，那么本站首页的速度可能有 4s 左右</p><h2 id="优化教程"><a href="#优化教程" class="headerlink" title="优化教程"></a>优化教程</h2><h3 id="测试速度"><a href="#测试速度" class="headerlink" title="测试速度"></a>测试速度</h3><p>首先先测试一下当前的网页速度，按 F12 打开调试控制台，选择 网络，勾选持久日志和禁用缓存，清除 Service Worker，清理日志，刷新，调试控制台下面就会显示页面加载的耗时<br><img src="https://cos.mbrjun.cn/IMGS/2022/04/15/jv.png"><br>顺便推荐一个更好用的网页测速工具：<a href="https://pagespeed.web.dev/">PageSpeed Insights</a><br><img src="https://cos.mbrjun.cn/IMGS/2022/04/15/li.png"></p><p>测试完成速度可以开始按照下面的教程优化了<br>（TIP：本站有目录功能）</p><h3 id="WebP-压缩"><a href="#WebP-压缩" class="headerlink" title="WebP 压缩"></a>WebP 压缩</h3><p>WebP 是一个高压缩比的图片格式，支持无损和有损压缩，也支持透明图层，如果你网站的图片是 png 格式提供的，压缩为 WebP 通常会有很大的提升<br>WebP 图片的体积一般只有同等分辨率下 png 图片体积的十分之一。<br>目前压缩有两种常见的方法：</p><h4 id="CDN-自动压缩"><a href="#CDN-自动压缩" class="headerlink" title="CDN 自动压缩"></a>CDN 自动压缩</h4><p>部分 CDN 可以自动给图片进行 WebP 压缩，如果客户端支持 WebP，则使用 WebP，否则提供原图<br><img src="https://cos.mbrjun.cn/IMGS/2022/04/15/nq.png"></p><h4 id="手动压缩"><a href="#手动压缩" class="headerlink" title="手动压缩"></a>手动压缩</h4><p>如果你的 CDN 不支持自动压缩，你也可以手动压缩，但是手动压缩会有一个问题，就是不支持 IE 浏览器<br>如果想要手动压缩，只需要前往 <a href="https://squoosh.app/">https://squoosh.app</a></p><h3 id="PHP-版本"><a href="#PHP-版本" class="headerlink" title="PHP 版本"></a>PHP 版本</h3><p>旧版本（5.x）的 PHP 运行 Typecho 会很慢，强烈建议更新到 7.x 或者 8.x<br>注：Typecho 近期推出了 1.2 版本，距离上次更新有五年之久，1.1 版本不兼容 PHP 7.4+</p><h3 id="数据库缓存"><a href="#数据库缓存" class="headerlink" title="数据库缓存"></a>数据库缓存</h3><p>网站加载时间（TTFB）长的一大原因是查询数据库耗时太长，采用缓存可以有效加速（用户打开网页直接使用缓存，不再查询数据库）<br>MySQL 8.0 弃用了查询缓存，所以我们需要选择一个其他的高性能缓存器，本站的数据库缓存采用了 Redis</p><h4 id="Redis-安装"><a href="#Redis-安装" class="headerlink" title="Redis 安装"></a>Redis 安装</h4><ol><li>首先安装一个 Redis 6.2.6</li><li>然后给你的 PHP 安装 Redis 插件</li><li>Typecho 内安装 TpCache</li></ol><h3 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h3><p>CDN（内容分发网络）可以有效加速网页静态资源，并隐藏源站 IP，如果你使用 CDN，建议把所有动态页面设置为“不缓存”，所有静态资源都设置为“365 天”</p><h3 id="宝塔缓存"><a href="#宝塔缓存" class="headerlink" title="宝塔缓存"></a>宝塔缓存</h3><p>如果你用宝塔可以整一个，效果是挺好的，免费版每日 50000 次，破解版无限制，50000 次对普通个人肯定够了，除非遇上 CC<br><img src="https://cos.mbrjun.cn/IMGS/2022/04/15/vg.png"></p><h3 id="OpCache"><a href="#OpCache" class="headerlink" title="OpCache"></a>OpCache</h3><p>脚本缓存器，直接安装即可</p><h3 id="TCP-Fast-Open"><a href="#TCP-Fast-Open" class="headerlink" title="TCP Fast Open"></a>TCP Fast Open</h3><p>该功能要求 Linux 3.7 以上，有的发行版使用老内核无法开启，使用 <code>uname -r</code> 检查 Linux 版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">5.4.119-19-0009.1<br></code></pre></td></tr></table></figure><p>返回值大于 3.7 即可，目前已知 CentOS 7 是不支持该功能的<br>开启方法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">#二选一：<br>sysctl -w net.ipv4.tcp_fastoepn=3 #上传下载都允许 TFO<br>sysctl -w net.ipv4.tcp_fastoepn=2 #服务器模式，仅上传允许<br></code></pre></td></tr></table></figure><h3 id="HTTP-3"><a href="#HTTP-3" class="headerlink" title="HTTP&#x2F;3"></a>HTTP&#x2F;3</h3><p>开启 HTTP&#x2F;3 后可以有效提高握手效率，你需要编译 <code>nginx-quic</code> 来使用该功能<br>目前最新的 HTTP&#x2F;3 版本有：h3（正式版）、h3-29（IETF）、h3-Q050（Google）<br>开启 HTTP&#x2F;3 后，你可以看到服务器发回的响应有一个 <code>alt-svc</code> 头<br>? 在这里测试你的网站是否支持 HTTP&#x2F;3<br><a href="https://http3check.net/">https://http3check.net/</a><br><img src="https://cos.mbrjun.cn/IMGS/2022/04/15/xi.png"></p><h3 id="TCP-BBR"><a href="#TCP-BBR" class="headerlink" title="TCP BBR"></a>TCP BBR</h3><p>开启 TCP BBR 可有效提高 TCP 连接性能，见此文章：<br><a href="https://blog.mbrjun.cn/archives/431">https://blog.mbrjun.cn/archives/431</a></p><h3 id="MySQL-引擎"><a href="#MySQL-引擎" class="headerlink" title="MySQL 引擎"></a>MySQL 引擎</h3><p>Typecho 旧版本使用 MySQL 更适合 MyISAM 引擎（默认就是 MyISAM），如果你设置了 Innodb，请改回 MyISAM<br><strong>如果你升级到了 Release 1.2，那么请你使用 InnoDB</strong></p><h3 id="降低压缩率"><a href="#降低压缩率" class="headerlink" title="降低压缩率"></a>降低压缩率</h3><p>动态文档压缩要消耗很长时间，请减小动态文档的压缩率，或者直接关闭压缩<br>GZip 压缩率设置为 9，TTFB 大约 500ms，设置为 4 大约 300ms，设置为 1 大约 200ms</p><hr><h2 id="title-Typecho-TTFB、加载速度优化教程date-2022-04-15-15-35-00updated-2022-04-28-00-39-56categories-网络tags-网站-typecho-优化-Mysql-Nginx-建站-博客-加速-FTTB"><a href="#title-Typecho-TTFB、加载速度优化教程date-2022-04-15-15-35-00updated-2022-04-28-00-39-56categories-网络tags-网站-typecho-优化-Mysql-Nginx-建站-博客-加速-FTTB" class="headerlink" title="title: Typecho TTFB、加载速度优化教程date: 2022-04-15 15:35:00updated: 2022-04-28 00:39:56categories: 网络tags:- 网站- typecho,优化,Mysql,Nginx,建站,博客,加速,FTTB"></a>title: Typecho TTFB、加载速度优化教程<br>date: 2022-04-15 15:35:00<br>updated: 2022-04-28 00:39:56<br>categories: 网络<br>tags:<br>- 网站<br>- typecho,优化,Mysql,Nginx,建站,博客,加速,FTTB</h2><p>很多人搭建 Typecho 之后都会觉得自己的网站有些慢，想要优化下打开速度，碰巧最近站长也在做优化，所以写一篇优化教程。</p><hr><p>先贴一下我机器的配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">BASH             ..                    root@MBR-Server<br>               .PLTJ.                  ---------------<br>              &lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;                 OS: Tencent OS Server 3.1 20220217<br>     KKSSV&#x27; 4KKK LJ KKKL.&#x27;VSSKK        Host: CVM 3.0<br>     KKV&#x27; 4KKKKK LJ KKKKAL &#x27;VKK        Kernel: 5.4.119-19-0009.1<br>     V&#x27; &#x27; &#x27;VKKKK LJ KKKKV&#x27; &#x27; &#x27;V        Network: 1 Mbps<br>     .4MA.&#x27; &#x27;VKK LJ KKV&#x27; &#x27;.4Mb.        Packages: 1169 (rpm)<br>   . KKKKKA.&#x27; &#x27;V LJ V&#x27; &#x27;.4KKKKK .      Shell: bash 4.4.20<br> .4D KKKKKKKA.&#x27;&#x27; LJ &#x27;&#x27;.4KKKKKKK FA.    Terminal: /dev/pts/1<br>&lt;QDD ++++++++++++  ++++++++++++ GFD&gt;   CPU: AMD EPYC 7K62 (2) @ 2.595GHz<br> &#x27;VD KKKKKKKK&#x27;.. LJ ..&#x27;KKKKKKKK FV     GPU: 00:02.0 Cirrus Logic GD 5446<br>   &#x27; VKKKKK&#x27;. .4 LJ K. .&#x27;KKKKKV &#x27;      Memory: 1262MiB / 1721MiB<br>      &#x27;VK&#x27;. .4KK LJ KKA. .&#x27;KV&#x27;         SSD: 50GB<br>     A. . .4KKKK LJ KKKKA. . .4<br>     KKA. &#x27;KKKKK LJ KKKKK&#x27; .4KK<br>     KKSSA. VKKK LJ KKKV .4SSKK<br>              &lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;<br>               &#x27;MKKM&#x27;<br>                 &#x27;&#x27;<br></code></pre></td></tr></table></figure><p>低配置的机子做好了优化速度也能很快，本站国内的平均打开速度为 1.0s，如果不做任何优化，那么本站首页的速度可能有 4s 左右</p><h2 id="优化教程-1"><a href="#优化教程-1" class="headerlink" title="优化教程"></a>优化教程</h2><h3 id="测试速度-1"><a href="#测试速度-1" class="headerlink" title="测试速度"></a>测试速度</h3><p>首先先测试一下当前的网页速度，按 F12 打开调试控制台，选择 网络，勾选持久日志和禁用缓存，清除 Service Worker，清理日志，刷新，调试控制台下面就会显示页面加载的耗时<br><img src="https://cos.mbrjun.cn/IMGS/2022/04/15/jv.png"><br>顺便推荐一个更好用的网页测速工具：<a href="https://pagespeed.web.dev/">PageSpeed Insights</a><br><img src="https://cos.mbrjun.cn/IMGS/2022/04/15/li.png"></p><p>测试完成速度可以开始按照下面的教程优化了<br>（TIP：本站有目录功能）</p><h3 id="WebP-压缩-1"><a href="#WebP-压缩-1" class="headerlink" title="WebP 压缩"></a>WebP 压缩</h3><p>WebP 是一个高压缩比的图片格式，支持无损和有损压缩，也支持透明图层，如果你网站的图片是 png 格式提供的，压缩为 WebP 通常会有很大的提升<br>WebP 图片的体积一般只有同等分辨率下 png 图片体积的十分之一。<br>目前压缩有两种常见的方法：</p><h4 id="CDN-自动压缩-1"><a href="#CDN-自动压缩-1" class="headerlink" title="CDN 自动压缩"></a>CDN 自动压缩</h4><p>部分 CDN 可以自动给图片进行 WebP 压缩，如果客户端支持 WebP，则使用 WebP，否则提供原图<br><img src="https://cos.mbrjun.cn/IMGS/2022/04/15/nq.png"></p><h4 id="手动压缩-1"><a href="#手动压缩-1" class="headerlink" title="手动压缩"></a>手动压缩</h4><p>如果你的 CDN 不支持自动压缩，你也可以手动压缩，但是手动压缩会有一个问题，就是不支持 IE 浏览器<br>如果想要手动压缩，只需要前往 <a href="https://squoosh.app/">https://squoosh.app</a></p><h3 id="PHP-版本-1"><a href="#PHP-版本-1" class="headerlink" title="PHP 版本"></a>PHP 版本</h3><p>旧版本（5.x）的 PHP 运行 Typecho 会很慢，强烈建议更新到 7.x 或者 8.x<br>注：Typecho 近期推出了 1.2 版本，距离上次更新有五年之久，1.1 版本不兼容 PHP 7.4+</p><h3 id="数据库缓存-1"><a href="#数据库缓存-1" class="headerlink" title="数据库缓存"></a>数据库缓存</h3><p>网站加载时间（TTFB）长的一大原因是查询数据库耗时太长，采用缓存可以有效加速（用户打开网页直接使用缓存，不再查询数据库）<br>MySQL 8.0 弃用了查询缓存，所以我们需要选择一个其他的高性能缓存器，本站的数据库缓存采用了 Redis</p><h4 id="Redis-安装-1"><a href="#Redis-安装-1" class="headerlink" title="Redis 安装"></a>Redis 安装</h4><ol><li>首先安装一个 Redis 6.2.6</li><li>然后给你的 PHP 安装 Redis 插件</li><li>Typecho 内安装 TpCache</li></ol><h3 id="CDN-1"><a href="#CDN-1" class="headerlink" title="CDN"></a>CDN</h3><p>CDN（内容分发网络）可以有效加速网页静态资源，并隐藏源站 IP，如果你使用 CDN，建议把所有动态页面设置为“不缓存”，所有静态资源都设置为“365 天”</p><h3 id="宝塔缓存-1"><a href="#宝塔缓存-1" class="headerlink" title="宝塔缓存"></a>宝塔缓存</h3><p>如果你用宝塔可以整一个，效果是挺好的，免费版每日 50000 次，破解版无限制，50000 次对普通个人肯定够了，除非遇上 CC<br><img src="https://cos.mbrjun.cn/IMGS/2022/04/15/vg.png"></p><h3 id="OpCache-1"><a href="#OpCache-1" class="headerlink" title="OpCache"></a>OpCache</h3><p>脚本缓存器，直接安装即可</p><h3 id="TCP-Fast-Open-1"><a href="#TCP-Fast-Open-1" class="headerlink" title="TCP Fast Open"></a>TCP Fast Open</h3><p>该功能要求 Linux 3.7 以上，有的发行版使用老内核无法开启，使用 <code>uname -r</code> 检查 Linux 版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">5.4.119-19-0009.1<br></code></pre></td></tr></table></figure><p>返回值大于 3.7 即可，目前已知 CentOS 7 是不支持该功能的<br>开启方法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">#二选一：<br>sysctl -w net.ipv4.tcp_fastoepn=3 #上传下载都允许 TFO<br>sysctl -w net.ipv4.tcp_fastoepn=2 #服务器模式，仅上传允许<br></code></pre></td></tr></table></figure><h3 id="HTTP-3-1"><a href="#HTTP-3-1" class="headerlink" title="HTTP&#x2F;3"></a>HTTP&#x2F;3</h3><p>开启 HTTP&#x2F;3 后可以有效提高握手效率，你需要编译 <code>nginx-quic</code> 来使用该功能<br>目前最新的 HTTP&#x2F;3 版本有：h3（正式版）、h3-29（IETF）、h3-Q050（Google）<br>开启 HTTP&#x2F;3 后，你可以看到服务器发回的响应有一个 <code>alt-svc</code> 头<br>? 在这里测试你的网站是否支持 HTTP&#x2F;3<br><a href="https://http3check.net/">https://http3check.net/</a><br><img src="https://cos.mbrjun.cn/IMGS/2022/04/15/xi.png"></p><h3 id="TCP-BBR-1"><a href="#TCP-BBR-1" class="headerlink" title="TCP BBR"></a>TCP BBR</h3><p>开启 TCP BBR 可有效提高 TCP 连接性能，见此文章：<br><a href="https://blog.mbrjun.cn/archives/431">https://blog.mbrjun.cn/archives/431</a></p><h3 id="MySQL-引擎-1"><a href="#MySQL-引擎-1" class="headerlink" title="MySQL 引擎"></a>MySQL 引擎</h3><p>Typecho 旧版本使用 MySQL 更适合 MyISAM 引擎（默认就是 MyISAM），如果你设置了 Innodb，请改回 MyISAM<br><strong>如果你升级到了 Release 1.2，那么请你使用 InnoDB</strong></p><h3 id="降低压缩率-1"><a href="#降低压缩率-1" class="headerlink" title="降低压缩率"></a>降低压缩率</h3><p>动态文档压缩要消耗很长时间，请减小动态文档的压缩率，或者直接关闭压缩<br>GZip 压缩率设置为 9，TTFB 大约 500ms，设置为 4 大约 300ms，设置为 1 大约 200ms</p><hr><h2 id="title-Typecho-TTFB、加载速度优化教程date-2022-04-15-15-35-00updated-2022-04-28-00-39-56categories-Web（PHP-ASP-HTML）tags-网站-typecho-优化-Mysql-Nginx-建站-博客-加速-FTTB"><a href="#title-Typecho-TTFB、加载速度优化教程date-2022-04-15-15-35-00updated-2022-04-28-00-39-56categories-Web（PHP-ASP-HTML）tags-网站-typecho-优化-Mysql-Nginx-建站-博客-加速-FTTB" class="headerlink" title="title: Typecho TTFB、加载速度优化教程date: 2022-04-15 15:35:00updated: 2022-04-28 00:39:56categories: Web（PHP&#x2F;ASP&#x2F;HTML）tags:- 网站- typecho,优化,Mysql,Nginx,建站,博客,加速,FTTB"></a>title: Typecho TTFB、加载速度优化教程<br>date: 2022-04-15 15:35:00<br>updated: 2022-04-28 00:39:56<br>categories: Web（PHP&#x2F;ASP&#x2F;HTML）<br>tags:<br>- 网站<br>- typecho,优化,Mysql,Nginx,建站,博客,加速,FTTB</h2><p>很多人搭建 Typecho 之后都会觉得自己的网站有些慢，想要优化下打开速度，碰巧最近站长也在做优化，所以写一篇优化教程。</p><hr><p>先贴一下我机器的配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">BASH             ..                    root@MBR-Server<br>               .PLTJ.                  ---------------<br>              &lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;                 OS: Tencent OS Server 3.1 20220217<br>     KKSSV&#x27; 4KKK LJ KKKL.&#x27;VSSKK        Host: CVM 3.0<br>     KKV&#x27; 4KKKKK LJ KKKKAL &#x27;VKK        Kernel: 5.4.119-19-0009.1<br>     V&#x27; &#x27; &#x27;VKKKK LJ KKKKV&#x27; &#x27; &#x27;V        Network: 1 Mbps<br>     .4MA.&#x27; &#x27;VKK LJ KKV&#x27; &#x27;.4Mb.        Packages: 1169 (rpm)<br>   . KKKKKA.&#x27; &#x27;V LJ V&#x27; &#x27;.4KKKKK .      Shell: bash 4.4.20<br> .4D KKKKKKKA.&#x27;&#x27; LJ &#x27;&#x27;.4KKKKKKK FA.    Terminal: /dev/pts/1<br>&lt;QDD ++++++++++++  ++++++++++++ GFD&gt;   CPU: AMD EPYC 7K62 (2) @ 2.595GHz<br> &#x27;VD KKKKKKKK&#x27;.. LJ ..&#x27;KKKKKKKK FV     GPU: 00:02.0 Cirrus Logic GD 5446<br>   &#x27; VKKKKK&#x27;. .4 LJ K. .&#x27;KKKKKV &#x27;      Memory: 1262MiB / 1721MiB<br>      &#x27;VK&#x27;. .4KK LJ KKA. .&#x27;KV&#x27;         SSD: 50GB<br>     A. . .4KKKK LJ KKKKA. . .4<br>     KKA. &#x27;KKKKK LJ KKKKK&#x27; .4KK<br>     KKSSA. VKKK LJ KKKV .4SSKK<br>              &lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;<br>               &#x27;MKKM&#x27;<br>                 &#x27;&#x27;<br></code></pre></td></tr></table></figure><p>低配置的机子做好了优化速度也能很快，本站国内的平均打开速度为 1.0s，如果不做任何优化，那么本站首页的速度可能有 4s 左右</p><h2 id="优化教程-2"><a href="#优化教程-2" class="headerlink" title="优化教程"></a>优化教程</h2><h3 id="测试速度-2"><a href="#测试速度-2" class="headerlink" title="测试速度"></a>测试速度</h3><p>首先先测试一下当前的网页速度，按 F12 打开调试控制台，选择 网络，勾选持久日志和禁用缓存，清除 Service Worker，清理日志，刷新，调试控制台下面就会显示页面加载的耗时<br><img src="https://cos.mbrjun.cn/IMGS/2022/04/15/jv.png"><br>顺便推荐一个更好用的网页测速工具：<a href="https://pagespeed.web.dev/">PageSpeed Insights</a><br><img src="https://cos.mbrjun.cn/IMGS/2022/04/15/li.png"></p><p>测试完成速度可以开始按照下面的教程优化了<br>（TIP：本站有目录功能）</p><h3 id="WebP-压缩-2"><a href="#WebP-压缩-2" class="headerlink" title="WebP 压缩"></a>WebP 压缩</h3><p>WebP 是一个高压缩比的图片格式，支持无损和有损压缩，也支持透明图层，如果你网站的图片是 png 格式提供的，压缩为 WebP 通常会有很大的提升<br>WebP 图片的体积一般只有同等分辨率下 png 图片体积的十分之一。<br>目前压缩有两种常见的方法：</p><h4 id="CDN-自动压缩-2"><a href="#CDN-自动压缩-2" class="headerlink" title="CDN 自动压缩"></a>CDN 自动压缩</h4><p>部分 CDN 可以自动给图片进行 WebP 压缩，如果客户端支持 WebP，则使用 WebP，否则提供原图<br><img src="https://cos.mbrjun.cn/IMGS/2022/04/15/nq.png"></p><h4 id="手动压缩-2"><a href="#手动压缩-2" class="headerlink" title="手动压缩"></a>手动压缩</h4><p>如果你的 CDN 不支持自动压缩，你也可以手动压缩，但是手动压缩会有一个问题，就是不支持 IE 浏览器<br>如果想要手动压缩，只需要前往 <a href="https://squoosh.app/">https://squoosh.app</a></p><h3 id="PHP-版本-2"><a href="#PHP-版本-2" class="headerlink" title="PHP 版本"></a>PHP 版本</h3><p>旧版本（5.x）的 PHP 运行 Typecho 会很慢，强烈建议更新到 7.x 或者 8.x<br>注：Typecho 近期推出了 1.2 版本，距离上次更新有五年之久，1.1 版本不兼容 PHP 7.4+</p><h3 id="数据库缓存-2"><a href="#数据库缓存-2" class="headerlink" title="数据库缓存"></a>数据库缓存</h3><p>网站加载时间（TTFB）长的一大原因是查询数据库耗时太长，采用缓存可以有效加速（用户打开网页直接使用缓存，不再查询数据库）<br>MySQL 8.0 弃用了查询缓存，所以我们需要选择一个其他的高性能缓存器，本站的数据库缓存采用了 Redis</p><h4 id="Redis-安装-2"><a href="#Redis-安装-2" class="headerlink" title="Redis 安装"></a>Redis 安装</h4><ol><li>首先安装一个 Redis 6.2.6</li><li>然后给你的 PHP 安装 Redis 插件</li><li>Typecho 内安装 TpCache</li></ol><h3 id="CDN-2"><a href="#CDN-2" class="headerlink" title="CDN"></a>CDN</h3><p>CDN（内容分发网络）可以有效加速网页静态资源，并隐藏源站 IP，如果你使用 CDN，建议把所有动态页面设置为“不缓存”，所有静态资源都设置为“365 天”</p><h3 id="宝塔缓存-2"><a href="#宝塔缓存-2" class="headerlink" title="宝塔缓存"></a>宝塔缓存</h3><p>如果你用宝塔可以整一个，效果是挺好的，免费版每日 50000 次，破解版无限制，50000 次对普通个人肯定够了，除非遇上 CC<br><img src="https://cos.mbrjun.cn/IMGS/2022/04/15/vg.png"></p><h3 id="OpCache-2"><a href="#OpCache-2" class="headerlink" title="OpCache"></a>OpCache</h3><p>脚本缓存器，直接安装即可</p><h3 id="TCP-Fast-Open-2"><a href="#TCP-Fast-Open-2" class="headerlink" title="TCP Fast Open"></a>TCP Fast Open</h3><p>该功能要求 Linux 3.7 以上，有的发行版使用老内核无法开启，使用 <code>uname -r</code> 检查 Linux 版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">5.4.119-19-0009.1<br></code></pre></td></tr></table></figure><p>返回值大于 3.7 即可，目前已知 CentOS 7 是不支持该功能的<br>开启方法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">#二选一：<br>sysctl -w net.ipv4.tcp_fastoepn=3 #上传下载都允许 TFO<br>sysctl -w net.ipv4.tcp_fastoepn=2 #服务器模式，仅上传允许<br></code></pre></td></tr></table></figure><h3 id="HTTP-3-2"><a href="#HTTP-3-2" class="headerlink" title="HTTP&#x2F;3"></a>HTTP&#x2F;3</h3><p>开启 HTTP&#x2F;3 后可以有效提高握手效率，你需要编译 <code>nginx-quic</code> 来使用该功能<br>目前最新的 HTTP&#x2F;3 版本有：h3（正式版）、h3-29（IETF）、h3-Q050（Google）<br>开启 HTTP&#x2F;3 后，你可以看到服务器发回的响应有一个 <code>alt-svc</code> 头<br>? 在这里测试你的网站是否支持 HTTP&#x2F;3<br><a href="https://http3check.net/">https://http3check.net/</a><br><img src="https://cos.mbrjun.cn/IMGS/2022/04/15/xi.png"></p><h3 id="TCP-BBR-2"><a href="#TCP-BBR-2" class="headerlink" title="TCP BBR"></a>TCP BBR</h3><p>开启 TCP BBR 可有效提高 TCP 连接性能，见此文章：<br><a href="https://blog.mbrjun.cn/archives/431">https://blog.mbrjun.cn/archives/431</a></p><h3 id="MySQL-引擎-2"><a href="#MySQL-引擎-2" class="headerlink" title="MySQL 引擎"></a>MySQL 引擎</h3><p>Typecho 旧版本使用 MySQL 更适合 MyISAM 引擎（默认就是 MyISAM），如果你设置了 Innodb，请改回 MyISAM<br><strong>如果你升级到了 Release 1.2，那么请你使用 InnoDB</strong></p><h3 id="降低压缩率-2"><a href="#降低压缩率-2" class="headerlink" title="降低压缩率"></a>降低压缩率</h3><p>动态文档压缩要消耗很长时间，请减小动态文档的压缩率，或者直接关闭压缩<br>GZip 压缩率设置为 9，TTFB 大约 500ms，设置为 4 大约 300ms，设置为 1 大约 200ms</p><hr><h2 id="title-Typecho-TTFB、加载速度优化教程date-2022-04-15-15-35-00updated-2022-04-28-00-39-56categories-UDP-QUICtags-网站-typecho-优化-Mysql-Nginx-建站-博客-加速-FTTB"><a href="#title-Typecho-TTFB、加载速度优化教程date-2022-04-15-15-35-00updated-2022-04-28-00-39-56categories-UDP-QUICtags-网站-typecho-优化-Mysql-Nginx-建站-博客-加速-FTTB" class="headerlink" title="title: Typecho TTFB、加载速度优化教程date: 2022-04-15 15:35:00updated: 2022-04-28 00:39:56categories: UDP&#x2F;QUICtags:- 网站- typecho,优化,Mysql,Nginx,建站,博客,加速,FTTB"></a>title: Typecho TTFB、加载速度优化教程<br>date: 2022-04-15 15:35:00<br>updated: 2022-04-28 00:39:56<br>categories: UDP&#x2F;QUIC<br>tags:<br>- 网站<br>- typecho,优化,Mysql,Nginx,建站,博客,加速,FTTB</h2><p>很多人搭建 Typecho 之后都会觉得自己的网站有些慢，想要优化下打开速度，碰巧最近站长也在做优化，所以写一篇优化教程。</p><hr><p>先贴一下我机器的配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">BASH             ..                    root@MBR-Server<br>               .PLTJ.                  ---------------<br>              &lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;                 OS: Tencent OS Server 3.1 20220217<br>     KKSSV&#x27; 4KKK LJ KKKL.&#x27;VSSKK        Host: CVM 3.0<br>     KKV&#x27; 4KKKKK LJ KKKKAL &#x27;VKK        Kernel: 5.4.119-19-0009.1<br>     V&#x27; &#x27; &#x27;VKKKK LJ KKKKV&#x27; &#x27; &#x27;V        Network: 1 Mbps<br>     .4MA.&#x27; &#x27;VKK LJ KKV&#x27; &#x27;.4Mb.        Packages: 1169 (rpm)<br>   . KKKKKA.&#x27; &#x27;V LJ V&#x27; &#x27;.4KKKKK .      Shell: bash 4.4.20<br> .4D KKKKKKKA.&#x27;&#x27; LJ &#x27;&#x27;.4KKKKKKK FA.    Terminal: /dev/pts/1<br>&lt;QDD ++++++++++++  ++++++++++++ GFD&gt;   CPU: AMD EPYC 7K62 (2) @ 2.595GHz<br> &#x27;VD KKKKKKKK&#x27;.. LJ ..&#x27;KKKKKKKK FV     GPU: 00:02.0 Cirrus Logic GD 5446<br>   &#x27; VKKKKK&#x27;. .4 LJ K. .&#x27;KKKKKV &#x27;      Memory: 1262MiB / 1721MiB<br>      &#x27;VK&#x27;. .4KK LJ KKA. .&#x27;KV&#x27;         SSD: 50GB<br>     A. . .4KKKK LJ KKKKA. . .4<br>     KKA. &#x27;KKKKK LJ KKKKK&#x27; .4KK<br>     KKSSA. VKKK LJ KKKV .4SSKK<br>              &lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;<br>               &#x27;MKKM&#x27;<br>                 &#x27;&#x27;<br></code></pre></td></tr></table></figure><p>低配置的机子做好了优化速度也能很快，本站国内的平均打开速度为 1.0s，如果不做任何优化，那么本站首页的速度可能有 4s 左右</p><h2 id="优化教程-3"><a href="#优化教程-3" class="headerlink" title="优化教程"></a>优化教程</h2><h3 id="测试速度-3"><a href="#测试速度-3" class="headerlink" title="测试速度"></a>测试速度</h3><p>首先先测试一下当前的网页速度，按 F12 打开调试控制台，选择 网络，勾选持久日志和禁用缓存，清除 Service Worker，清理日志，刷新，调试控制台下面就会显示页面加载的耗时<br><img src="https://cos.mbrjun.cn/IMGS/2022/04/15/jv.png"><br>顺便推荐一个更好用的网页测速工具：<a href="https://pagespeed.web.dev/">PageSpeed Insights</a><br><img src="https://cos.mbrjun.cn/IMGS/2022/04/15/li.png"></p><p>测试完成速度可以开始按照下面的教程优化了<br>（TIP：本站有目录功能）</p><h3 id="WebP-压缩-3"><a href="#WebP-压缩-3" class="headerlink" title="WebP 压缩"></a>WebP 压缩</h3><p>WebP 是一个高压缩比的图片格式，支持无损和有损压缩，也支持透明图层，如果你网站的图片是 png 格式提供的，压缩为 WebP 通常会有很大的提升<br>WebP 图片的体积一般只有同等分辨率下 png 图片体积的十分之一。<br>目前压缩有两种常见的方法：</p><h4 id="CDN-自动压缩-3"><a href="#CDN-自动压缩-3" class="headerlink" title="CDN 自动压缩"></a>CDN 自动压缩</h4><p>部分 CDN 可以自动给图片进行 WebP 压缩，如果客户端支持 WebP，则使用 WebP，否则提供原图<br><img src="https://cos.mbrjun.cn/IMGS/2022/04/15/nq.png"></p><h4 id="手动压缩-3"><a href="#手动压缩-3" class="headerlink" title="手动压缩"></a>手动压缩</h4><p>如果你的 CDN 不支持自动压缩，你也可以手动压缩，但是手动压缩会有一个问题，就是不支持 IE 浏览器<br>如果想要手动压缩，只需要前往 <a href="https://squoosh.app/">https://squoosh.app</a></p><h3 id="PHP-版本-3"><a href="#PHP-版本-3" class="headerlink" title="PHP 版本"></a>PHP 版本</h3><p>旧版本（5.x）的 PHP 运行 Typecho 会很慢，强烈建议更新到 7.x 或者 8.x<br>注：Typecho 近期推出了 1.2 版本，距离上次更新有五年之久，1.1 版本不兼容 PHP 7.4+</p><h3 id="数据库缓存-3"><a href="#数据库缓存-3" class="headerlink" title="数据库缓存"></a>数据库缓存</h3><p>网站加载时间（TTFB）长的一大原因是查询数据库耗时太长，采用缓存可以有效加速（用户打开网页直接使用缓存，不再查询数据库）<br>MySQL 8.0 弃用了查询缓存，所以我们需要选择一个其他的高性能缓存器，本站的数据库缓存采用了 Redis</p><h4 id="Redis-安装-3"><a href="#Redis-安装-3" class="headerlink" title="Redis 安装"></a>Redis 安装</h4><ol><li>首先安装一个 Redis 6.2.6</li><li>然后给你的 PHP 安装 Redis 插件</li><li>Typecho 内安装 TpCache</li></ol><h3 id="CDN-3"><a href="#CDN-3" class="headerlink" title="CDN"></a>CDN</h3><p>CDN（内容分发网络）可以有效加速网页静态资源，并隐藏源站 IP，如果你使用 CDN，建议把所有动态页面设置为“不缓存”，所有静态资源都设置为“365 天”</p><h3 id="宝塔缓存-3"><a href="#宝塔缓存-3" class="headerlink" title="宝塔缓存"></a>宝塔缓存</h3><p>如果你用宝塔可以整一个，效果是挺好的，免费版每日 50000 次，破解版无限制，50000 次对普通个人肯定够了，除非遇上 CC<br><img src="https://cos.mbrjun.cn/IMGS/2022/04/15/vg.png"></p><h3 id="OpCache-3"><a href="#OpCache-3" class="headerlink" title="OpCache"></a>OpCache</h3><p>脚本缓存器，直接安装即可</p><h3 id="TCP-Fast-Open-3"><a href="#TCP-Fast-Open-3" class="headerlink" title="TCP Fast Open"></a>TCP Fast Open</h3><p>该功能要求 Linux 3.7 以上，有的发行版使用老内核无法开启，使用 <code>uname -r</code> 检查 Linux 版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">5.4.119-19-0009.1<br></code></pre></td></tr></table></figure><p>返回值大于 3.7 即可，目前已知 CentOS 7 是不支持该功能的<br>开启方法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">#二选一：<br>sysctl -w net.ipv4.tcp_fastoepn=3 #上传下载都允许 TFO<br>sysctl -w net.ipv4.tcp_fastoepn=2 #服务器模式，仅上传允许<br></code></pre></td></tr></table></figure><h3 id="HTTP-3-3"><a href="#HTTP-3-3" class="headerlink" title="HTTP&#x2F;3"></a>HTTP&#x2F;3</h3><p>开启 HTTP&#x2F;3 后可以有效提高握手效率，你需要编译 <code>nginx-quic</code> 来使用该功能<br>目前最新的 HTTP&#x2F;3 版本有：h3（正式版）、h3-29（IETF）、h3-Q050（Google）<br>开启 HTTP&#x2F;3 后，你可以看到服务器发回的响应有一个 <code>alt-svc</code> 头<br>? 在这里测试你的网站是否支持 HTTP&#x2F;3<br><a href="https://http3check.net/">https://http3check.net/</a><br><img src="https://cos.mbrjun.cn/IMGS/2022/04/15/xi.png"></p><h3 id="TCP-BBR-3"><a href="#TCP-BBR-3" class="headerlink" title="TCP BBR"></a>TCP BBR</h3><p>开启 TCP BBR 可有效提高 TCP 连接性能，见此文章：<br><a href="https://blog.mbrjun.cn/archives/431">https://blog.mbrjun.cn/archives/431</a></p><h3 id="MySQL-引擎-3"><a href="#MySQL-引擎-3" class="headerlink" title="MySQL 引擎"></a>MySQL 引擎</h3><p>Typecho 旧版本使用 MySQL 更适合 MyISAM 引擎（默认就是 MyISAM），如果你设置了 Innodb，请改回 MyISAM<br><strong>如果你升级到了 Release 1.2，那么请你使用 InnoDB</strong></p><h3 id="降低压缩率-3"><a href="#降低压缩率-3" class="headerlink" title="降低压缩率"></a>降低压缩率</h3><p>动态文档压缩要消耗很长时间，请减小动态文档的压缩率，或者直接关闭压缩<br>GZip 压缩率设置为 9，TTFB 大约 500ms，设置为 4 大约 300ms，设置为 1 大约 200ms</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> typecho </tag>
            
            <tag> 优化 </tag>
            
            <tag> Mysql </tag>
            
            <tag> Nginx </tag>
            
            <tag> 建站 </tag>
            
            <tag> 博客 </tag>
            
            <tag> 加速 </tag>
            
            <tag> FTTB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 开启 TCP BBR</title>
      <link href="/archives/431/"/>
      <url>/archives/431/</url>
      
        <content type="html"><![CDATA[<p>TCP BBR（Bottleneck Bandwidth and Round-trip propagation time）是由Google设计，于2016年发布的拥塞算法。</p><p><img src="https://cos.mbrjun.cn/IMGS/2022/04/11/lb.svg"></p><span id="more"></span><p>该算法认为随着网络接口控制器逐渐进入千兆速度时，与缓冲膨胀相关的延迟相比丢包更应该被认为是识别拥塞的主要决定因素，所以基于延迟模型的拥塞控制算法（如BBR）会有更高的吞吐量和更低的延迟。<br>在大多数 Linux 发行版中，cubic 通常是默认设置，但我们发现 htcp 通常效果更好。如果 BBR 在您的系统上可用，您可能还想尝试它。</p><hr><h2 id="检查内核兼容"><a href="#检查内核兼容" class="headerlink" title="检查内核兼容"></a>检查内核兼容</h2><p>首先检测内核是否支持 TCP BBR</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">sysctl net.ipv4.tcp_available_congestion_control | grep bbr<br></code></pre></td></tr></table></figure><p>如果支持，会有类似这样的返回</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">net.ipv4.tcp_available_congestion_control = reno cubic bbr<br></code></pre></td></tr></table></figure><p>如果没有任何返回，说明内核不支持，目前已知不支持 TCP BBR 的发行版有 PVE</p><h2 id="开启-BBR"><a href="#开启-BBR" class="headerlink" title="开启 BBR"></a>开启 BBR</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">sysctl -w net.ipv4.tcp_congestion_control=bbr<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> TCP </tag>
            
            <tag> Google </tag>
            
            <tag> BBR </tag>
            
            <tag> 拥塞控制 </tag>
            
            <tag> TCP BBR </tag>
            
            <tag> cubic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决 OpenWrt ZeroTier 报错 Error relocating</title>
      <link href="/archives/430/"/>
      <url>/archives/430/</url>
      
        <content type="html"><![CDATA[<p>完整的报错如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs plaintext"># service zerotier restart<br>Generate secret - please wait...<br>Error relocating /usr/bin/zerotier-idtool: _ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEEC1Ev: symbol not found<br>Error relocating /usr/bin/zerotier-idtool: _ZSt28__throw_bad_array_new_lengthv: symbol not found<br>Error relocating /usr/bin/zerotier-idtool: _ZNSt18basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev: symbol not found<br></code></pre></td></tr></table></figure><span id="more"></span><hr><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>这个报错通常是手动更新 ZeroTier 时出现的，如果你是手动安装的，那你应该在安装时会看到这样的信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">Multiple packages (libgcc1 and libgcc1) providing same name marked HOLD or PREFER. Using latest.<br>Multiple packages (libgcc1 and libgcc1) providing same name marked HOLD or PREFER. Using latest.<br>Multiple packages (libpthread and libpthread) providing same name marked HOLD or PREFER. Using latest.<br>Multiple packages (libstdcpp6 and libstdcpp6) providing same name marked HOLD or PREFER. Using latest.<br></code></pre></td></tr></table></figure><p>引发这个问题的原因就是依赖库没有更新，只需要简单的更新依赖库即可！</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="通过-LuCI-安装"><a href="#通过-LuCI-安装" class="headerlink" title="通过 LuCI 安装"></a>通过 LuCI 安装</h3><p><img src="https://cos.mbrjun.cn/IMGS/2022/04/10/lg.png"></p><p>如图，分别安装三个软件包：<code>libgcc1</code>、<code>libpthread6</code>、<code>libstdcpp6</code><br>安装完成后重新安装&#x2F;更新 ZeroTier</p><h3 id="通过-opkg-安装"><a href="#通过-opkg-安装" class="headerlink" title="通过 opkg 安装"></a>通过 opkg 安装</h3><p>使用任意方法（如 SSH）连接到设备，并进入 ash 命令解释器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">&gt; ssh root@hydrogen.mbr<br>root@hydrogen.mbr&#x27;s password:<br><br>BusyBox v1.33.2 (2021-12-31 08:05:40 UTC) built-in shell (ash)<br></code></pre></td></tr></table></figure><p>输入下面的命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">opkg update<br>opkg install libgcc1<br>opkg install libpthread6<br>opkg install libstdcpp6<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenWrt </tag>
            
            <tag> ZeroTier </tag>
            
            <tag> 异地组网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TLS 1.3 和 0-RTT</title>
      <link href="/archives/429/"/>
      <url>/archives/429/</url>
      
        <content type="html"><![CDATA[<p>写一篇关于 TLS 1.3 的文章</p><span id="more"></span><hr><p>首先需要明确的是，同等情况下，TLS1.3 比 1.2 少一个 RTT 时间。</p><p>客户端完成 TCP 握手需要一个 RTT 时间， TLS1.2 完成TLS 密钥协商需要两个 RTT 时间， TLS1.3 只需要一个 RTT 时间。<br>因此对于 https， 收到第一个 http 响应包，TLS1.2 需要 4 个 RTT 时间， TLS1.3 需要 3 个 RTT 时间。</p><p>考虑 session 重用，根据数据表明，大部分的 TLS 的请求都在重用， TLS1.2 session 重用需要一个 RTT 时间，  TLS1.3 则因为在第一个包中携带数据，只需要0个 RTT，有点类似 TLS 层的TCP Fast Open。<br>因此对于 https， 收到第一个 http 响应包，比非重用减少一个 RTT， TLS1.2 需要3个 RTT 时间， TLS1.3 需要2个 RTT 时间。</p><p>另外如果开启 TCP 的 TFO，收到第一个 https 响应包的时间，则再减少一个 RTT，在 session 重用的时候就是 TLS1.2 需要2个 RTT，TLS1.3 只需要1个 RTT 时间。</p><h2 id="How"><a href="#How" class="headerlink" title="How"></a>How</h2><p>为什么 TLS 1.3 能少一个 RTT 时间？</p><p>考虑 TLS 1.2, 下面握手流程来自 RFC5246 ，在第一个 RTT 需要协商算法版本等信息， 在第二个 RTT 才能完成对称密钥的协商。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">Client                                        Server<br>ClientHello             --------&gt;<br>                                         ServerHello<br>                                        Certificate*<br>                                  ServerKeyExchange*<br>                                 CertificateRequest*<br>                        &lt;--------    ServerHelloDone<br>Certificate*<br>ClientKeyExchange<br>CertificateVerify*<br>[ChangeCipherSpec]<br>Finished                --------&gt;<br>                                  [ChangeCipherSpec]<br>                        &lt;--------           Finished<br>Application Data        &lt;-------&gt;   Application Data<br><br>    Figure 1.  Message flow for a full handshake<br></code></pre></td></tr></table></figure><p>如果要减少 RTT，就是解决如何在第一个 RTT 内就能完成密钥的协商？<br>因为 TLS 1.3 只支持 PFS 的算法，已经取消了 RSA 作为密钥协商算法， 因此以下讨论仅用 ECDHE 来说明。</p><p>使用 ECDHE 需要解决以下问题:</p><ul><li>双方把自己的公钥发送给对方</li><li>确认发送的公钥信息没有被中间人篡改</li></ul><p>很自然的，我们会考虑能不能把 ECDHE 的公钥在 client hello 中发送?<br>服务端收到 client hello 后，随机生成本地的 ECDHE 私钥后，就能直接能计算出 pre-master secret，进而计算出所有密钥。<br>同时服务端发送 finish 消息，通过 hmac 验证，client hello 中的 ECDHE 公钥没有被篡改。</p><p>在第二个 RTT 开始，收到 server hello 后，client 也能通过服务端 ECDHE 的公钥计算出 pre-master secret，<br>发送自己的 Finish 消息，并和应用数据一起发送。 服务端验证 Finish 成功后才接收数据。</p><p>上面分析，完全是拍脑袋的结果，事实上 TLS 1.3 是这样吗？</p><h2 id="TLS-1-3"><a href="#TLS-1-3" class="headerlink" title="TLS 1.3"></a>TLS 1.3</h2><p>对比TLS 1.2主要的修改如下:</p><ul><li>使用更严格的算法，只使用 PFS 的算法，如禁用了 RSA 密钥协商， 只使用 AEAD 算法</li><li>使用 HKDF 密钥导出算法替代 PRF 算法</li><li>server hello 之后的握手包也开始加密， 并去掉了changeCipherSpec 消息</li><li>更改了 session 重用机制， 使用 PSK 的机制，同时 session ticket 中添加了过期时间。 过去 TLS 1.2 中的 ticket 不包含过期时间，只能通过 ticket key 的更新让之前所有发送的 ticket 都失效</li><li>版本协商作为 client hello 的扩展，提供版本列表</li><li>支持 0-RTT 发送</li></ul><hr><p>后文所有的代码来源于下面两个库，<br>server 端源码来自 Cloudflare 的 <a href="https://github.com/cloudflare/tls-tris">tls-tris</a>，Client 端参考了 <a href="https://github.com/bifurcation/mint">bifurcation&#x2F;mint</a></p><h1 id="clientHello"><a href="#clientHello" class="headerlink" title="clientHello"></a>clientHello</h1><p>如前文所述， TLS 1.3 为了减少一个 RTT 时间，必须在 client hello 中发送本地的 ECDHE 的公钥，因为可能支持多个曲线，所以需要发送每个曲线的 ECDHE 公钥。<br>每个公钥和对应的曲线， 称为 keyShare。 keyshare 列表作为 clientHello 的扩展被发送</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">// 每个 keyShare 的条目，包含曲线 ID 和公钥<br>struct &#123;<br>       NamedGroup group;<br>       opaque key_exchange&lt;1..2^16-1&gt;;<br>   &#125; KeyShareEntry;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">func (h *ClientHandshake) CreateClientHello(opts ConnectionOptions, caps Capabilities) (*HandshakeMessage, error) &#123;<br>// key_shares<br>h.OfferedDH = map[NamedGroup][]byte&#123;&#125;<br>ks := KeyShareExtension&#123;<br>HandshakeType: HandshakeTypeClientHello,<br>Shares:        make([]KeyShareEntry, len(caps.Groups)),<br>&#125;<br>for i, group := range caps.Groups &#123;<br>pub, priv, err := newKeyShare(group)//为每个支持的曲线，生成公私钥，作为keyshare<br>if err != nil &#123;<br>return nil, err<br>&#125;<br>ks.Shares[i].Group = group<br>ks.Shares[i].KeyExchange = pub<br>h.OfferedDH[group] = priv<br>&#125;<br>...<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="serverHello"><a href="#serverHello" class="headerlink" title="serverHello"></a>serverHello</h2><h4 id="and-HelloRetryRequest-EncryptedExtensions-CertificateRequest-Certifacate-CertificateVerify-Finished"><a href="#and-HelloRetryRequest-EncryptedExtensions-CertificateRequest-Certifacate-CertificateVerify-Finished" class="headerlink" title="and HelloRetryRequest, EncryptedExtensions, CertificateRequest, Certifacate, CertificateVerify, Finished"></a>and HelloRetryRequest, EncryptedExtensions, CertificateRequest, Certifacate, CertificateVerify, Finished</h4><ul><li>服务端收到 client 后，协商曲线，如果有支持的曲线则使用该 keyshare， 否则发送 HelloRetryRequest 消息通知client。</li><li>服务端生成 ECDHE 公私钥后， 通过客户端的 keyShare 协商出密钥 ECDHESecret(TLS 1.2 中的 premaster secret)。然后通过 serverHello 发送服务端的 keyShare。<br>需要注意的是 keyShare 没有使用私钥签名， 整个过程的不可抵赖和防篡改是通过 certificateVerify 证明持有私钥，以及 finished 消息使用 hmac 验证历史消息来确定的。</li><li>serverHello 之后的握手消息需要加密，导出加密密钥。<br>通过 early secret 和 ECDHE secre t导出server_handshake_traffic_secret。<br>再从 server_handshake_traffic_secret 中导出 key 和 iv，使用该 key 和 iv 对 server hello 之后的握手消息加密。<br>同样的计算 client_handshake_traffic_secret，使用对应的 key 和 iv 进行解密后续的握手消息</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">Derive-Secret(Secret, Label, Messages) =<br>         HKDF-Expand-Label(Secret, Label,<br>                           Transcript-Hash(Messages), Hash.length)<br>early secret=HKDF-Extract(0,0)<br>Handshake Secret = HKDF-Extract(ecdhe secret, early secret)<br>server_handshake_traffic_secret = Derive-Secret(Handshake Secret, &quot;server handshake traffic secret&quot;, ClientHello...ServerHello) <br>client_handshake_traffic_secret = Derive-Secret(Handshake Secret, &quot;server handshake traffic secret&quot;, ClientHello...ServerHello) <br>server_handshake_key := hkdfExpandLabel(hash, server_handshake_traffic_secret, nil, &quot;key&quot;, hs.suite.keyLen)<br>server_handshake_iv := hkdfExpandLabel(hash, server_handshake_traffic_secret, nil, &quot;iv&quot;, 12)<br>client_handshake_key := hkdfExpandLabel(hash, server_handshake_traffic_secret, nil, &quot;key&quot;, hs.suite.keyLen)<br>client_handshake_iv := hkdfExpandLabel(hash, server_handshake_traffic_secret, nil, &quot;iv&quot;, 12)<br></code></pre></td></tr></table></figure><ul><li>在 EncryptedExtensions 消息中发送扩展信息，比如 alpn 协议，服务端是否支持 earlyData</li><li>如果服务端需要客户端证书，则发送 CertificateRequest , 在其扩展中指定支持的签名算法和CA</li><li>发送 certificate 和 certificateVerify 消息<br>在 certificate 可以指定 OCSP stapling和 sct。<br>certificateVerify 跟以前 client 发送的类似， 使用私钥对历史握手消息的摘要进行签名, 并发送签名的算法。</li><li>发送 finished 消息, 从 server_handshake_traffic_secret 中导出 serverFinishedKey， 使用 hmac 计算 finished 后发送。 TLS 1.2 是使用 PRF(master_secret, digest(handshake)) 导出的。</li><li>导出最终的对称密钥。 先从 Handshake Secret 中导出 master secret，再从 master secret 导出两个方向的对称密钥 key 和  iv</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">masterSecret = hkdfExtract(hash, nil, Handshake Secret)<br>client_application_traffic_secret_0 = Derive-Secret(masterSecret, &quot;client application traffic secret&quot;, ClientHello...server Finished)<br>server_application_traffic_secret_0 = Derive-Secret(masterSecret, &quot;server application traffic secret&quot;, ClientHello...server Finished)<br></code></pre></td></tr></table></figure><h2 id="Certifacate"><a href="#Certifacate" class="headerlink" title="Certifacate"></a>Certifacate</h2><h4 id="and-CertificateVerify-Finished"><a href="#and-CertificateVerify-Finished" class="headerlink" title="and CertificateVerify, Finished"></a>and CertificateVerify, Finished</h4><p>客户端收到 serverHello 后，通过 server 的 keyshare 计算出 ECDHE secret。<br>然后跟 server 端一样，通过一系列的 khdf 密钥导出， 两个方向的后续握手密钥，以及 master secret 和两个方向的 application traffic secret。<br>因为 client 和 server 端 early secret 和协商出来的 ecdhe secret 相同， 因此所有后续导出的对应的密钥都是相同的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">early secret=HKDF-Extract(0,0)<br>Handshake Secret = HKDF-Extract(ecdhe secret, early secret)<br>server_handshake_traffic_secret = Derive-Secret(Handshake Secret, &quot;server handshake traffic secret&quot;, ClientHello...ServerHello)<br>client_handshake_traffic_secret = Derive-Secret(Handshake Secret, &quot;client handshake traffic secret&quot;, ClientHello...ServerHello)<br>masterSecret = hkdfExtract(hash, nil, Handshake Secret)<br>client_application_traffic_secret_0 = Derive-Secret(masterSecret, &quot;client application traffic secret&quot;, ClientHello...server Finished)<br>server_application_traffic_secret_0 = Derive-Secret(masterSecret, &quot;server application traffic secret&quot;, ClientHello...server Finished)<br>resumption_master_secret = Derive-Secret(masterSecret, &quot;resumption master secret&quot;,  hash(all handshake message))<br></code></pre></td></tr></table></figure><p>发送 finished 后， 就完成了整个握手信息， 通过 master secret 和整个握手的摘要，计算 resumption secret</p><h1 id="newSessionTicket"><a href="#newSessionTicket" class="headerlink" title="newSessionTicket"></a>newSessionTicket</h1><ul><li>收到客户端的 Certifacate 和 CertificateVerify，同样进行证书链的认证以及验证签名</li><li>服务端收到客户端的 finished 消息后，验证完后，同样计算 resumption secret</li><li>发送 new session ticket，包含整个 session 的信息。  newSessionTicket 使用server_application_traffic_secret 加密<br>在加密的ticket中，相比 TLS1.2，包含了当前的创建时间，因此可以方便的配置和验证 ticket 的过期时间。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">func (hs *serverHandshakeState) sendSessionTicket13() error &#123;<br>c := hs.c<br>if c.config.SessionTicketsDisabled &#123;<br>return nil<br>&#125;<br>foundDHE := false<br>for _, mode := range hs.clientHello.pskKeyExchangeModes &#123;<br>if mode == pskDHEKeyExchange &#123;<br>foundDHE = true<br>break<br>&#125;<br>&#125;<br>if !foundDHE &#123;<br>return nil<br>&#125;<br>//只支持dhe的方式计算psk<br>hash := hashForSuite(hs.suite)<br>handshakeCtx := hs.finishedHash13.Sum(nil)<br>resumptionSecret := hkdfExpandLabel(hash, hs.masterSecret, handshakeCtx, &quot;resumption master secret&quot;, hash.Size())<br>ageAddBuf := make([]byte, 4)<br>sessionState := &amp;sessionState13&#123;//需要加密的session信息，包含resumptionSecret<br>vers:             c.vers,<br>suite:            hs.suite.id,<br>createdAt:        uint64(time.Now().Unix()),<br>resumptionSecret: resumptionSecret,<br>alpnProtocol:     c.clientProtocol,<br>SNI:              c.serverName,<br>maxEarlyDataLen:  c.config.Max0RTTDataSize,<br>&#125;<br>for i := 0; i &lt; numSessionTickets; i++ &#123;<br>if _, err := io.ReadFull(c.config.rand(), ageAddBuf); err != nil &#123;//随机生成ageAddBuf<br>c.sendAlert(alertInternalError)<br>return err<br>&#125;<br>sessionState.ageAdd = uint32(ageAddBuf[0])&lt;&lt;24 | uint32(ageAddBuf[1])&lt;&lt;16 |//ageAdd使用随机值<br>uint32(ageAddBuf[2])&lt;&lt;8 | uint32(ageAddBuf[3])<br>ticket := sessionState.marshal()<br>var err error<br>if c.config.SessionTicketSealer != nil &#123;<br>cs := c.ConnectionState()<br>ticket, err = c.config.SessionTicketSealer.Seal(&amp;cs, ticket)<br>&#125; else &#123;<br>ticket, err = c.encryptTicket(ticket)//使用tiket key加密<br>&#125;<br>if err != nil &#123;<br>c.sendAlert(alertInternalError)<br>return err<br>&#125;<br>if ticket == nil &#123;<br>continue<br>&#125;<br>ticketMsg := &amp;newSessionTicketMsg13&#123;<br>lifetime:           24 * 3600, // TODO(filippo)//24小时<br>maxEarlyDataLength: c.config.Max0RTTDataSize,<br>withEarlyDataInfo:  c.config.Max0RTTDataSize &gt; 0,<br>ageAdd:             sessionState.ageAdd,//随机值<br>ticket:             ticket,//session信息<br>&#125;<br>if _, err := c.writeRecord(recordTypeHandshake, ticketMsg.marshal()); err != nil &#123;<br>return err<br>&#125;<br>&#125;<br>return nil<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="session-重用和-0-RTT"><a href="#session-重用和-0-RTT" class="headerlink" title="session 重用和 0-RTT"></a>session 重用和 0-RTT</h2><p>client 收到 NewSessionTicket 消息后,<br>收到的 ticket 和客户端本地发送 finished 后计算的 resumptionSecret，两者一起组成了 PreSharedKey，即 PSK。<br>然后 client 把 PSK 保存到本地 cache 中， serverName 作为 cache 的 key。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">func (h *ClientHandshake) HandleNewSessionTicket(hm *HandshakeMessage) (PreSharedKey, error) &#123;<br>var tkt NewSessionTicketBody<br>_, err := tkt.Unmarshal(hm.body)<br><br>psk := PreSharedKey&#123;<br>CipherSuite:  h.Context.suite,<br>IsResumption: true,<br>Identity:     tkt.Ticket,// ticket 中也包含 resumptionSecret，但是被加密<br>Key:          h.Context.resumptionSecret,//客户端本地发送 finished 后计算的 resumptionSecret<br>&#125;<br>return psk, nil<br>&#125;<br>c.config.PSKs.Put(c.config.ServerName, psk)//这里使用 serverName 做为 key<br></code></pre></td></tr></table></figure><h2 id="client"><a href="#client" class="headerlink" title="client"></a>client</h2><p>在 client hello 中，会在本地 cache 中查找 servername 对应的 PSK， 找到后则在 client hello 的 psk 扩展中带上两部分</p><ul><li>Identity: 就是 NewSessionTicket 中加密的 ticket</li><li>Binder: 从之前 client 发送 finished 计算的 resumption secret，导出 early secret，进而导出后续的 binderKey 和 binder_macKey， 使用 binder_macKey 对不包含 PSK 部分的 clientHello 作HMAC</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">Early Secret = HKDF-Extract(0, resumption secret)<br>binder_key = deriveSecret(Early Secret, &quot;resumption psk binder key&quot;, &quot;&quot;)<br>binder_macKey = hkdfExpandLabel(ctx.params.hash, binder_key, &quot;finished&quot;, []byte&#123;&#125;, ctx.params.hash.Size())<br>earlyTrafficSecret = ctx.deriveSecret(Early Secret, &quot;client early traffic secret&quot;, clientHello)<br>earlyExporterSecret = ctx.deriveSecret(Early Secret, &quot;early exporter master secret&quot;, ClientHello)<br>clientEarlyTrafficKey,  clientEarlyTrafficIv= ctx.makeTrafficKeys(earlyTrafficSecret)<br></code></pre></td></tr></table></figure><p>通过 resumption secret 最终导出 earlyData 的加密密钥，以及 PSK 扩展中 binder 的 hmac 密钥。<br>发送 clientHello 后，使用 resumption secret 导出的 clientEarlyTrafficKey 和 IV，对 early data 加密后发送。</p><p><em>需要注意的是 earlydata 在 ticket 有效期内，不能防止重放攻击。</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">func (h *ClientHandshake) CreateClientHello(opts ConnectionOptions, caps Capabilities) (*HandshakeMessage, error) &#123;<br>// key_shares<br>h.OfferedDH = map[NamedGroup][]byte&#123;&#125;<br>ks := KeyShareExtension&#123;<br>HandshakeType: HandshakeTypeClientHello,<br>Shares:        make([]KeyShareEntry, len(caps.Groups)),<br>&#125;<br>for i, group := range caps.Groups &#123;<br>pub, priv, err := newKeyShare(group)//为每个支持的曲线，生成公私钥，作为keyshare<br>if err != nil &#123;<br>return nil, err<br>&#125;<br>ks.Shares[i].Group = group<br>ks.Shares[i].KeyExchange = pub<br>h.OfferedDH[group] = priv<br>&#125;<br>...<br>if key, ok := caps.PSKs.Get(opts.ServerName); ok &#123; //从cache中获取PSK，尝试session重用<br>h.OfferedPSK = key<br>keyParams, ok := cipherSuiteMap[key.CipherSuite]<br>compatibleSuites := []CipherSuite&#123;&#125;<br>for _, suite := range ch.CipherSuites &#123;<br>if cipherSuiteMap[suite].hash == keyParams.hash &#123;<br>compatibleSuites = append(compatibleSuites, suite)<br>&#125;<br>&#125;<br>ch.CipherSuites = compatibleSuites//更新psk能使用的算法<br>if opts.EarlyData != nil &#123;//使用psk的话可以使用0-rtt发送early data<br>ed = &amp;EarlyDataExtension&#123;&#125;//开启early data<br>ch.Extensions.Add(ed)<br>&#125;<br><br>psk = &amp;PreSharedKeyExtension&#123;<br>HandshakeType: HandshakeTypeClientHello,<br>Identities: []PSKIdentity&#123;<br>&#123;Identity: key.Identity&#125;,//Identity就是加密的ticket<br>&#125;,<br>Binders: []PSKBinderEntry&#123;<br>// Note: Stub to get the length fields right<br>&#123;Binder: bytes.Repeat([]byte&#123;0x00&#125;, keyParams.hash.Size())&#125;,<br>&#125;,<br>&#125;<br>ch.Extensions.Add(psk)//添加psk作为client hello的扩展<br>h.Context.preInit(key)//从resumption secret导出early secret-&gt;binder key<br>trunc, err := ch.Truncated()//clientHello减去psk 扩展部分<br>truncHash := h.Context.params.hash.New()<br>truncHash.Write(trunc)<br>binder := h.Context.computeFinishedData(h.Context.binderKey, truncHash.Sum(nil))//binder_key导出macKey, 计算clientHello hmac<br>// Replace the PSK extension<br>psk.Binders[0].Binder = binder//client hello的hmac<br>ch.Extensions.Add(psk) //替换psk扩展<br>h.clientHello, err = HandshakeMessageFromBody(ch)//重新构造client hello<br><br>h.Context.earlyUpdateWithClientHello(h.clientHello)//导出client_early_traffic_secret及其key和iv，作为0-RTT的early data的密钥<br>&#125;<br>...<br>&#125;<br>func (c *Conn) clientHandshake() error &#123;<br>logf(logTypeHandshake, &quot;Starting clientHandshake&quot;)<br>h := &amp;ClientHandshake&#123;&#125;<br>hIn := NewHandshakeLayer(c.in)<br>hOut := NewHandshakeLayer(c.out)<br>// Generate ClientHello<br>caps := Capabilities&#123;<br>CipherSuites:     c.config.CipherSuites,<br>Groups:           c.config.Groups,<br>SignatureSchemes: c.config.SignatureSchemes,<br>PSKs:             c.config.PSKs,<br>PSKModes:         c.config.PSKModes,<br>Certificates:     c.config.Certificates,<br>&#125;<br>opts := ConnectionOptions&#123;<br>ServerName: c.config.ServerName,<br>NextProtos: c.config.NextProtos,<br>EarlyData:  c.earlyData,<br>&#125;<br>chm, err := h.CreateClientHello(opts, caps)<br>if err != nil &#123;<br>return err<br>&#125;<br>// Write ClientHello<br>err = hOut.WriteMessage(chm)<br>if err != nil &#123;<br>return err<br>&#125;<br>if opts.EarlyData != nil &#123;//使用client_early_traffic_secret的key/iv加密early data， 支持0-rtt发送<br>// Rekey output to early data keys<br>err = c.out.Rekey(h.Context.params.cipher, h.Context.clientEarlyTrafficKeys.key, h.Context.clientEarlyTrafficKeys.iv)<br>// Send early application data<br>logf(logTypeHandshake, &quot;[client] Sending data...&quot;)<br>_, err = c.Write(opts.EarlyData)<br>if err != nil &#123;<br>return err<br>&#125;<br>// Send end_of_earlyData<br>logf(logTypeHandshake, &quot;[client] Sending end_of_early_data...&quot;)<br>err = c.sendAlert(AlertEndOfEarlyData)//发送end_of_early_data alert标记early data结束<br>if err != nil &#123;<br>return err<br>&#125;<br>&#125;<br>...<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="server"><a href="#server" class="headerlink" title="server"></a>server</h2><p>和 TLS 1.2 之前不同， session 重用，使用的不是过去的 master secret。<br>TLS1.2 加密 ticket 后使用过去的 master secret，然后和两个随机数作为参数，一起 PRF 导出密钥。<br>而 TLS 1.3 只使用过去的 resumption secret 导出 early data 的密钥， 之后的密钥会和 ECDHE secret，一起导出。</p><ul><li>服务端收到 client hello 后，生成本地的 keyShare</li><li>检查 client hello 的 PSK 扩展， 解密 ticket，查看该 ticket 是否过期，已经版本算法等协商结果是否可用，然后使用 ticket 中的 resumption secret 计算 client hello 的 hmac， 检查 binder 是否正确。</li><li>验证完 ticket 和 binder 之后，在 serverHello 中表示使用 PSK，以及哪个 PSK。</li><li>和 client 一样，从 resumtion secret 中导出 earlyData 使用的密钥</li><li>和不使用 session 重用一样，导出后续的密钥，唯一不同的是 resumption secret 作为 early secret 的输入</li><li>收到 endOfEarlyData alert 后，切换到 client 方向的应用程序密钥</li><li>serverHello 发送后依然会发送 EncryptedExtensions 和 Finished 消息，但不会再发送 Certificate 和 CerficateVerify 消息。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">func (hs *serverHandshakeState) doTLS13Handshake() error &#123;<br><br>var ks keyShare<br>CurvePreferenceLoop:<br>for _, curveID := range config.curvePreferences() &#123;// tls 1.3所有的曲线，都必须生成对应的keyshare， keyshare中包含dh的公钥<br>for _, keyShare := range hs.clientHello.keyShares &#123;<br>if curveID == keyShare.group &#123;<br>ks = keyShare<br>break CurvePreferenceLoop<br>&#125;<br>&#125;<br>&#125;<br><br>privateKey, serverKS, err := config.generateKeyShare(ks.group)//ecdhe服务端生成公私钥<br>hs.hello13.keyShare = serverKS//公钥作为keyshare<br>earlySecret, pskAlert := hs.checkPSK()// 检查psk，看能否session重用<br>switch &#123;<br>...<br>case earlySecret != nil:<br>c.didResume = true //ticket和binder验证通过。<br>&#125;<br>hs.finishedHash13 = hash.New()<br>hs.finishedHash13.Write(hs.clientHello.marshal())<br>handshakeCtx := hs.finishedHash13.Sum(nil)//client hello摘要<br>earlyClientCipher, _ := hs.prepareCipher(handshakeCtx, earlySecret, &quot;client early traffic secret&quot;) //client_early_traffic_secret=Derive-Secret(earlySecret, &quot;client early traffic secret&quot;,hash(clientHello))<br>ecdheSecret := deriveECDHESecret(ks, privateKey)//客户端公钥和server私钥，根据曲线乘法，计算出对称密钥<br><br>hs.finishedHash13.Write(hs.hello13.marshal())<br>//发送server  hello, 包含协商信息,  需要注意的是，服务端的keyshare没有使用私钥签名<br>if _, err := c.writeRecord(recordTypeHandshake, hs.hello13.marshal()); err != nil &#123;<br>return err<br>&#125;<br>// 和不使用session重用一致，只是early secret使用resumption secret作为输入<br>// 不再发送发送Certificate和CerficateVerify消息<br>...<br>return nil<br>&#125;<br>func (hs *serverHandshakeState) checkPSK() (earlySecret []byte, alert alert) &#123;<br>if hs.c.config.SessionTicketsDisabled &#123;<br>return nil, alertSuccess<br>&#125;<br>foundDHE := false<br>for _, mode := range hs.clientHello.pskKeyExchangeModes &#123;<br>if mode == pskDHEKeyExchange &#123;//只支持psk dhe模式<br>foundDHE = true<br>break<br>&#125;<br>&#125;<br>if !foundDHE &#123;<br>return nil, alertSuccess<br>&#125;<br>hash := hashForSuite(hs.suite)<br>hashSize := hash.Size()<br>for i := range hs.clientHello.psks &#123;<br>sessionTicket := append([]uint8&#123;&#125;, hs.clientHello.psks[i].identity...)<br>if hs.c.config.SessionTicketSealer != nil &#123;<br>var ok bool<br>sessionTicket, ok = hs.c.config.SessionTicketSealer.Unseal(hs.clientHelloInfo(), sessionTicket)<br>if !ok &#123;<br>continue<br>&#125;<br>&#125; else &#123;<br>sessionTicket, _ = hs.c.decryptTicket(sessionTicket)//使用默认的session ticket key解密<br>if sessionTicket == nil &#123;<br>continue<br>&#125;<br>&#125;<br>s := &amp;sessionState13&#123;&#125;//还原tls 1.3 session<br>if s.unmarshal(sessionTicket) != alertSuccess &#123;<br>continue<br>&#125;<br>if s.vers != hs.c.vers &#123;<br>continue<br>&#125;<br>//client收到ticket后，通过lifetime，计算obfTicketAge，并加上随机值ageAdd，这里减回去，得到client的ticket有效时间<br>clientAge := time.Duration(hs.clientHello.psks[i].obfTicketAge-s.ageAdd) * time.Millisecond//tls 1.3 ticket带时间了<br>serverAge := time.Since(time.Unix(int64(s.createdAt), 0))//距离本次ticket的创建时间<br>if clientAge-serverAge &gt; ticketAgeSkewAllowance || clientAge-serverAge &lt; -ticketAgeSkewAllowance &#123;<br>// XXX: NSS is off spec and sends obfuscated_ticket_age as seconds<br>clientAge = time.Duration(hs.clientHello.psks[i].obfTicketAge-s.ageAdd) * time.Second<br>if clientAge-serverAge &gt; ticketAgeSkewAllowance || clientAge-serverAge &lt; -ticketAgeSkewAllowance &#123;<br>continue<br>&#125;<br>&#125;<br>// This enforces the stricter 0-RTT requirements on all ticket uses.<br>// The benefit of using PSK+ECDHE without 0-RTT are small enough that<br>// we can give them up in the edge case of changed suite or ALPN or SNI.<br>if s.suite != hs.suite.id &#123;<br>continue<br>&#125;<br>if s.alpnProtocol != hs.c.clientProtocol &#123;<br>continue<br>&#125;<br>if s.SNI != hs.c.serverName &#123;<br>continue<br>&#125;<br>earlySecret := hkdfExtract(hash, s.resumptionSecret, nil)// earlySecret = hkdfExtract(psk, 0); psk=resumption_master_secret<br>handshakeCtx := hash.New().Sum(nil)<br>binderKey := hkdfExpandLabel(hash, earlySecret, handshakeCtx, &quot;resumption psk binder key&quot;, hashSize) //binder_key=Derive-Secret(early secret, &quot;resumption psk binder key&quot;, &quot;&quot;)<br>binderFinishedKey := hkdfExpandLabel(hash, binderKey, nil, &quot;finished&quot;, hashSize) //finished_key=Derive-Secret(binder_key, &quot;finished&quot;, &quot;&quot;)<br>chHash := hash.New()<br>chHash.Write(hs.clientHello.rawTruncated)//不包含psk扩展<br>expectedBinder := hmacOfSum(hash, chHash, binderFinishedKey)//通过finishKey计算clienthello的hmac<br>if subtle.ConstantTimeCompare(expectedBinder, hs.clientHello.psks[i].binder) != 1 &#123;//hmac验证<br>return nil, alertDecryptError<br>&#125;<br>if i == 0 &amp;&amp; hs.clientHello.earlyData &#123;<br>// This is a ticket intended to be used for 0-RTT<br>if s.maxEarlyDataLen == 0 &#123;<br>// But we had not tagged it as such.<br>return nil, alertIllegalParameter<br>&#125;<br>if hs.c.config.Accept0RTTData &#123;//服务端支持0rtt， 0rtt会引起重放攻击<br>hs.c.binder = expectedBinder<br>hs.c.ticketMaxEarlyData = int64(s.maxEarlyDataLen)<br>hs.hello13Enc.earlyData = true<br>&#125;<br>&#125;<br>hs.hello13.psk = true<br>hs.hello13.pskIdentity = uint16(i)<br>return earlySecret, alertSuccess<br>&#125;<br>return nil, alertSuccess<br>&#125;<br>func (c *Conn) handleEndOfEarlyData() &#123;<br>if c.phase != readingEarlyData || c.vers &lt; VersionTLS13 &#123;<br>c.in.setErrorLocked(c.sendAlert(alertUnexpectedMessage))<br>return<br>&#125;<br>c.phase = waitingClientFinished<br>if c.hand.Len() &gt; 0 &#123;<br>c.in.setErrorLocked(c.sendAlert(alertUnexpectedMessage))<br>return<br>&#125;<br>c.in.setCipher(c.vers, c.hs.hsClientCipher)//切换client的应用程序密钥<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="记录层"><a href="#记录层" class="headerlink" title="记录层"></a>记录层</h2><p>通过clientHello中带有short headers扩展， 删除了记录层开头的几个字节</p><h2 id="HKDF"><a href="#HKDF" class="headerlink" title="HKDF"></a>HKDF</h2><h4 id="HMAC-based-key-derivation-function"><a href="#HMAC-based-key-derivation-function" class="headerlink" title="(HMAC-based key derivation function)"></a>(HMAC-based key derivation function)</h4><p>HKDF是基于HMAC的密钥导出算法，用来替换TLS 1.3之前的PRF算法。</p><blockquote><p>HKDF follows the “extract-then-expand” paradigm, where the KDF<br>logically consists of two modules. The first stage takes the input<br>keying material and “extracts” from it a fixed-length pseudorandom<br>key K. The second stage “expands” the key K into several additional<br>pseudorandom keys (the output of the KDF).</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">0<br>             |<br>             v<br>PSK(resumption secret) -&gt;  HKDF-Extract = Early Secret<br>             |<br>             +-----&gt; Derive-Secret(.,<br>             |                     &quot;external psk binder key&quot; |<br>             |                     &quot;resumption psk binder key&quot;,<br>             |                     &quot;&quot;)<br>             |                     = binder_key<br>             |<br>             +-----&gt; Derive-Secret(., &quot;client early traffic secret&quot;,<br>             |                     ClientHello)<br>             |                     = client_early_traffic_secret<br>             |<br>             +-----&gt; Derive-Secret(., &quot;early exporter master secret&quot;,<br>             |                     ClientHello)<br>             |                     = early_exporter_master_secret<br>             v<br>       Derive-Secret(., &quot;derived secret&quot;, &quot;&quot;)<br>             |<br>             v<br>(EC)DHE -&gt; HKDF-Extract = Handshake Secret<br>             |<br>             +-----&gt; Derive-Secret(., &quot;client handshake traffic secret&quot;,<br>             |                     ClientHello...ServerHello)<br>             |                     = client_handshake_traffic_secret<br>             |<br>             +-----&gt; Derive-Secret(., &quot;server handshake traffic secret&quot;,<br>             |                     ClientHello...ServerHello)<br>             |                     = server_handshake_traffic_secret<br>             v<br>       Derive-Secret(., &quot;derived secret&quot;, &quot;&quot;)<br>             |<br>             v<br>  0 -&gt; HKDF-Extract = Master Secret<br>             |<br>             +-----&gt; Derive-Secret(., &quot;client application traffic secret&quot;,<br>             |                     ClientHello...server Finished)<br>             |                     = client_application_traffic_secret_0<br>             |<br>             +-----&gt; Derive-Secret(., &quot;server application traffic secret&quot;,<br>             |                     ClientHello...server Finished)<br>             |                     = server_application_traffic_secret_0<br>             |<br>             +-----&gt; Derive-Secret(., &quot;exporter master secret&quot;,<br>             |                     ClientHello...server Finished)<br>             |                     = exporter_master_secret<br>             |<br>             +-----&gt; Derive-Secret(., &quot;resumption master secret&quot;,<br>                                   ClientHello...client Finished)<br>                                   = resumption_master_secret<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TCP </tag>
            
            <tag> HTTPS </tag>
            
            <tag> 0-RTT </tag>
            
            <tag> TLS </tag>
            
            <tag> TFO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云 CVM 配置 IPv6 简易教程</title>
      <link href="/archives/424/"/>
      <url>/archives/424/</url>
      
        <content type="html"><![CDATA[<p>腾讯云服务器现在已经支持配置 IPv6 了，但是官网的文档写的并不清楚，有的文档未及时更新，本文介绍腾讯云服务器(CVM)如何配置公网 IPv6</p><span id="more"></span><hr><h3 id="简单了解腾讯云的-IPv6"><a href="#简单了解腾讯云的-IPv6" class="headerlink" title="简单了解腾讯云的 IPv6"></a>简单了解腾讯云的 IPv6</h3><p><strong>前缀、子网和地址</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">以下是一个完整的、合法的标准十六进制 IPv6 地址，而且不是缩写<br>2402:4e00:1204:3e00:0000:0000:0000:0000<br>&lt;    PREFIX     &gt;&lt;&gt;&lt;      SUFFIX      &gt;<br>      前缀      子网        后缀<br>每个私有网络可以申请一个 56 位的前缀（Prefix）<br>（申请后，前缀无法改变，除非你更换私有网络）<br>第 57-64 位是由子网（Subnet）控制的<br>（你可以自由更改）<br>后 64 位叫做后缀（Suffix），是分配给 CVM 实例的<br>（你可以自由更改）<br>将前缀、子网、后缀拼合起来，是你实例的完整 IPv6 地址<br></code></pre></td></tr></table></figure><p><strong>关于缩写</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">如果地址中任意一段为连续的 0，可以省略 0<br>如果地址中任意一段开头有 0，可以省略 0<br>上面的地址缩写后如下：<br>2402:4e00:1204:3e00:0:0:0:0<br><br>如果地址中多段为 0，可以将这些段简写为 ::<br>注意：一个地址只能出现一次 ::<br>上面的地址再次缩写如下：<br>2402:4e00:1204:3e00::<br></code></pre></td></tr></table></figure><h2 id="申请-IPv6"><a href="#申请-IPv6" class="headerlink" title="申请 IPv6"></a>申请 IPv6</h2><p>进入<a href="https://cloud.tencent.com/apply/p/a9k0gialqhj">内测申请</a>界面申请 IPv6，信息可以随便填，自动审核通过。<br><img src="https://cos.mbrjun.cn/IMGS/2022/04/01/vp.png"></p><h2 id="私有网络开启-IPv6"><a href="#私有网络开启-IPv6" class="headerlink" title="私有网络开启 IPv6"></a>私有网络开启 IPv6</h2><p>进入<a href="https://console.cloud.tencent.com/vpc/vpc">私有网络</a>，点击网络右侧的<strong>更多</strong>，点击<strong>编辑 IPv6 CIDR</strong>，进入 IPv6 配置界面。<br>然后申请 IPv6 前缀（注意：释放重新申请不会改变前缀）。<br><img src="https://cos.mbrjun.cn/IMGS/2022/04/01/ic.png"><br><img src="https://cos.mbrjun.cn/IMGS/2022/04/01/yh.png"></p><h2 id="子网开启-IPv6"><a href="#子网开启-IPv6" class="headerlink" title="子网开启 IPv6"></a>子网开启 IPv6</h2><p>进入<a href="https://console.cloud.tencent.com/vpc/subnet">私有网络-子网</a>，点击网络右侧的<strong>更多</strong>，点击<strong>获取 IPv6 CIDR</strong>，进入 IPv6 配置界面。<br>然后配置 IPv6 前缀。（和上一步神似欸）<br>有趣的是，这里的子网配置不是标准的十六进制，而是十进制，比如你想要 2402:4e00:1204:3e<strong>ff</strong>::&#x2F;64，你要填 255，建议使用 Windows 计算器进行进位换算</p><p><img src="https://cos.mbrjun.cn/IMGS/2022/04/01/ti.png"></p><h2 id="CVM-开启-IPv6"><a href="#CVM-开启-IPv6" class="headerlink" title="CVM 开启 IPv6"></a>CVM 开启 IPv6</h2><p>进入<a href="https://console.cloud.tencent.com/cvm/instance/index">CVM 实例控制台</a>选择实例，点击 更多操作 &gt; IP&#x2F;网卡 &gt; 管理 IPv6 地址<br><img src="https://cos.mbrjun.cn/IMGS/2022/04/01/ir.png"><br>填写完整的、合法的 IPv6 地址，允许缩写<br><img src="https://cos.mbrjun.cn/IMGS/2022/04/01/hf.png"><br>重启服务器<br><img src="https://cos.mbrjun.cn/IMGS/2022/04/01/ri.png"><br>好了之后去<a href="https://console.cloud.tencent.com/vpc/ipv6bandwidth/apply">打开公网访问</a>，然后通过 SSH 连接到服务器（<a href="https://cloud.tencent.com/document/product/1142/47667">什么？我是 Windows</a>）<br>执行下面的命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">cd /tmp<br>wget https://iso-1251783334.cos.ap-guangzhou.myqcloud.com/scripts/config_ipv6.sh<br>chmod +x ./config_ipv6.sh<br>./config_ipv6.sh eth0 # 需要按 y 确认<br></code></pre></td></tr></table></figure><p>然后输入 <code>ifconfig eth0</code> 查看 IPv6 地址<br><img src="https://cos.mbrjun.cn/IMGS/2022/04/01/fu.png"><br>可以看到已经配置成功</p><p>注意：如果配置好后无法使用，建议去检查安全组</p><hr><p>参考：<br><a href="https://cloud.tencent.com/document/product/215/47557">搭建 IPv6 私有网络 - 腾讯云</a><br><a href="https://cloud.tencent.com/document/product/1142/47666#open">Linux 云服务器配置 IPv6 - 腾讯云</a><br><a href="https://cloud.tencent.com/document/product/576">弹性网卡 - 腾讯云</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IPv6 </tag>
            
            <tag> SEO </tag>
            
            <tag> 腾讯云 </tag>
            
            <tag> 云服务器 </tag>
            
            <tag> VPS </tag>
            
            <tag> CVM </tag>
            
            <tag> 建站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PVE 集群模式下修改配置文件</title>
      <link href="/archives/423/"/>
      <url>/archives/423/</url>
      
        <content type="html"><![CDATA[<h2 id="PVE-在集群模式下，某些情况（比如：主机卡死了）下配置-PVE-虚拟机，需要修改虚拟机配置文件，但是-PVE-集群模式下修改配置和逻辑和独立节点模式不同，下面是-PVE-集群模式下修改配置文件的教程"><a href="#PVE-在集群模式下，某些情况（比如：主机卡死了）下配置-PVE-虚拟机，需要修改虚拟机配置文件，但是-PVE-集群模式下修改配置和逻辑和独立节点模式不同，下面是-PVE-集群模式下修改配置文件的教程" class="headerlink" title="PVE 在集群模式下，某些情况（比如：主机卡死了）下配置 PVE 虚拟机，需要修改虚拟机配置文件，但是 PVE 集群模式下修改配置和逻辑和独立节点模式不同，下面是 PVE 集群模式下修改配置文件的教程"></a>PVE 在集群模式下，某些情况（比如：主机卡死了）下配置 PVE 虚拟机，需要修改虚拟机配置文件，但是 PVE 集群模式下修改配置和逻辑和独立节点模式不同，下面是 PVE 集群模式下修改配置文件的教程<br><span id="more"></span></h2><h2 id="正常状态-Quorate-Yes"><a href="#正常状态-Quorate-Yes" class="headerlink" title="正常状态 Quorate: Yes"></a>正常状态 Quorate: Yes</h2><p><em>集群具有法定数目的：是（集群内所有主机在线）</em></p><p>一般情况下，只要集群所有机器都跑着，就属于这个状态，卡死了一般也在这个状态<br>这种情况修改配置文件最简单，方法也很多</p><h3 id="修改本机配置"><a href="#修改本机配置" class="headerlink" title="修改本机配置"></a>修改本机配置</h3><p>无论独立节点和集群模式，本机的配置都存储于 &#x2F;etc&#x2F;pve 目录下，可以直接进行编辑修改<br>例：&#x2F;etc&#x2F;pve&#x2F;lxc：LXC 容器配置文件目录<br>例：&#x2F;etc&#x2F;pve&#x2F;qemu-server：虚拟机配置文件目录</p><h3 id="修改其他机器设置"><a href="#修改其他机器设置" class="headerlink" title="修改其他机器设置"></a>修改其他机器设置</h3><p>首先连接到集群中任意一台机器，然后打开 &#x2F;etc&#x2F;pve&#x2F;nodes&#x2F;机器名 目录，这个目录就是对应机器的配置文件<br>例：&#x2F;etc&#x2F;pve&#x2F;nodes&#x2F;PVESVR&#x2F;qemu-server：”PVESVR”的虚拟机配置文件目录<br>修改完成后，重启对应主机来同步配置文件（如果能做到，请使用关机-开机代替重启），这种方法也能修改当前主机配置，如果使用这种方法修改当前主机配置，则不需要重启（因为 &#x2F;dev&#x2F;pve 链接到 &#x2F;dev&#x2F;pve&#x2F;nodes&#x2F;&lt;当前主机&gt;）</p><h2 id="异常状态-Quorate-No"><a href="#异常状态-Quorate-No" class="headerlink" title="异常状态 Quorate: No"></a>异常状态 Quorate: No</h2><p><em>集群具有法定数目的：否（集群内任意主机离线）</em></p><p>如果有主机离线，就会进入这个状态。这个状态下修改配置文件很麻烦，所以请再看看这台机子能不能连上集群。<br>在这个状态下，集群内所有主机配置文件目录的权限是 440(r–r—–)，即只读，你也无法使用 chmod 修改权限，这是因为 &#x2F;etc&#x2F;pve 是 pve-cluster 程序接手的一个目录，用 fuse(&#x2F;dev&#x2F;fuse) 挂载。<br>如果你想要修改，就只能把你的机器设置为独立节点模式（即退出集群）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">systemctl stop pve-cluster.service<br>systemctl stop corosync.service<br>pmxcfs -l<br>rm /etc/pve/corosync.conf<br>rm -rf /etc/corosync/*<br>killall pmxcfs<br>systemctl start pve-cluster.service<br></code></pre></td></tr></table></figure><p>然后应该能正常修改配置文件目录 &#x2F;etc&#x2F;pve 了</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> 虚拟化 </tag>
            
            <tag> ESXi </tag>
            
            <tag> PVE </tag>
            
            <tag> 企业级 </tag>
            
            <tag> R86S </tag>
            
            <tag> 集群 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>U 盘 / TF 卡安装 ESXi 教程</title>
      <link href="/archives/422/"/>
      <url>/archives/422/</url>
      
        <content type="html"><![CDATA[<p>ESXi 安装到 TF 卡，正常情况下只是系统安装成功，并不能创建虚拟机，本文浇大家如何在把 ESXi 安装至 TF 卡并创建数据分区。<br>VMware 不建议用户在 TF 卡中安装 ESXi，如果你仍然想这么做，风险自负</p><span id="more"></span><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul><li>一个 Windows 电脑</li><li>一个 8 GB 以上大小的 U 盘</li><li>永不放弃的决心</li></ul><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><ol><li><p>下载 ESXi 的 ISO 镜像，Windows 双击打开<br>应该会自动打开一个目录，里面有很多文件，这个目录我们叫他&lt;源目录&gt;</p></li><li><p>准备一个 U 盘，我们先叫他&lt;安装磁盘&gt;<br>然后将安装磁盘格式化为 FAT32<br><del>你也可以格式化为 NTFS(但是不建议，迫不得已时使用，很少有主板支持 NTFS 引导)</del></p></li><li><p>将源目录全部文件选中，然后在安装磁盘粘贴<br>等待一段时间，安全弹出安装磁盘，然后把安装磁盘拔掉</p></li><li><p>关闭你想要安装 ESXi 的服务器（后称&lt;服务器&gt;）</p></li><li><p>安装磁盘插入服务器</p></li><li><p>服务器开机，然后一直按 F7（不同服务器的引导菜单按键不一样，你可能需要在网络上查询，常见的按键有 ESC F2 F7 F8 F10 F12 Enter Del Dot）</p></li><li><p>屏幕上应该会出现一个 “Please select boot device” 画面，按键盘的上下剪头将光标移动到”ESXi Installer”（如果没有该选项，则选择安装磁盘）<img src="https://cos.mbrjun.cn/IMGS/2022/05/26/rb.png"></p></li><li><p>在完成上一步 5 秒内按下 按下 Shift + O</p></li><li><p>输入下面一行的内容（注意有空格）<br><code> autoPartitionOSDataSize=4096</code><br>完成后，按一下回车 <img src="https://cos.mbrjun.cn/IMGS/2022/05/26/er.png"></p></li><li><p>然后等待安装程序加载，取决于服务器性能，你需要等待 3 分钟左右</p></li><li><p>你应该已经进入安装系统的界面了，按一下回车继续 <img src="https://cos.mbrjun.cn/IMGS/2022/05/26/vy.png"></p></li><li><p>阅读条款，同意按 F11 <img src="https://cos.mbrjun.cn/IMGS/2022/05/26/rd.png"></p></li><li><p>屏幕上应该会列出已经连接的存储设备，按键盘的上下剪头来选择你想要安装 ESXi 系统的磁盘（也就是你的 U 盘或 TF 卡）&lt;目标磁盘&gt; <img src="https://cos.mbrjun.cn/IMGS/2022/05/26/cf.png"></p></li><li><p>你磁盘中如果有数据，则所有数据都会被清除！（按 ENTER 确认）</p></li><li><p>输入密码，按 Tab<br>确认你输入的密码，按回车 <img src="https://cos.mbrjun.cn/IMGS/2022/05/26/xc.png"></p></li><li><p>按 F11 开始安装<br>取决于磁盘性能，你大约需要等待 30秒（SSD）到 30分钟（低性能U盘）<img src="https://cos.mbrjun.cn/IMGS/2022/05/26/tx.png"></p></li><li><p>进度条走完之后把安装磁盘拔掉，确认 <img src="https://cos.mbrjun.cn/IMGS/2022/05/26/ec.png"></p></li><li><p>基本系统安装完成</p></li><li><p>按 F2 打开 DCUI，完成基本配置<br>这些基本配置包括</p><ul><li>IP 地址</li><li>子网掩码</li><li>网关</li><li>DNS</li><li>DNS 搜索域</li><li>FQDN</li><li>开启 SSH</li><li>IPv6</li><li>管理网卡<br><img src="https://cos.mbrjun.cn/IMGS/2022/05/26/cu.png"></li></ul></li><li><p>打开电脑的终端（Windows 中常用命令提示符、PowerShell 和 Windows Terminal） <img src="https://cos.mbrjun.cn/IMGS/2022/05/26/yc.png"></p></li><li><p>终端输入下面的命令来连接 ESXi 主机<br><code>ssh root@&lt;host&gt;</code><br>&lt;host&gt; 是你 ESXi 主机的 IP 地址或者 FQDN，自行替换</p></li><li><p>你的电脑应该会弹出一个安全提示，输入 YES 回车即可</p></li><li><p>确保你的设备除了目标磁盘，没有连接到任何其他磁盘（如果连接了其他磁盘，拔出并重启，否则直接继续操作）</p></li><li><p>执行下面的命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">/etc/init.d/usbarbitrator stop<br>partedUtil getptbl /dev/disks/mpx.vmhba32:C0:T0:L0<br></code></pre></td></tr></table></figure></li><li><p>然后终端输出 “gpt” 和四组数字，在我的机器上，这四组数字是 “15545 255 63 249737216”</p></li><li><p>打开计算器，计算 “ 第一组数字 * 第二组数字 * 第三组数字 - 1”，记住这组数字，我得到了 249,730,424</p></li><li><p>如果你的目标磁盘 ＞100 GB，执行</p><p><code>partedUtil setptbl /dev/disks/mpx.vmhba32:C0:T0:L0 gpt &quot;7 38000000 你计算出的数字 AA31E02A400F11DB9590000C2911D1B8 0&quot; </code></p><p>如果你的目标磁盘 ＜100 GB，执行</p><p><code>partedUtil setptbl /dev/disks/mpx.vmhba32:C0:T0:L0 gpt &quot;7 32000000 你计算出的数字 AA31E02A400F11DB9590000C2911D1B8 0&quot; </code></p></li><li><p>重复第 4 - 13 步</p></li><li><p>选择 “Install ESXi, preserve VMFS datastore”，回车</p></li><li><p>重复第 15 - 17 步</p></li><li><p>Windows 终端执行<br><code>ssh-keygen -R &lt;host&gt;</code><br>&lt;host&gt; 替换为 ESXi 主机 IP</p></li><li><p>重复第 19 - 22 步，打开 SSH 并连接</p></li><li><p>输入<br><code>vmkfstools -C vmfs6 -S Data /dev/disks/mpx.vmhba32:C0:T0:L0:8</code><br>格式化磁盘</p></li></ol><p>完成！Enjoy~</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> Linux </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> ESXi </tag>
            
            <tag> 软路由 </tag>
            
            <tag> 小主机 </tag>
            
            <tag> R86S </tag>
            
            <tag> 企业 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PVE 主机及 LXC 容器开启 DHCPv6 客户端教程</title>
      <link href="/archives/418/"/>
      <url>/archives/418/</url>
      
        <content type="html"><![CDATA[<h2 id="很多人配置好-PVE-之后，发现自己的-PVE-主机没有-IPv6-地址，无法远程访问，排查了很久依然无法获取地址，这其实是因为-PVE-内置的安全策略导致的，必须开启-IPv6-相关报文转发才能正常通过-DHCPv6-或-SLAAC-获取-IPv6-地址"><a href="#很多人配置好-PVE-之后，发现自己的-PVE-主机没有-IPv6-地址，无法远程访问，排查了很久依然无法获取地址，这其实是因为-PVE-内置的安全策略导致的，必须开启-IPv6-相关报文转发才能正常通过-DHCPv6-或-SLAAC-获取-IPv6-地址" class="headerlink" title="很多人配置好 PVE 之后，发现自己的 PVE 主机没有 IPv6 地址，无法远程访问，排查了很久依然无法获取地址，这其实是因为 PVE 内置的安全策略导致的，必须开启 IPv6 相关报文转发才能正常通过 DHCPv6 或 SLAAC 获取 IPv6 地址"></a>很多人配置好 PVE 之后，发现自己的 PVE 主机没有 IPv6 地址，无法远程访问，排查了很久依然无法获取地址，这其实是因为 PVE 内置的安全策略导致的，必须开启 IPv6 相关报文转发才能正常通过 DHCPv6 或 SLAAC 获取 IPv6 地址<br><span id="more"></span></h2><p>按下面的操作修改配置文件后即可正常获取 IPv6。<br>注意：本教程是让你的 PVE 主机 和 LXC 容器获取 IPv6 地址，如果你虚拟机和其他下连设备出现问题，请先确定是不是你自己的问题</p><ul><li>修改配置文件 <code>nano /etc/sysctl.conf</code></li><li>把文件内容替换为&#x2F;在末尾加上下面的内容</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">net.ipv6.conf.all.accept_ra=2<br>net.ipv6.conf.default.accept_ra=2<br>net.ipv6.conf.vmbr0.accept_ra=2<br>net.ipv6.conf.all.autoconf=2<br>net.ipv6.conf.default.autoconf=2<br>net.ipv6.conf.vmbr0.autoconf=2<br></code></pre></td></tr></table></figure><ul><li>重启主机</li></ul><p>另外备注一下：LXC 容器 获取 IPv6 地址要设置成 SLAAC 才能获取地址(设置为 SLAAC 后既可以 DHCPv6 有状态，也可以 SLAAC 无状态，设置为 DHCP 只能拿到Link-Local 链路地址)<br>LXC 容器修改完网络设置重启对应容器即可</p><p>重启之后检查一下 PVE 主机和 LXC 容器有没有拿到地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs plaintext"># ifconfig<br>eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500<br>        inet 10.20.6.9  netmask 255.224.0.0  broadcast 10.31.255.255<br>        inet6 2408:8210::18a9:1eff:fee2:600c  prefixlen 64  scopeid 0x0&lt;global&gt;<br>        inet6 2408:8210::10:20:6:9  prefixlen 128  scopeid 0x0&lt;global&gt;<br>        inet6 fe80::18a9:1eff:fee2:600c  prefixlen 64  scopeid 0x20&lt;link&gt;<br>        ether 1a:a9:1e:e2:60:0c  txqueuelen 1000  (Ethernet)<br>        RX packets 134  bytes 33534 (33.5 KB)<br>        RX errors 0  dropped 0  overruns 0  frame 0<br>        TX packets 126  bytes 24570 (24.5 KB)<br>        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0<br></code></pre></td></tr></table></figure><p>可以看到同时通过 DHCPv6 和 SLAAC 拿到了地址</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> IPv6 </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> 软路由 </tag>
            
            <tag> PVE </tag>
            
            <tag> DHCPv6 </tag>
            
            <tag> SLAAC </tag>
            
            <tag> LXC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>进阶 - 解决 PVE 下虚拟机自动重启</title>
      <link href="/archives/417/"/>
      <url>/archives/417/</url>
      
        <content type="html"><![CDATA[<p>PVE，全称 <strong>P</strong>roxmox <strong>V</strong>irtual <strong>E</strong>nvironment，是一个开源的服务器虚拟化环境Linux发行版。嗯……后面不会写了（</p><span id="more"></span><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>该文章是进阶教程，内容基本上是通用教程的补充，针对的是<strong>iKuai</strong>、<strong>OpenWrt</strong>、<strong>Windows</strong>等特定虚拟机系统，阅读此文章前请先阅读通用教程：</p><p><a href="https://www.mbrjun.cn/archives/412">https://www.mbrjun.cn/archives/412</a></p><h2 id="iKuai-换-32-位"><a href="#iKuai-换-32-位" class="headerlink" title="iKuai 换 32 位"></a>iKuai 换 32 位</h2><p>如果你只有 iKuai 自动重启，那么试试把他换成 32 位<br>建议分配 3GB RAM<br>注意：kvm32 不支持 UEFI<br><img src="https://cos.mbrjun.cn/IMGS/2022/02/24/ku.png"></p><h2 id="iKuai-3-6-3-Bug"><a href="#iKuai-3-6-3-Bug" class="headerlink" title="iKuai 3.6.3 Bug"></a>iKuai 3.6.3 Bug</h2><p>爱快 3.6.3 有内核 Bug 导致频繁重启，更新这篇文章时刚出了 3.6.4，如果有用过的可以给我反馈下是否还有自动重启的问题<br>解决方法是换 3.6.2<br>顺便放下镜像：<a href="https://download.mbrjun.cn/tree/iKuai/">https://download.mbrjun.cn/tree/iKuai/</a></p><p>更新：爱快 3.6.12 之后的版本修复了Bug,可以正常使用64位</p><h2 id="OpenWrt-Shortcut-FE"><a href="#OpenWrt-Shortcut-FE" class="headerlink" title="OpenWrt Shortcut-FE"></a>OpenWrt Shortcut-FE</h2><p>OpenWrt 的 SFE 加速有玄学 Bug，会莫名奇妙断网，然后触发系统自动检测重启，如果你在用这个功能就关了吧，开着对 x86-64 也没有什么提升<br><img src="https://cos.mbrjun.cn/IMGS/2022/05/01/rf.png"></p><h2 id="Windows-Kernel-Power"><a href="#Windows-Kernel-Power" class="headerlink" title="Windows Kernel-Power"></a>Windows Kernel-Power</h2><p>目前未能确定故障原因，似乎是中断处理的问题，关闭内存气球和快速启动缓解</p><hr><p>暂时只收集了这么多，欢迎各位大佬反馈，如果是反馈其他系统 PVE 下的重启问题，建议附上 log</p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
            <tag> 软路由 </tag>
            
            <tag> PVE </tag>
            
            <tag> 爱快 </tag>
            
            <tag> ikuai </tag>
            
            <tag> 小主机 </tag>
            
            <tag> R86S </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【25G硬路由】MikroTik CCR2004-1G-2XS-PCIe</title>
      <link href="/archives/416/"/>
      <url>/archives/416/</url>
      
        <content type="html"><![CDATA[<p>MikroTik官方推出了一款很奇特的产品CCR2004-1G-2XS-PCIe ，看着像一张显卡，其实是一张25G SFP28的网卡，还是一款PCIe的路由器，把路由器藏在一张PCIe卡上。对于这样的独特应用，我的理解也是模糊的。</p><span id="more"></span><p><img src="https://cos.mbrjun.cn/IMGS/2022/02/20/cc.jpg"><br>官方介绍：把CCR2004做成PCIe卡安装到服务器，是为了节省机柜的空间。而对于这样的设计，在服务器上使用结合了一张2x 25G PCIe以太网适配器和一个功能齐全的路由器，会让人印象非常深刻。</p><iframe width="720" height="405" frameborder="0" src="https://www.ixigua.com/iframe/7066630550010331684?autoplay=0" referrerpolicy="unsafe-url" allowfullscreen></iframe><p>默认情况下，PCIe网卡将显示为四个虚拟以太网接口：25G SFP28作为两个直通模式接口显示，另外两个虚拟的以太网PCIe接口和一个千兆以太网桥接，用于管理访问。用户可以自由配置所有的接口和设置，因为内置了完整的RouterOS功能。</p><p><img src="https://cos.mbrjun.cn/IMGS/2022/02/20/ph.jpg"></p><p>CCR2004-1G-2XS-PCIe也可以作为一个网卡工作，即直通模式。基本上，FastForward与FastPath模式也可以传递硬件链路状态。并且网卡可以使用巨帧线速转发(总线100Gbps)，能确保在大多数服务器设置中，CCR网卡不会成为传输瓶颈。在独立路由器模式下，能处理的网络应用包括:防火墙、用户管理、家庭媒体和文件服务器的访问控制，甚至一些数据中心的流量控制等，而不需要再安装一台独立的路由器。</p><p>处理器仍然采用， AL32400 4核心, ARMv8处理器，4G内存，128M NAND存储，从资料看CPU频率是2G，之前的CCR2004两款频率都是1.7G，理论上塞进服务器的空间狭小，应该降低功耗才对，但这款居然把频率提上去了，让真正的CCR2004路由器感觉凉凉的，估计MikroTik认为服务器里面的散热更凉快。</p><p>当然CCR2004-1G-2XS-PCIe在启动时存在一些局限，CCR2004-1G-2XS-PCIe需要一点启动时间。如果主机操作系统在CCR卡之前启动，将不会出现在可用的设备中。应该在BIOS中增加PCIe设备上电后的初始化延迟，或者在主机系统里重新初始化PCIe设备。安装MikroTik提供的信息，支持的服务器系统为Linux或者FreeBSD。</p><p>如下是官方给出在Linux上设置重新初始化，<em>设备id为：0000:03:00.0</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">echo &quot;1&quot; &gt; /sys/bus/pci/devices/0000\:03\:00.0/remove<br>sleep 2<br>echo &quot;1&quot; &gt; /sys/bus/pci/rescan<br></code></pre></td></tr></table></figure><p>官方很期待这个非传统设备的独特使用案例:一个高速网卡结合一个强大路由器，利用RouterOS强大的功能释放服务器的潜力!</p><table><thead><tr><th>产品代码</th><th>CCR2004-1G-2XS-PCIe</th></tr></thead><tbody><tr><td>CPU</td><td>AL32400 2 GHz</td></tr><tr><td>CPU 构架</td><td>ARM 64bit</td></tr><tr><td>CPU 核心</td><td>4</td></tr><tr><td>RAM</td><td>4GB</td></tr><tr><td>RAM 类型</td><td>DDR4</td></tr><tr><td>ROM</td><td>128 MB, NAND</td></tr><tr><td>1G 以太网电口</td><td>1</td></tr><tr><td>25G SFP28</td><td>2</td></tr><tr><td>RouterOS 许可</td><td>level 6</td></tr><tr><td>尺寸</td><td>170 x 69 x 18 mm</td></tr><tr><td>工作温度</td><td>-20°C to +60°C</td></tr><tr><td>最大功率</td><td>25W</td></tr></tbody></table><p>售价199USD，大概1200RMB，估计没有内置的交换芯片，硬件设计框架图还需要等官方公布资料在看看.对于IDC来说，一个机柜的空间是有限的，作为采购方租用一个机柜成本固定的情况下，希望放置更多的设备，如果把路由器塞进一台服务器的PCIe中，好像也就节约了1U的空间。但如果你只租用2U-4U的空间，安装1-3台服务器，可能这个PCIe路由器到也能为你节约可观的机柜成本。</p><p>如果真的安装到了PC主机或者服务器里，当服务器重启，PCIe网卡没有正常启动会如何？使用中出现驱动问题，导致网络中断，又会怎么？各种问题场景都可能出现，也可能在IDC上架时，搬运过程中PCIe接口松动，又会导致现场人员拆机处理。作为商业运营的数据中心，稳定压倒一切，多使用一个U位安装路由器更安心，不至于抠一个U位的成本。当然你有DIY的精神另当别论，DIY的目就是在有限的资源下，效益最大化！写着写着感觉MikroTik的产品一直都是这个DIY的定位。</p><p>当然我没有体验过CCR2004-1G-2XS-PCIe产品，也不能过多评价，现在认知仅供参考，以后有机会体验后评价。</p><p>From <a href="http://www.irouteros.com/?p=2562">http://www.irouteros.com/?p=2562</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 宽带 </tag>
            
            <tag> 网卡 </tag>
            
            <tag> ROS </tag>
            
            <tag> 路由器 </tag>
            
            <tag> MikroTik </tag>
            
            <tag> 万兆 </tag>
            
            <tag> 千兆 </tag>
            
            <tag> 企业级 </tag>
            
            <tag> 交换机 </tag>
            
            <tag> DIY </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Proxmox VE 配置 CPU 温度显示</title>
      <link href="/archives/415/"/>
      <url>/archives/415/</url>
      
        <content type="html"><![CDATA[<p>PVE，全称 <strong>P</strong> roxmox <strong>V</strong> irtual <strong>E</strong> nvironment，是一个开源的服务器虚拟化环境Linux发行版。本文章是 PVE 配置 CPU 温度显示的教程。</p><span id="more"></span><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>请确认你的版本和我的一样（或者差不多），否则容易出现 Bug。</p><ul><li>PVE 版本：7.1.7 &#x2F; 7.1.10</li><li>Linux 内核版本：5.15.17</li></ul><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p>[scode type&#x3D;”yellow”]在修改系统文件之前建议先备份。[&#x2F;scode]</p><ul><li>首先，使用 <code>ssh</code> 连接到 PVE 服务器</li><li><code>apt-get install lm-sensors</code></li><li><code>nano /usr/share/pve-manager/js/pvemanagerlib.js</code></li><li>按 Ctrl-W 搜索 <strong>repositoryStatus</strong></li><li>在图中位置输入下面的代码：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">&#123;<br>        itemId: &#x27;sensinfo&#x27;,<br>        colspan: 2,<br>        title: gettext(&#x27;温度&#x27;),<br>        textField: &#x27;sensinfo&#x27;,<br>        printBar: false, // 7.1.10 之后的版本必须添加，之前的版本不建议添加<br>        renderer:function(value) &#123;<br>                const p0 = value.match(/Package id 0.*?\+([\d\.]+)?/)[1];<br>                return `CPU 封装: $&#123;p0&#125;℃`<br>                &#125;<br>        &#125;,<br></code></pre></td></tr></table></figure><p><img src="https://cos.mbrjun.cn/IMGS/2022/02/18/pa.png"></p><ul><li>按 Ctrl+S 保存，然后打开后台<ul><li>如果能打开：按 Ctrl+X 退出，继续操作</li><li>如果打不开：检查一下你代码是否输入正确</li></ul></li><li><code>nano /usr/share/perl5/PVE/API2/Nodes.pm</code></li><li>按 Ctrl-W 搜索 <strong>bytes</strong></li><li>在图中位置输入下面的代码：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">$res-&gt;&#123;sensinfo&#125; = `sensors`;<br></code></pre></td></tr></table></figure><p><img src="https://cos.mbrjun.cn/IMGS/2022/02/18/by.png"></p><ul><li>按 Ctrl+S 保存</li><li><code>systemctl restart pveproxy</code></li><li>完成！</li></ul><h3 id="修改后主页截图"><a href="#修改后主页截图" class="headerlink" title="修改后主页截图"></a>修改后主页截图</h3><p><img src="https://cos.mbrjun.cn/IMGS/2022/02/18/ve.png"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> Linux </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> 虚拟化 </tag>
            
            <tag> 教程 </tag>
            
            <tag> OpenWrt </tag>
            
            <tag> 软路由 </tag>
            
            <tag> PVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenWrt / Hydrogen v2.0.0 / x86-64 固件发布</title>
      <link href="/archives/414/"/>
      <url>/archives/414/</url>
      
        <content type="html"><![CDATA[<h2 id="固件信息"><a href="#固件信息" class="headerlink" title="固件信息"></a>固件信息</h2><ul><li><a href="https://github.com/openwrt/openwrt">openwrt&#x2F;openwrt</a> master based</li><li>5.15 内核</li><li>镜像特性：squashfs、ext4、efi、rootfs</li><li>完整支持 IPv6</li><li>支持 TUN</li><li>覆盖大多数插件</li><li>支持 NVMe、eMMC、SCSI</li><li>支持非常见网卡、SR-IOV、内存热插拔</li><li>预装常用代理工具</li><li>压缩（xz、gz、lzo、lz4、zstd）</li></ul><span id="more"></span><h2 id="配置要求"><a href="#配置要求" class="headerlink" title="配置要求"></a>配置要求</h2><h3 id="最低要求"><a href="#最低要求" class="headerlink" title="最低要求"></a>最低要求</h3><p>CPU：1 核心<br>RAM：512 MB<br>磁盘：2GB</p><h2 id="默认配置"><a href="#默认配置" class="headerlink" title="默认配置"></a>默认配置</h2><table><thead><tr><th>键</th><th>值</th></tr></thead><tbody><tr><td>username</td><td>root</td></tr><tr><td>password</td><td><em>NONE</em></td></tr><tr><td>ip.br-lan</td><td>192.168.1.1&#x2F;24</td></tr></tbody></table><h2 id="获取固件"><a href="#获取固件" class="headerlink" title="获取固件"></a>获取固件</h2><table><thead><tr><th>版本</th><th>类型</th><th>大小</th><th>下载链接</th></tr></thead><tbody><tr><td>2.0.0</td><td>SHA-256 校验和</td><td>3.6 KB</td><td><a href="https://download.mbrjun.cn/%E5%88%B7%E6%9C%BA%E5%8C%85/OpenWrt%20LEDE/Hydrogen-ng/2.0.0/Hydrogen-2.0.0-all/sha256sums">查看</a></td></tr><tr><td>2.0.0</td><td>IMG 镜像</td><td>960.3 MB</td><td><a href="https://download.mbrjun.cn/%E5%88%B7%E6%9C%BA%E5%8C%85/OpenWrt%20LEDE/Hydrogen-ng/2.0.0/Hydrogen-2.0.0-all/hydrogen-2.0.0-r19839-6153c530cc-x86-64-generic-squashfs-combined-efi.img">下载</a></td></tr><tr><td>2.0.0</td><td>VMware Workstation 磁盘</td><td>162.8 MB</td><td><a href="https://download.mbrjun.cn/%E5%88%B7%E6%9C%BA%E5%8C%85/OpenWrt%20LEDE/Hydrogen-ng/2.0.0/Hydrogen-2.0.0-all/hydrogen-2.0.0-r19839-6153c530cc-x86-64-generic-squashfs-combined-efi.vmdk">下载</a></td></tr><tr><td>2.0.0</td><td>ROOTFS</td><td>768 MB</td><td><a href="https://download.mbrjun.cn/%E5%88%B7%E6%9C%BA%E5%8C%85/OpenWrt%20LEDE/Hydrogen-ng/2.0.0/Hydrogen-2.0.0-all/hydrogen-2.0.0-r19839-6153c530cc-x86-64-generic-squashfs-rootfs.img">下载</a></td></tr><tr><td>2.0.0</td><td>All TGZ</td><td>4.13 GB</td><td><a href="https://download.mbrjun.cn/%E5%88%B7%E6%9C%BA%E5%8C%85/OpenWrt%20LEDE/Hydrogen-ng/2.0.0/Hydrogen-2.0.0-all.tar.gz">下载</a></td></tr><tr><td>2.0.0</td><td>All T7Z</td><td>3.30 GB</td><td><a href="https://download.mbrjun.cn/%E5%88%B7%E6%9C%BA%E5%8C%85/OpenWrt%20LEDE/Hydrogen-ng/2.0.0/Hydrogen-2.0.0-all.tar.7z">下载</a></td></tr><tr><td>2.0.0</td><td>其他类型</td><td>11.4 GB total</td><td><a href="https://download.mbrjun.cn/%E5%88%B7%E6%9C%BA%E5%8C%85/OpenWrt%20LEDE/Hydrogen-ng/2.0.0/Hydrogen-2.0.0-all/">查看</a></td></tr></tbody></table><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>从 v2 开始，固件正常情况下每月更新一次并发布到此页面，文件上传至网盘的 Hydrogen-ng 目录<br><strong>跨版本不建议保留数据更新</strong></p><hr><table><thead><tr><th>版本</th><th>是否可保留数据</th><th>changelog</th></tr></thead><tbody><tr><td>2.0.0</td><td><strong>否</strong>（从 1.3.1）</td><td>内核：更新到 5.15.45</td></tr><tr><td></td><td></td><td>更新所有软件包</td></tr><tr><td></td><td></td><td>更改固件分发模式</td></tr><tr><td></td><td></td><td>更改软件源</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统 </tag>
            
            <tag> VMware </tag>
            
            <tag> 隐私 </tag>
            
            <tag> OpenWrt </tag>
            
            <tag> 软路由 </tag>
            
            <tag> 安全 </tag>
            
            <tag> LEDE </tag>
            
            <tag> 多拨 </tag>
            
            <tag> 去广告 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux systemd 可预测的网络接口名</title>
      <link href="/archives/413/"/>
      <url>/archives/413/</url>
      
        <content type="html"><![CDATA[<h2 id="“可预测的网络接口名”英文“Redictable-Network-Interface-Names”，简称“可预测接口名”英文“Redictable-Interface-Names”从systemd-v197-版本开始，systemd-udev-为所有的网络接口自动分配可预测，稳定的网络接口名（如：enp4s0d1v7）。"><a href="#“可预测的网络接口名”英文“Redictable-Network-Interface-Names”，简称“可预测接口名”英文“Redictable-Interface-Names”从systemd-v197-版本开始，systemd-udev-为所有的网络接口自动分配可预测，稳定的网络接口名（如：enp4s0d1v7）。" class="headerlink" title="“可预测的网络接口名”英文“Redictable Network Interface Names”，简称“可预测接口名”英文“Redictable Interface Names”从systemd v197 版本开始，systemd&#x2F;udev 为所有的网络接口自动分配可预测，稳定的网络接口名（如：enp4s0d1v7）。"></a>“可预测的网络接口名”英文“Redictable Network Interface Names”，简称“可预测接口名”英文“Redictable Interface Names”<br>从systemd v197 版本开始，systemd&#x2F;udev 为所有的网络接口自动分配可预测，稳定的网络接口名（如：enp4s0d1v7）。<br><span id="more"></span></h2><h3 id="为什么要开发可预测接口名"><a href="#为什么要开发可预测接口名" class="headerlink" title="为什么要开发可预测接口名"></a>为什么要开发可预测接口名</h3><p>传统的接口命名方式是内核driver在探测到所有的接口之后，简单的按照数字编号分配作为eth的后缀的方式命名（如：eth0）。如果你的机器具有多个接口，每次重启系统，网卡的接口名都有可能变化。现在有一个物理网卡的接口名是 eth0，重启主机后，接口名就有可能变成 eth1</p><p>在某些时候，网卡接口名不固定会出大问题，比如你正在配置链路聚合，但是你的多个网卡接口名每次重启都会变化，每次启动系统后，你都可能需要重新配置你的网络设置。又例如防火墙规则对不可预测的接口名非常敏感，接口名称改变会带来很大的安全隐患。</p><p>为了解决接口名变化的问题，udev 曾支持通过 MAC 地址来绑定接口名，但是仍然存在一些问题。例如虚拟化环境的 MAC 地址就不是固定的。最大的问题是用户空间和内核空间在分配名字上存在竞争。所以这种支持很快就被去掉了。<br>后来，“可预测的网络接口名”的出现彻底解决了这个问题。</p><h2 id="命名规则"><a href="#命名规则" class="headerlink" title="命名规则"></a>命名规则</h2><p>目前， systemd 有以下五种命名策略：</p><ul><li>传统的接口名  eth<em>X</em> 、wifi<em>X</em>……</li><li>固件、BIOS提供的不可插拔的板载设备，接口名 eno<em>X</em></li><li>固件、BIOS提供的 PCIe 可热插拔设备，接口名 ens<em>X</em></li><li>根据硬件物理&#x2F;地理地址，接口名 enp<em>X</em>s<em>Y</em>d<em>Z</em>v<em>M</em></li><li>根据硬件物理地址(MAC)，接口名 enx<em>FFFF0000AAAA</em></li></ul><p>最后一个策略不会被系统采用，除非用户手动选择，如果用户有自定义的 udev 规则，那么优先按照 udev 来执行。<br>通过阅读<a href="https://systemd.io/PREDICTABLE_INTERFACE_NAMES/">相关文档</a>和<a href="https://github.com/systemd/systemd/blob/main/src/udev/udev-builtin-net_id.c">源码</a>，我们可以了解具体的命名方式，我以的我一张双口洋垃圾网卡 NVIDIA Mellanox 342A 端口 2 的接口名来举例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">enp4s0d1v7<br>en - 前两个字母&quot;en&quot;说明这个接口是以太网接口<br>  p - PCI Bus 号，&quot;p4&quot;意味着这是我机器上的第四张网卡<br>    s - PCI Slot 号，大多数设备所有网卡都为 &quot;s0&quot;<br>      d - 设备端口号，&quot;d0&quot;意味着这是我这张网卡的第二个口<br>          第一个口呢？第一个口不存在该参数<br>        v - SR-IOV 虚拟功能(VF)编号，&quot;v7&quot;意味着这是该网口的第八个 VF<br></code></pre></td></tr></table></figure><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><p>接口名不会因为系统重启、硬件更改、系统更新而改变，在生产环境中这很棒！</p><h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><p>如果你的设备只有一个网口，你在对网口进行操作之前，你必须先查看网口的接口名，而不是使用 eth0</p><h2 id="如何启用-禁用"><a href="#如何启用-禁用" class="headerlink" title="如何启用&#x2F;禁用"></a>如何启用&#x2F;禁用</h2><h3 id="启用"><a href="#启用" class="headerlink" title="启用"></a>启用</h3><ul><li>确保<code>/etc/systemd/network/99-default.link</code>没有指向<code>/dev/null</code></li><li>确保没有使用<code>/etc/systemd/network/</code>中自定义的命名规则文件（扩展名为<code>.link</code>的文件）。</li><li>在<code>/etc/default/grup</code>配置文件中，参数<code>GRUB_CMDLINE_LINUX_DEFAULT=&quot;&quot;</code>中移除<code>net.ifnames=0</code></li><li><code>update-grub</code></li><li>重启设备</li></ul><h3 id="禁用"><a href="#禁用" class="headerlink" title="禁用"></a>禁用</h3><ul><li><code>ln -s /dev/null /etc/systemd/network/99-default.link</code></li><li>重启设备</li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 系统 </tag>
            
            <tag> 网络 </tag>
            
            <tag> 防火墙 </tag>
            
            <tag> 驱动 </tag>
            
            <tag> 软路由 </tag>
            
            <tag> 开源 </tag>
            
            <tag> 硬件 </tag>
            
            <tag> 内核 </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决 PVE 下虚拟机自动重启 / Kernel Panic</title>
      <link href="/archives/412/"/>
      <url>/archives/412/</url>
      
        <content type="html"><![CDATA[<h2 id="PVE，全称-Proxmox-Virtual-Environment，是一个开源的服务器虚拟化环境Linux发行版。但是由于配置错误，下面安装的虚拟机总是会自动重启，这种情况该如何解决呢？"><a href="#PVE，全称-Proxmox-Virtual-Environment，是一个开源的服务器虚拟化环境Linux发行版。但是由于配置错误，下面安装的虚拟机总是会自动重启，这种情况该如何解决呢？" class="headerlink" title="PVE，全称 Proxmox Virtual Environment，是一个开源的服务器虚拟化环境Linux发行版。但是由于配置错误，下面安装的虚拟机总是会自动重启，这种情况该如何解决呢？"></a>PVE，全称 <strong>P</strong>roxmox <strong>V</strong>irtual <strong>E</strong>nvironment，是一个开源的服务器虚拟化环境Linux发行版。但是由于配置错误，下面安装的虚拟机总是会自动重启，这种情况该如何解决呢？<br><span id="more"></span></h2><h3 id="关闭动态内存分配和-ROM-Bar"><a href="#关闭动态内存分配和-ROM-Bar" class="headerlink" title="关闭动态内存分配和 ROM-Bar"></a>关闭动态内存分配和 ROM-Bar</h3><p>首先确定你是否启用了硬件直通（PCIe &#x2F; SR-IOV），如果启用了，要关闭内存动态分配和 ROM-Bar，方法如下：</p><ul><li>进入PVE后台，找到你虚拟机的硬件设置</li><li>选中”内存”，点”编辑”(或者双击”内存”)<br><img src="https://cos.mbrjun.cn/IMGS/2022/02/15/ra.png"></li><li>勾选”高级”，把<strong>最小内存</strong>设置为与<strong>内存</strong>相同的大小，如果还不行，关闭 <strong>Ballooning 设备</strong>，保存<br><img src="https://cos.mbrjun.cn/IMGS/2022/02/15/av.png"></li><li>然后选择你 PCIe&#x2F;SR-IOV 直通的设备，点”编辑”</li><li>勾选”高级”，取消勾选”ROM-Bar”，保存<br><img src="https://cos.mbrjun.cn/IMGS/2022/02/15/ro.png"><ul><li>如果你直通了多个设备，请为每个设备都关闭 ROM-Bar</li></ul></li><li>完成后重启虚拟机</li></ul><hr><h2 id="关闭-ASPM"><a href="#关闭-ASPM" class="headerlink" title="关闭 ASPM"></a>关闭 ASPM</h2><p>如果已经关闭内存气球和 ROM-Bar，但还是莫名重启，请尝试关闭 ASPM，不同的设备关闭方法不一样，以我的设备为例：</p><ul><li>进入 BIOS(UEFI 固件设置)</li><li>Chipset</li><li>PCH-IO Configuration</li><li>PCI Express Configuration</li><li>DMI Link ASPM Control<ul><li>Disabled</li></ul></li><li>每一个 PCI Express Root Port (1&#x2F;2&#x2F;3&#x2F;4&#x2F;5)<ul><li>ASPM<ul><li>Disabled</li></ul></li></ul></li></ul><h2 id="关闭-NUMA"><a href="#关闭-NUMA" class="headerlink" title="关闭 NUMA"></a>关闭 NUMA</h2><p>关闭方法如图</p><p><img src="https://cos.mbrjun.cn/IMGS/2022/02/24/nu.png"></p><hr><p>以上是通用教程，适用于大多数虚拟机，针对特定虚拟机的解决方法请见进阶教程</p><p><a href="https://www.mbrjun.cn/archives/417">https://www.mbrjun.cn/archives/417</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
            <tag> OpenWrt </tag>
            
            <tag> 软路由 </tag>
            
            <tag> PVE </tag>
            
            <tag> 爱快 </tag>
            
            <tag> ikuai </tag>
            
            <tag> 直通 </tag>
            
            <tag> 网卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESXi 7.0 For RTL8168 定制版下载（带打包驱动教程）</title>
      <link href="/archives/410/"/>
      <url>/archives/410/</url>
      
        <content type="html"><![CDATA[<h2 id="本定制版为博主自用，如果不放心可以自己打包因为-ESXi-兼容的网卡大多数是服务器网卡，普通电脑的网卡是不兼容的，安装会报错，所以需要有带驱动的镜像才能正常使用-ESXi本文章的定制版适用于螃蟹-8168-千兆网卡"><a href="#本定制版为博主自用，如果不放心可以自己打包因为-ESXi-兼容的网卡大多数是服务器网卡，普通电脑的网卡是不兼容的，安装会报错，所以需要有带驱动的镜像才能正常使用-ESXi本文章的定制版适用于螃蟹-8168-千兆网卡" class="headerlink" title="本定制版为博主自用，如果不放心可以自己打包因为 ESXi 兼容的网卡大多数是服务器网卡，普通电脑的网卡是不兼容的，安装会报错，所以需要有带驱动的镜像才能正常使用 ESXi本文章的定制版适用于螃蟹 8168 千兆网卡"></a>本定制版为博主自用，如果不放心可以自己打包<br>因为 ESXi 兼容的网卡大多数是服务器网卡，普通电脑的网卡是不兼容的，安装会报错，所以需要有带驱动的镜像才能正常使用 ESXi<br>本文章的定制版适用于螃蟹 8168 千兆网卡<br><span id="more"></span></h2><p>下载链接：<a href="https://download.mbrjun.cn/%E5%88%B7%E6%9C%BA%E5%8C%85/ESXi/ESXi-7.0U3c-19035710-RTL8168.iso">https://download.mbrjun.cn/%E5%88%B7%E6%9C%BA%E5%8C%85/ESXi/ESXi-7.0U3c-19035710-RTL8168.iso</a></p><h4 id="怎么在-Windows-查看我的网卡型号？"><a href="#怎么在-Windows-查看我的网卡型号？" class="headerlink" title="怎么在 Windows 查看我的网卡型号？"></a>怎么在 Windows 查看我的网卡型号？</h4><p><img src="https://cos.mbrjun.cn/IMGS/2021/12/81.png" alt="RTL8168 在设备管理器中"><br>右键开始菜单，选择<strong>设备管理器</strong>，点击网络适配器左侧的箭头，然后右键点击你的网卡，选择<strong>属性</strong><br>在弹出窗口中找到并点击<strong>事件</strong>，找到下面的PCI ID 中的网卡型号<br>PCI ID <em>\VEN_10EC&amp;DEV_<strong>8168</strong>&amp;SUBSYS_09591028&amp;REV_15\4&amp;f08b0c3&amp;0&amp;00E8</em> 中加粗的 8168 就是网卡型号</p><hr><h2 id="打包驱动教程"><a href="#打包驱动教程" class="headerlink" title="打包驱动教程"></a>打包驱动教程</h2><h3 id="打包前准备"><a href="#打包前准备" class="headerlink" title="打包前准备"></a>打包前准备</h3><ul><li>ESXi 离线镜像（<a href="https://customerconnect.vmware.com/en/group/vmware/evalcenter?p=free-esxi7">点击跳转到下载页面</a>，登录，找到 Offline Bundle ，点击右边的下载）</li><li>螃蟹 8168 网卡驱动，VIB 格式（<a href="http://vibsdepot.v-front.de/depot/RTL/net55-r8168/net55-r8168-8.045a-napi.x86_64.vib">点击下载</a>）</li><li>打包脚本（<a href="https://vibsdepot.v-front.de/tools/ESXi-Customizer-PS-v2.6.0.ps1">点击下载</a>）</li><li>一台能正常上网的电脑，Windows 7 或更高版本</li></ul><h3 id="正式教程"><a href="#正式教程" class="headerlink" title="正式教程"></a>正式教程</h3><p>首先把刚才下载的离线安装包和驱动复制到一个文件夹<br><img src="https://cos.mbrjun.cn/IMGS/2021/12/ex.png" alt="文件夹截图"></p><p>打开 Powershell（管理员），运行下面的命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">Install-Module -Name VMware.PowerCLI<br></code></pre></td></tr></table></figure><p>然后 Powershell 提示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">需要使用 NuGet 提供程序来继续操作                                                                                       PowerShellGet 需要使用 NuGet 提供程序“2.8.5.201”或更高版本来与基于 NuGet 的存储库交互。必须在“C:\Program                Files\PackageManagement\ProviderAssemblies”或“C:\Users\MBR\AppData\Local\PackageManagement\ProviderAssemblies”中提       提供程序。也可以通过运行 &#x27;Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force&#x27; 安装 NuGet             提供程序。是否要让 PowerShellGet 立即安装并导入 NuGet 提供程序?<br>[Y] 是(Y)  [N] 否(N)  [S] 暂停(S)  [?] 帮助 (默认值为“Y”):<br></code></pre></td></tr></table></figure><p>回答 Y，回车，Powershell 又会提示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">不受信任的存储库<br>你正在从不受信任的存储库安装模块。如果你信任该存储库，请通过运行 Set-PSRepository cmdlet 更改其 InstallationPolicy<br>值。是否确实要从“PSGallery”安装模块?<br>[Y] 是(Y)  [A] 全是(A)  [N] 否(N)  [L] 全否(L)  [S] 暂停(S)  [?] 帮助 (默认值为“N”):<br></code></pre></td></tr></table></figure><p>回答 A，回车<br><img src="https://cos.mbrjun.cn/IMGS/2021/12/PS.png" alt="终端截图"><br>等待一段时间后，命令结束，打开开始时创建的文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">cd &quot;E:\MBR\Downloads\ESXi-R8168&quot;<br></code></pre></td></tr></table></figure><p>执行我们的脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">.\ESXi-Customizer-PS-v2.6.0.ps1<br></code></pre></td></tr></table></figure><p>保持网络稳定，静等即可，整个过程大概要 15 分钟。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> Intel </tag>
            
            <tag> 驱动 </tag>
            
            <tag> ESXi </tag>
            
            <tag> 软路由 </tag>
            
            <tag> Realtek </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>收集的一些10GB测速文件地址</title>
      <link href="/archives/408/"/>
      <url>/archives/408/</url>
      
        <content type="html"><![CDATA[<p>服务器带宽太大，没有10G的大文件测速怎么办？公布一些博主收集来的测速地址。</p><span id="more"></span><p>10G测速文件地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">https://www.leaseweb.com/platform/network<br>阿姆斯特丹AMS-01数据中心<br>http://mirror.nl.leaseweb.net/speedtest/10000mb.bin<br>达拉斯DAL-10数据中心<br>http://mirror.dal10.us.leaseweb.net/speedtest/10000mb.bin<br>香港HKG-10数据中心<br>http://mirror.hk.leaseweb.net/speedtest/10000mb.bin<br>旧金山SFO-12数据中心<br>http://mirror.sfo12.us.leaseweb.net/speedtest/10000mb.bin<br>美因河畔法兰克福FRA-10数据中心<br>http://mirror.de.leaseweb.net/speedtest/10000mb.bin<br>悉尼SYD-10数据中心<br>http://mirror.syd10.au.leaseweb.net/speedtest/10000mb.bin<br>华盛顿WDC-01数据中心<br>http://mirror.wdc1.us.leaseweb.net/speedtest/10000mb.bin<br>华盛顿WDC-02数据中心<br>http://mirror.wdc1.us.leaseweb.net/speedtest/10000mb.bin<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">hetztner德国（https://speed.hetzner.de/）：<br>https://speed.hetzner.de/10GB.bin<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">http://proof.ovh.net/files/<br>ovh法国：<br>http://proof.ovh.net/files/10Gio.dat<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">https://www.fdcservers.net/looking-glass<br>新加坡：<br>http://lg-sin.fdcservers.net/10GBtest.zip<br>日本东京：<br>http://lg-tok.fdcservers.net/10GBtest.zip<br>香港：<br>http://lg-hkg.fdcservers.net/10GBtest.zip<br>亚特兰大：<br>http://lg-atl.fdcservers.net/10GBtest.zip<br>芝加哥：<br>http://lg-chie.fdcservers.net/10GBtest.zip<br>丹佛：<br>http://lg-dene.fdcservers.net/10GBtest.zip<br>休斯顿：<br>http://lg-hou.fdcservers.net/10GBtest.zip<br>洛杉矶：<br>http://lg-lax.fdcservers.net/10GBtest.zip<br>迈阿密：<br>http://lg-mia.fdcservers.net/10GBtest.zip<br>明尼苏达州：<br>http://lg-minn.fdcservers.net/10GBtest.zip<br>纽约：<br>http://lg-nyc.fdcservers.net/10GBtest.zip<br>西雅图：<br>http://lg-sea.fdcservers.net/10GBtest.zip<br>多伦多（加拿大）：<br>http://lg-tor.fdcservers.net/10GBtest.zip<br>巴西圣保罗：<br>http://lg-spb.fdcservers.net/10GBtest.zip<br>荷兰阿姆斯特丹：<br>http://lg-ams.fdcservers.net/10GBtest.zip<br>爱尔兰都柏林：<br>http://lg-dub.fdcservers.net/10GBtest.zip<br>德国法兰克福：<br>http://lg-fra.fdcservers.net/10GBtest.zip<br>芬兰赫尔辛基：<br>http://lg-hel.fdcservers.net/10GBtest.zip<br>乌克兰基辅：<br>http://lg-kie.fdcservers.net/10GBtest.zip<br>葡萄牙里斯本：<br>http://lg-lis.fdcservers.net/10GBtest.zip<br>英国伦敦：<br>http://lg-lon.fdcservers.net/10GBtest.zip<br>西班牙马德里：<br>http://lg-mad.fdcservers.net/10GBtest.zip<br>法国巴黎：<br>http://lg-par2.fdcservers.net/10GBtest.zip<br>保加利亚索非亚<br>http://lg-sof.fdcservers.net/10GBtest.zip<br>芬兰斯德哥尔摩：<br>http://lg-sto.fdcservers.net/10GBtest.zip<br>奥地利维也纳：<br>http://lg-vie.fdcservers.net/10GBtest.zip<br>波兰华沙：<br>http://lg-war.fdcservers.net/10GBtest.zip<br>瑞士苏黎世：<br>http://lg-zur.fdcservers.net/10GBtest.zip<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">https://www.turnkeyinternet.net/speed-test/<br>turnkeyinternet加利福尼亚：<br>http://speedtest-ca.turnkeyinternet.net/10000mb.bin<br>turnkeyinternet纽约：<br>http://speedtest-ny.turnkeyinternet.net/10000mb.bin<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">https://www.hostwinds.com/company/datacenters<br>hostwinds西雅图：<br>http://sea-repo.hostwinds.net/tests/10gb.zip<br>hostwinds达拉斯：<br>http://dal-repo.hostwinds.net/tests/10gb.zip<br>hostwinds阿姆斯特丹：<br>http://ams-repo.hostwinds.net/tests/10gb.zip<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">http://speedtest.tele2.net/<br>tele2克罗地亚，萨格勒布<br>http://zgb-speedtest-1.tele2.net/10GB.zip<br>http://zgb-speedtest-1.tele2.net/50GB.zip<br>http://zgb-speedtest-1.tele2.net/100GB.zip<br>http://zgb-speedtest-1.tele2.net/1000GB.zip<br>tele2德国，法兰克福<br>http://fra36-speedtest-1.tele2.net/10GB.zip<br>http://fra36-speedtest-1.tele2.net/50GB.zip<br>http://fra36-speedtest-1.tele2.net/100GB.zip<br>http://fra36-speedtest-1.tele2.net/1000GB.zip<br>tele2拉脱维亚，里加<br>http://bks4-speedtest-1.tele2.net/10GB.zip<br>http://bks4-speedtest-1.tele2.net/50GB.zip<br>http://bks4-speedtest-1.tele2.net/100GB.zip<br>http://bks4-speedtest-1.tele2.net/1000GB.zip<br>tele2立陶宛，维尔纽斯<br>http://vln038-speedtest-1.tele2.net/10GB.zip<br>http://vln038-speedtest-1.tele2.net/50GB.zip<br>http://vln038-speedtest-1.tele2.net/100GB.zip<br>http://vln038-speedtest-1.tele2.net/1000GB.zip<br>tele2荷兰，阿姆斯特丹<br>http://ams-speedtest-1.tele2.net/10GB.zip<br>http://ams-speedtest-1.tele2.net/50GB.zip<br>http://ams-speedtest-1.tele2.net/100GB.zip<br>http://ams-speedtest-1.tele2.net/1000GB.zip<br>tele2瑞典，哥德堡<br>http://bck-speedtest-1.tele2.net/10GB.zip<br>http://bck-speedtest-1.tele2.net/50GB.zip<br>http://bck-speedtest-1.tele2.net/100GB.zip<br></code></pre></td></tr></table></figure><p>转自 <a href="https://www.zhujizixun.com/4113.html">https://www.zhujizixun.com/4113.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> 宽带 </tag>
            
            <tag> 网速 </tag>
            
            <tag> 测速 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 Windows 使用全锥形(FullCone)NAT</title>
      <link href="/archives/407/"/>
      <url>/archives/407/</url>
      
        <content type="html"><![CDATA[<p>使用全锥形 NAT 可以有效提升游戏体验<br><img src="https://cos.mbrjun.cn/IMGS/2021/09/04/fcn.svg"></p><span id="more"></span><p>测试NAT类型可以选择下面的工具：<br>NAT类型测试工具：<a href="https://t.me/MBRFans/157">点击下载（大陆屏蔽）</a></p><hr><h2 id="自带测试"><a href="#自带测试" class="headerlink" title="自带测试"></a>自带测试</h2><p>Windows 10可以尝试在设置-游戏中测试<br>Windows 11可以尝试在 Xbox 主机小帮手中测试</p><hr><p>使用扔的工具测试出的结果会是四类NAT之一：<br><strong>完全圆锥型NAT</strong> （Full cone NAT），即一对一（one-to-one）NAT</p><ul><li>一旦内部地址（iAddr:iPort）映射到外部地址（eAddr:ePort），所有发自 iAddr:iPort 的数据包都经由 eAddr:ePort 向外发送。</li><li>任意外部主机都能经由发送数据包给 eAddr:ePort 到达 iAddr:iPort。</li></ul><p><strong>受限圆锥型NAT</strong> （（Address-）Restricted cone NAT）</p><ul><li>一旦内部地址（iAddr:iPort）映射到外部地址（eAddr:ePort），所有发自 iAddr:iPort 的数据包都经由 eAddr:ePort 向外发送。</li><li>唯 iAddr:iPort 曾经发送数据包到外部主机（nAddr:any），外部主机才能经由发送数据包给 eAddr:ePort 到达 iAddr:iPort。（注：any 指外部主机源端口不受限制。）</li></ul><p><strong>端口受限圆锥型NAT</strong> （Port-Restricted cone NAT）类似受限制锥形NAT（<strong>Restricted cone NAT</strong> ），但是还有端口限制。</p><ul><li>一旦内部地址（iAddr:iPort）映射到外部地址（eAddr:ePort），所有发自 iAddr:iPort 的数据包都经由 eAddr:ePort 向外发送。</li><li>在<strong>受限圆锥型NAT</strong> 基础上增加了外部主机源端口必须是固定的。</li></ul><p><strong>对称NAT</strong> （Symmetric NAT）</p><ul><li>每一个来自相同内部 IP 与端口，到一个特定目的地 IP 和端口的请求，都映射到一个独特的外部 IP 和端口。同一内部 IP 与端口发到不同的目的地和端口的信息包，都使用不同的映射</li><li>只有曾经收到过内部主机数据的外部主机，才能够把数据包发回</li></ul><p>此部分内容转自<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2">维基百科，点击查看（大陆可能不能访问）</a></p><p><strong>完全圆锥型NAT</strong> （Full cone NAT）简称全锥形，最宽松<br><strong>对称NAT</strong> （Symmetric NAT）最严格</p><hr><p>如果你的测试结果非全锥形，你需要检查路由器配置和电脑防火墙</p><h2 id="路由器配置"><a href="#路由器配置" class="headerlink" title="路由器配置"></a>路由器配置</h2><p>如果你的路由器提供了类似设置，你需要把他打开<br><img src="https://cos.mbrjun.cn/IMGS/2021/09/04/fn.png" alt="  "><br>如果不支持，你需要尝试设置 <strong>DMZ</strong><br>如果无DMZ，你需要尝试设置<strong>端口转发</strong><br>端口转发配置：外部区域&#x3D;wan 内部区域&#x3D;lan 内部主机&#x3D;你的主机 协议&#x3D;TCP+UDP</p><h2 id="防火墙配置"><a href="#防火墙配置" class="headerlink" title="防火墙配置"></a>防火墙配置</h2><p>由于Windows有防火墙，测试时你可以关掉<br>请打开 <strong>控制面板\系统和安全\Windows Defender 防火墙</strong>，选择 <strong>启用或关闭 Windows Defender 防火墙</strong>，选择<strong>关闭</strong></p><h2 id="拨号配置"><a href="#拨号配置" class="headerlink" title="拨号配置"></a>拨号配置</h2><p>可以尝试下电脑插网线到光猫，然后让电脑拨号</p>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NAT </tag>
            
            <tag> 网络 </tag>
            
            <tag> 网络地址转换 </tag>
            
            <tag> 防火墙 </tag>
            
            <tag> OpenWrt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>孩子沉迷手机，真相竟然是</title>
      <link href="/archives/405/"/>
      <url>/archives/405/</url>
      
        <content type="html"><![CDATA[<p>九月四日，王女士向我社反应，自己的孩子小王一到周末就玩手机，每天都盯着一个黑色界面看一下午。我社记者随即安排进入调查。</p><p>据了解，小王受网络“游戏”圈子里的网友教唆，正在用一款叫“Premiere Pro”的软件。</p><span id="more"></span><p>但接下来，令人触目惊心的真相露出了。记者在网上调查，发现“Premiere Pro” 竟是付费软件，且费用高达令人膛目结舌的每月120人民币。看到这里，王女士都要晕过去了</p><p>小王说道，他的同学每个人都有Premiere Pro，他们没有未成年识别，没有防沉迷机制，没有消费限制，很多用户会把一整天的消费开支投入其中，对青少年的坏影响不可估量。</p><p>目前，我社正准备与王女士一同将此家软件的状况举报，以响应国家的防沉迷号召</p><hr><p>孩子沉迷电脑，真相竟然是</p><p>九月四日，王女士向我社反应，自己的孩子小王一到周末就玩电脑，每天都盯着一个白色界面看一下午，而且手机时不时响起支付宝到账的声音。我社记者随即安排进入调查。</p><p>据了解，小王受网络“挖矿”圈子里的网友教唆，正在玩一款叫“C3Pool”的游戏。</p><p>但接下来，令人触目惊心的真相露出了。记者在网上调查，发现“C3Pool” 是免费游戏，但需要高价CPU显卡，目前主流挖矿显卡RTX3090价格高达令人膛目结舌的15999人民币、CPU i9-11900KF高达4000人民币。看到这里，王女士都要晕过去了</p><p>小王说道，他的同学每个人都有两三款挖矿软件，他们没有未成年识别，没有防沉迷机制，没有消费限制，很多用户会把一整天的时间投入其中，对青少年的坏影响不可估量。</p><p>目前，我社正准备与王女士一同将此家软件的状况举报，以响应国家的防沉迷号召</p><hr><p>孩子沉迷电脑，真相竟然是</p><p>九月四日，王女士向我社反应，自己的孩子小王一到周末就玩电脑，每天都盯着电脑看一下午，而且电脑时不时发出很大的噪音。我社记者随即安排进入调查。</p><p>据了解，小王受网络“虚拟机”圈子里的网友教唆，正在玩一款叫“Parallels Desktop”的游戏。</p><p>但接下来，令人触目惊心的真相露出了。记者在网上调查，发现“Parallels Desktop” 是付费游戏，最新款Parallels Desktop 16 Pro价格高达令人膛目结舌的698人民币每年。看到这里，王女士都要晕过去了</p><p>小王说道，他的同学每个人都有两三款虚拟机软件，他们没有未成年识别，没有防沉迷机制，没有消费限制，很多用户会把一整天的时间投入其中，对青少年的坏影响不可估量。</p><p>目前，我社正准备与王女士一同将此家软件的状况举报，以响应国家的防沉迷号召</p><hr><p>九月四日，王女士向我社反应，自己的孩子小王一到周末就玩手机，每天都盯着一个白色界面看一下午。我社记者随即安排进入调查。</p><p>据了解，小王受网络“游戏”圈子里的网友教唆，正在用一款叫“ Intellij IDEA”的软件。</p><p>但接下来，令人触目惊心的真相露出了。记者在网上调查，发现“Intellij IDEA” 竟是付费软件，且费用高达令人膛目结舌的每月299.4人民币。看到这里，王女士都要晕过去了</p><p>小王说道，他的同学每个人都有Intellij IDEA，他们没有未成年识别，没有防沉迷机制，没有消费限制，很多用户会把一整天的消费开支投入其中，对青少年的坏影响不可估量。</p><p>目前，我社正准备与王女士一同将此家软件的状况举报，以响应国家的防沉迷号召</p><hr><p>九月四日，王女士向我社反应，自己的孩子小王一到周末就玩电脑，每天都盯着一个黑色界面看一下午。我社记者随即安排进入调查。</p><p>据了解，小王受网络“游戏”圈子里的网友教唆，正在用一款叫“Visual Studio”的软件。</p><p>但接下来，令人触目惊心的真相露出了。记者在网上调查，发现“Visual Studio” 竟是付费软件，且费用高达令人膛目结舌的每月120人民币。看到这里，王女士都要晕过去了</p><p>小王说道，他的同学每个人都有Visual Studio，他们没有未成年识别，没有防沉迷机制，没有消费限制，很多用户会把一整天的消费开支投入其中，对青少年的坏影响不可估量。</p><p>目前，我社正准备与王女士一同将此家软件的状况举报，以响应国家的防沉迷号召</p><hr><p>九月四日，王女士向我社反应，自己的孩子小王一到周末就玩手机，每天都盯着一个黑色界面看一下午。我社记者随即安排进入调查。</p><p>据了解，小王受网络“游戏”圈子里的网友教唆，正在用一款叫“GitHub”的软件。</p><p>但接下来，令人触目惊心的真相露出了。记者在网上调查，发现“GitHub” 竟是付费软件，且费用高达令人膛目结舌的每月30人民币。看到这里，王女士都要晕过去了</p><p>小王说道，他的同学每个人都有GitHub Pro Plan，他们没有未成年识别，没有防沉迷机制，没有消费限制，很多用户会把一整天的消费开支投入其中，对青少年的坏影响不可估量。</p><hr><p>九月四日，王女士向我社反应，自己的孩子小王一到周末就玩手机，每天都盯着一个黑色界面看一下午。我社记者随即安排进入调查。</p><p>据了解，小王受网络“炸鸡”圈子里的网友教唆，正在用一款叫“DJI Fly”的软件。</p><p>但接下来，令人触目惊心的真相露出了。记者在网上调查，发现“DJI Fly” 虽是免费软件，但其最低价配套设备竟高达2400rmb，远高于市面上几十块的设备。看到这里，王女士都要晕过去了</p><p>小王说道，他的同学每个人都有DJI Fly，他们没有未成年识别，没有防沉迷机制，没有消费限制，很多用户会把一整天的消费开支投入其中，对青少年的坏影响不可估量。</p><p>目前，我社正准备与王女士一同将此家软件的状况举报，以响应国家的防沉迷号召</p><hr><p>九月四日，王女士向我社反应，自己的孩子小王一到周末就玩手机，每天都盯着一个黑色界面看一下午。我社记者随即安排进入调查。</p><p>据了解，小王受网络“游戏”圈子里的网友教唆，正在用一款叫“OpenSSH SSH Client”的软件。</p><p>但接下来，令人触目惊心的真相露出了。记者在网上调查，发现“OpenSSH SSH Client” 虽是免费软件，但其配套设备达到令人瞠目结舌的408元&#x2F;年，价格还会随青少年购买的套餐向上变动。看到这里，王女士都要晕过去了</p><p>小王说道，他的同学每个人都有OpenSSH SSH Client，他们没有未成年识别，没有防沉迷机制，没有消费限制，很多用户会把一整天的消费开支投入其中，对青少年的坏影响不可估量。</p><p>目前，我社正准备与王女士一同将此家软件的状况举报，以响应国家的防沉迷号召</p><hr><p>以上内容纯属瞎编，请勿当真！</p>]]></content>
      
      
      <categories>
          
          <category> 生活日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏 </tag>
            
            <tag> 腾讯 </tag>
            
            <tag> 防沉迷 </tag>
            
            <tag> 游戏沉迷 </tag>
            
            <tag> 网易 </tag>
            
            <tag> 王者荣耀 </tag>
            
            <tag> 法规 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对小米MIUI、内测机制的一些看法</title>
      <link href="/archives/403/"/>
      <url>/archives/403/</url>
      
        <content type="html"><![CDATA[<p>就一骂小米的文章</p><span id="more"></span><p>个人认为最近MIUI的问题明显增多，从软件上的Bug增加，到硬件上的设计缺陷（11，主板）都出现了很大问题</p><h2 id="MIUI"><a href="#MIUI" class="headerlink" title="MIUI"></a>MIUI</h2><p>首先要说说MIUI本身的问题：<br>从MIUI11开始，优化没有之前好，Bug数量出现了提升，不过也并不明显，大部分也不影响使用体验。MIUI12刚刚更新后，内测版和开发板大量出现卡顿掉帧以及Bug，但是毕竟是内测，出现Bug和卡顿比较正常<br>然后就出现好玩的了：<br>MIUI12<strong>稳定版</strong>，Bug依然很多，没有修复很多Bug，仍然出现卡顿和掉帧，甚至有些应用锁帧</p><hr><p>我在B站上创建了一个收藏夹，用来收录小米的Bug，本文章发布时收录了3500个<br>我的B站@MBRjun<br>同时推荐@绝地车神鸡哥 的收藏夹</p><hr><p>MIUI12发布一段时间后，小米推出了「MIUI12.5」，我本以为能多修复点Bug，然而实际情况是问题更多，现在小米又推出了「增强版」，我认为增强版的更新内容重点是修复Bug，而不是新功能</p><h2 id="稳定版"><a href="#稳定版" class="headerlink" title="稳定版"></a>稳定版</h2><p>顾名思义，稳定版以<strong>稳定</strong>为主<br>什么是稳定？</p><ul><li>尽可能减少Bug</li><li>不能有严重影响体验的问题</li></ul><p>稳定版更新速度慢是因为问题少，没有什么可以更新的。<br>而MIUI现在稳定版问题是很多的，这种时候不应该更新速度慢，而应该积极的修复Bug<br>小米不更新稳定版，所有内容都推送到开发版，因此造成了一个问题<br>「开发版平均使用体验比稳定版高」<br>我的建议：提高稳定版更新频率</p><h2 id="小米社区"><a href="#小米社区" class="headerlink" title="小米社区"></a>小米社区</h2><p>小米论坛改为小米社区后，社区风气出现了很大的问题<br>原本小米论坛是技术讨论性质的，大多数是什么内容呢？</p><ul><li>ROM</li><li>刷机</li><li>搞机教程</li></ul><p>近两年MIUI做的越来越好（今年除外），搞机人数也在变少<br>小米论坛改为小米社区后，大量普通用户和小白进入，和原来小米论坛成员聊的内容有时有矛盾<br>还有一点是社区管理人员：<br>有的人，反馈问题，给大家分享稳定版刷机包，竟然能永久封号</p><h2 id="开发版、内测版、内测机制"><a href="#开发版、内测版、内测机制" class="headerlink" title="开发版、内测版、内测机制"></a>开发版、内测版、内测机制</h2><p>首先普及一下概念</p><h4 id="小米社区内的稳定版公测："><a href="#小米社区内的稳定版公测：" class="headerlink" title="小米社区内的稳定版公测："></a>小米社区内的稳定版公测：</h4><p>只是提前发布的稳定版，如果发现影响使用体验的问题，本周期稳定版不会发布，本版本系统内显示为稳定版</p><h4 id="小米社区内的开发版公测"><a href="#小米社区内的开发版公测" class="headerlink" title="小米社区内的开发版公测"></a>小米社区内的开发版公测</h4><p>开发版公测系统内显示<strong>开发版</strong>，通常称为开发版<br>这个版本曾经是开放卡刷包下载的（在 miui.com ），现在开发版已经不公开更新了<br>本版本允许有一定量的问题和Bug，这个版本是给「追求新功能和一定的稳定」的用户<br>本版本正常情况下，每周五更新</p><h4 id="小米社区的开发版内测"><a href="#小米社区的开发版内测" class="headerlink" title="小米社区的开发版内测"></a>小米社区的开发版内测</h4><p>开发版内测系统内显示为<strong>开发版或内测版</strong><br>这个版本的更新是需要申请的，曾经申请非常简单，是没有任何限制的<br>本版本是给「追求新功能可以放弃稳定」的用户的，这些用户通常是了解刷机、救砖操作的，出现了问题也是会发的<br>本版本大多数情况下每周更新四次，周一到周四</p><ul><li>周一到周三：系统内显示<strong>内测版</strong></li><li>周四：系统内显示<strong>开发版</strong></li><li>如果周四的版本没有问题，周五推送到开发版</li></ul><h4 id="旧的内测机制"><a href="#旧的内测机制" class="headerlink" title="旧的内测机制"></a>旧的内测机制</h4><p>开发版直接下载刷机包，内测版直接申请，对这个内测机制我是比较满意的</p><h4 id="新的内测机制"><a href="#新的内测机制" class="headerlink" title="新的内测机制"></a>新的内测机制</h4><p>最近一年，小米多次修改内测机制，目前的内测机制如下：</p><ul><li>官网不再提供刷机包下载</li><li>开发版和内测版都需要申请</li><li>内测版有KPI考核</li></ul><p>可以对比看下其他大厂内测机制：<br>水果：下载描述文件测试，条款已经警告你这个版本不稳定<br>鸽子：申请或者下载刷机包，条款已经警告你这个版本不稳定<br>切苹果：分为Log版和无Log版，其中后者能自动抓取Log</p><p>个人认为小米做这些就是希望获取到免费劳动力，让用户给小米打工，毕竟咱们都知道小米开发人员的收入有多低</p><h2 id="金凡"><a href="#金凡" class="headerlink" title="金凡"></a>金凡</h2><p>如果你想骂MIUI本身，可以骂他<br>但是小米社区内测和小米社区问题，不能骂他<br>小米社区的运行主要是大李同学和小米浩子同学<br>要冲就冲他俩喽</p><h2 id="雷总微博"><a href="#雷总微博" class="headerlink" title="雷总微博"></a>雷总微博</h2><p>最近雷总发送了一条微博：<br>小米手机销量超苹果,晋升全球第二。不可思议的是,网上居然出现一些冷嘲热讽的声音,不可理喻!</p><p>冷嘲热讽其实并不是对着销量的，而且对着MIUI</p><h2 id="一些圣经和三字经"><a href="#一些圣经和三字经" class="headerlink" title="一些圣经和三字经"></a>一些圣经和三字经</h2><h3 id="小米为什么是神？"><a href="#小米为什么是神？" class="headerlink" title="小米为什么是神？"></a>小米为什么是神？</h3><p>小米为什么是神？<br>在讨论这个问题之前，我想先说说其他手机相较于小米究竟差在了哪里。</p><p>首先是犯下傲慢之罪的华为，自主设计个芯片就露出不屑的笑，这种傲慢的品牌注定走不长远，事实也是如此，靠着一个自研的鸿蒙赢了神之后就一直在走下坡路，最终泯然众人。与之相比神就很谦卑，MIUI的bug，888的烧WiFi，神不是不会优化，只是不想通过太完美的表现让友商绝望，所以故意不优化，可笑有些人不理解神的良苦用心，竟然还用这些事来讥讽神，这些人简直不可理喻。</p><h2 id="米冲高（双语）"><a href="#米冲高（双语）" class="headerlink" title="米冲高（双语）"></a>米冲高（双语）</h2><p>这段圣经原本出自小米11的评价，被网友压缩成了下面的三字经<br>Mi Chong Gao, the key year, small problems, restart solution, no more, go to after-sales, try to be patient, keep quiet, don’t grab handle, still not good, hat, Chinese Navy, black I rice, can light up the screen, want what car，ceo lei，make no money，create mi phone，Mi failed，could you， afford smart phone？？米冲高，关键年，小毛病，重启解，再不行，去售后，若还是，没解决，小问题，忍一忍，又不是，不能用，很多人，都一样，也就你，拍视频，瞎比比，反正我，用开心，那是你，不会用，这配置，这价格，不能要，自行车，雷总他，不赚钱，做手机，米倒了，你还能，用的起，智能机？？</p><h2 id="米冲高-加长版-Extend"><a href="#米冲高-加长版-Extend" class="headerlink" title="米冲高 加长版 Extend"></a>米冲高 加长版 Extend</h2><p>米冲高，关键年，小毛病，重启解，再不行，去售后，若还是，没解决，小问题，忍一忍，又不是，不能用，很多人，都一样，也就你，拍视频，瞎比比，反正我，用开心，那是你，不会用，这配置，这价格，不能要，自行车，雷总他，不赚钱，做手机，米倒了，你还能，用的起，智能机？[doge]雷善人，糇感动，米拆机，样样有，不偷工，不减料，猴见了，哇哇叫，米堆料，真良心，[嗑瓜子]电容残，射频缺，nxp无，频段少，增压芯，防滚架，芯片胶，样样少！米良心，猴不信，拆机的，不骗我！卖六千，要啥车[大笑]，烧主板，烧WIFI，断触流，真良心，阴阳屏，比果好[惊喜]米堆料，太强了，三星也，比不上[大笑]米欲高，年关键。待推新，重启解。此价位，求何车？仍不行，去售后。尽量忍，勿声张。免抓柄，脑有病？你声张，我就告，你不买，我就跳，蓝绿顺，我就黑，黑不动，再挑拨，没技术，买专利，没热点，疯狂蹭，我没有，不成熟，你没有，黑科技，怎么low，怎么来，驯猴术，独门技，高级猴，去迪拜，普通猴，靠崇拜。你不要，卖给我，我包邮，五块五，友出新，懂都懂，哄蒙UI，骗国人，米柚远，超鸿蒙，无bug，品质好，友商是，智商税，买了就，是恼蝉，你们不，懂手机，买小米，才懂机，米厚道，真良心，雷善人，糇感动，没货是，你的错，bug是，不会用，才这价，要啥车？要售后？想屁吃</p><hr><p>结尾附带<br>刷机包下载网站，可用于偷渡和刷机：xiaomirom.com</p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bug </tag>
            
            <tag> 小米 </tag>
            
            <tag> MIUI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS 12 Monterey 黑苹果教程/注意事项</title>
      <link href="/archives/400/"/>
      <url>/archives/400/</url>
      
        <content type="html"><![CDATA[<p>目前macOS12是预览版，首先如果想要收到预览版推送需要去<a href="https://developer.apple.com/">官网注册</a><br>官网注册的教程就不说了，注册完成后，系统更新直接就会推送，镜像大概在15GB左右</p><span id="more"></span><h2 id="第-1-阶段：安装镜像"><a href="#第-1-阶段：安装镜像" class="headerlink" title="第 1 阶段：安装镜像"></a>第 1 阶段：安装镜像</h2><p>系统偏好设置-系统更新里面下载好就可以开始安装了<br><img src="https://cos.mbrjun.cn/IMGS/2021/07/09/AF.jpg" alt="  "><br>安装后直接重启</p><h2 id="第-2-阶段：应用更新"><a href="#第-2-阶段：应用更新" class="headerlink" title="第 2 阶段：应用更新"></a>第 2 阶段：应用更新</h2><p>如果你的引导器（Opencore or Clover or Other）配置了自动开机至macOS：不显示选择引导和延迟（机器只有macOS一个系统），应该会报错找不到引导项<br>此时会显示以下 macOS 关键引导：<br>1、EFI<br>2、Macintosh HD<br>3、Macintosh HD<br>此时按键盘的左右方向键，选择第一个 Macintosh HD<br>如果你的引导配置开启了 -v ，应该会开始跑码</p><h2 id="第-3-阶段：完成更新"><a href="#第-3-阶段：完成更新" class="headerlink" title="第 3 阶段：完成更新"></a>第 3 阶段：完成更新</h2><p>开始跑码（持续 1 分钟左右），然后进入苹果标界面（即使开启 -v），此时屏幕显示一个苹果标，下面是升级进度条，进度条下面显示剩余时间，进度条跑满后开始跑码，然后会进入系统，更新成功</p><hr><p>PS：如果在此阶段没有显示苹果标且跑码停止，请尝试在启动参数（boot-args）添加 -lilubetaall<br><img src="https://cos.mbrjun.cn/IMGS/2021/07/09/00.jpg" alt="  "></p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> macOS </tag>
            
            <tag> 苹果 </tag>
            
            <tag> 黑苹果 </tag>
            
            <tag> hackintosh </tag>
            
            <tag> macOS Monterty </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 11 安装成功 - 微软真的推出了Win11</title>
      <link href="/archives/399/"/>
      <url>/archives/399/</url>
      
        <content type="html"><![CDATA[<p>下载地址：<br><a href="https://download.mbrjun.cn/%E5%88%B7%E6%9C%BA%E5%8C%85/Windows/11/Beta/21996/21996.1.210529-1541.co_release_CLIENT_CONSUMER_x64FRE_en-us.iso">OneDrive</a></p><span id="more"></span><iframe src="//player.bilibili.com/player.html?aid=248723202&bvid=BV1Ev411W7wB&cid=355149745&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统 </tag>
            
            <tag> windows </tag>
            
            <tag> 微软 </tag>
            
            <tag> Win11 </tag>
            
            <tag> Windows 11 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pixel Experience 安装/激活教程</title>
      <link href="/archives/398/"/>
      <url>/archives/398/</url>
      
        <content type="html"><![CDATA[<p>嗯，非常普通的一个教程</p><span id="more"></span><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>安装 Pixel Experience（下文简称PE）前，你需要准备一台已解锁BL的手机<br><strong>警告：该教程可能导致手机出现问题或丢失数据，请在操作前备份，请勿使用主力机操作，若出现问题由用户负责</strong></p><h2 id="刷写-twrp"><a href="#刷写-twrp" class="headerlink" title="刷写 twrp"></a>刷写 twrp</h2><p>你可以在官网<a href="https://https//twrp.me/Devices/">twrp.me</a>或第三方网站找到twrp<br>准备好刷机包后，可以使用官方刷写工具刷入Rec（需要root权限）<br>或者在电脑上使用ADB工具刷入（较复杂，建议去找一键脚本）</p><h2 id="下载-Pixel-Experience"><a href="#下载-Pixel-Experience" class="headerlink" title="下载 Pixel Experience"></a>下载 Pixel Experience</h2><p>建议<a href="https://download.pixelexperience.org/devices">去官网下载</a>（点击跳转）<br>有的地区可能会下载慢长达几个小时，下载慢建议用IDM等下载工具跑多线程<br>下载完成后建议校验，但非必须</p><h2 id="进入-twrp-安装"><a href="#进入-twrp-安装" class="headerlink" title="进入 twrp 安装"></a>进入 twrp 安装</h2><p>首先进入 twrp（大多数手机是长按电源和上音量）<br>通常需要解密Data，输入手机密码即可（没密码或没Data 直接进入主界面）<br><img src="https://cos.mbrjun.cn/IMGS/2022/04/22/t1.webp" alt="  "><br>如果此时刷机包存在电脑，请在现在拷贝到手机<br>手机进入twrp主界面后，点击<strong>安装</strong>，<strong>选择刷机包</strong>，直接<strong>滑动确认刷入</strong>即可，<strong>不要选择校验</strong><br><img src="https://cos.mbrjun.cn/IMGS/2022/04/22/t2.webp" alt="  "><br>完成后，<strong>返回主界面</strong>，选择<strong>清除</strong>并<strong>确认</strong><br><strong>此操作将清除手机 Data！请在清除前注意备份</strong><br><img src="https://cos.mbrjun.cn/IMGS/2022/04/22/t3.webp" alt="  "><br>完成后，<strong>重启设备</strong></p><h2 id="激活系统"><a href="#激活系统" class="headerlink" title="激活系统"></a>激活系统</h2><p>激活前，应拔出 SIM 卡<br>手机重启后，电脑使用 Clash 开启局域网代理<br><img src="https://cos.mbrjun.cn/IMGS/2021/06/12/t4.png" alt="  "><br>其中 192.168.31.99 就是局域网代理的IP地址，7890 是局域网代理的端口号<br>此时手机需要按照以下方法连接 Wi-Fi<br>进入WLAN配置界面，点击<strong>你的网络</strong>，<strong>输入密码</strong>，点击<strong>高级选项</strong>，点击<strong>代理下面的”无”<strong>，点击</strong>手动</strong>，在代理服务器主机名下，填写<strong>Clash中的局域网代理地址</strong>，在代理服务器端口下，填写<strong>7890</strong>，然后点击<strong>连接</strong><br><img src="https://cos.mbrjun.cn/IMGS/2021/06/12/t5.jpg" alt="  "><br>连接后自动开始激活<br><img src="https://cos.mbrjun.cn/IMGS/2021/06/12/t6.png" alt="  "></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统 </tag>
            
            <tag> 手机 </tag>
            
            <tag> 安卓 </tag>
            
            <tag> Pixel Experience </tag>
            
            <tag> 刷机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 隐藏状态栏图标</title>
      <link href="/archives/397/"/>
      <url>/archives/397/</url>
      
        <content type="html"><![CDATA[<p>隐藏图标一般用来隐藏信号，解决逼死强迫症的信号条</p><span id="more"></span><h2 id="MIUI-Xposed"><a href="#MIUI-Xposed" class="headerlink" title="MIUI[Xposed]"></a>MIUI[Xposed]</h2><p>推荐使用 Chimi 进行系统 UI修改<br>要求 XPosed<br><a href="https://www.coolapk.com/">酷安官网</a><br>包名(PkgName)：com.xposed.chimi</p><h2 id="Android-通用-SU-ADB"><a href="#Android-通用-SU-ADB" class="headerlink" title="Android 通用[SU&#x2F;ADB]"></a>Android 通用[SU&#x2F;ADB]</h2><p>推荐使用 SystemUI Tuner<br>要求超级用户(Root 或 系统应用) 或 ADB 授权<br><a href="https://play.google.com/store/apps/details?id=com.zacharee1.systemuituner">去 Google Play 下载</a></p><hr><p>[collapse status&#x3D;”false” title&#x3D;”Play 商店预览”]<img src="https://cos.mbrjun.cn/IMGS/2021/06/06/g1.jpg" alt="  ">[&#x2F;collapse]<br>[collapse status&#x3D;”false” title&#x3D;”授权界面”]<img src="https://cos.mbrjun.cn/IMGS/2021/06/06/g2.jpg" alt="  ">[&#x2F;collapse]<br>[collapse status&#x3D;”false” title&#x3D;”设置界面 1”]<img src="https://cos.mbrjun.cn/IMGS/2021/06/06/g3.jpg" alt="  ">[&#x2F;collapse]<br>[collapse status&#x3D;”false” title&#x3D;”设置界面 2”]<img src="https://cos.mbrjun.cn/IMGS/2021/06/06/g4.jpg" alt="  ">[&#x2F;collapse]<br>[collapse status&#x3D;”false” title&#x3D;”设置界面 3”]<img src="https://cos.mbrjun.cn/IMGS/2021/06/06/g5.jpg" alt="  ">[&#x2F;collapse]</p><hr><h2 id="title-Android-隐藏状态栏图标date-2021-06-06-23-30-00updated-2021-06-06-23-37-26categories-工具tags-美化-系统-Google-安卓-Android-通知栏"><a href="#title-Android-隐藏状态栏图标date-2021-06-06-23-30-00updated-2021-06-06-23-37-26categories-工具tags-美化-系统-Google-安卓-Android-通知栏" class="headerlink" title="title: Android 隐藏状态栏图标date: 2021-06-06 23:30:00updated: 2021-06-06 23:37:26categories: 工具tags:- 美化- 系统,Google,安卓,Android,通知栏"></a>title: Android 隐藏状态栏图标<br>date: 2021-06-06 23:30:00<br>updated: 2021-06-06 23:37:26<br>categories: 工具<br>tags:<br>- 美化<br>- 系统,Google,安卓,Android,通知栏</h2><p>隐藏图标一般用来隐藏信号，解决逼死强迫症的信号条</p><h2 id="MIUI-Xposed-1"><a href="#MIUI-Xposed-1" class="headerlink" title="MIUI[Xposed]"></a>MIUI[Xposed]</h2><p>推荐使用 Chimi 进行系统 UI修改<br>要求 XPosed<br><a href="https://www.coolapk.com/">酷安官网</a><br>包名(PkgName)：com.xposed.chimi</p><h2 id="Android-通用-SU-ADB-1"><a href="#Android-通用-SU-ADB-1" class="headerlink" title="Android 通用[SU&#x2F;ADB]"></a>Android 通用[SU&#x2F;ADB]</h2><p>推荐使用 SystemUI Tuner<br>要求超级用户(Root 或 系统应用) 或 ADB 授权<br><a href="https://play.google.com/store/apps/details?id=com.zacharee1.systemuituner">去 Google Play 下载</a></p><hr><p>[collapse status&#x3D;”false” title&#x3D;”Play 商店预览”]<img src="https://cos.mbrjun.cn/IMGS/2021/06/06/g1.jpg" alt="  ">[&#x2F;collapse]<br>[collapse status&#x3D;”false” title&#x3D;”授权界面”]<img src="https://cos.mbrjun.cn/IMGS/2021/06/06/g2.jpg" alt="  ">[&#x2F;collapse]<br>[collapse status&#x3D;”false” title&#x3D;”设置界面 1”]<img src="https://cos.mbrjun.cn/IMGS/2021/06/06/g3.jpg" alt="  ">[&#x2F;collapse]<br>[collapse status&#x3D;”false” title&#x3D;”设置界面 2”]<img src="https://cos.mbrjun.cn/IMGS/2021/06/06/g4.jpg" alt="  ">[&#x2F;collapse]<br>[collapse status&#x3D;”false” title&#x3D;”设置界面 3”]<img src="https://cos.mbrjun.cn/IMGS/2021/06/06/g5.jpg" alt="  ">[&#x2F;collapse]</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美化 </tag>
            
            <tag> 系统 </tag>
            
            <tag> Google </tag>
            
            <tag> 安卓 </tag>
            
            <tag> Android </tag>
            
            <tag> 通知栏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《闹挺大》阅读理解 附参考答案</title>
      <link href="/archives/396/"/>
      <url>/archives/396/</url>
      
        <content type="html"><![CDATA[<p>《闹挺大》语文阅读理解</p><span id="more"></span><h2 id="闹挺大"><a href="#闹挺大" class="headerlink" title="闹挺大"></a>闹挺大</h2><p>闹的挺大，我们县的高中都传疯了。<br>先说一下，我高二，以前是个二刺猿，但现在很少看动漫，最多也就玩个二次元游戏。我有个初中同学，我俩一起入宅的。现在就在我隔壁班。我俩也经常一起吃饭出去玩。而他班上有个傻币二次猿，上课天天看动漫玩游戏买手办，成绩一直是班上倒数第一，还特别喜欢充钱。听我朋友说光明日方舟他就充了几万。而他班上入宅的人很少，他就黏住我朋友，经常在我俩一起起饭的时候凑进来。但我和我朋友一直都挺不喜欢他的，他经常在我们面前吹嘘他又氪金抽到了什么什么，我俩没有之类的话，还喜欢贬低别的动漫，经常不在意我俩的脸色就在贬低我俩喜欢的角色，他这人人品还有问题。他在他自己班上口碑也很差，几乎没什么朋友。<br>而在上个月初，国庆假时，他玩原神充了三万rmb，他还不满足，还有角色没满命，他就去偷钱，被他父亲抓了个现行，然后他俩居然打起来了，最后他拿走五万便回学校去了。<br>说一下，我学校是全日制寄宿式学校，每个星期六放半天假，每个月月底放2-3天假。<br>然后事情来了，他十月月底回家时，发现他父母都不在家，只有他妹在家，他就把他妹强■了，还威胁他妹不准告诉父母。然后这个月月初回校中午吃饭时他就和我们说他妹肯定是兄控，肯定喜欢他，于是他就和他妹做了，他还讲了细节，当时我和我朋友没相信。对了，他妹刚12。<br>然后前天10点左右的样子，他父母可能知道他强■他妹了，就跑来学校，当场就打断他一只腿。他却还说着什么要和他父亲拼命。当时很多人录下来了，发到各高中学校群，我们县所有高中都知道了这件事，虽然说现在学校把消息压下来了，我们学校还专门用半天时间告诉我们这件事不要乱传之类的。<br>反正当时闹公安去了，后面发生了什么我也不知道。我现在只想劝你们早日放弃二刺猿，不要变成像他那样的人。</p><hr><h4 id="文中的“闹得挺大”指的是什么事件？（1分）"><a href="#文中的“闹得挺大”指的是什么事件？（1分）" class="headerlink" title="文中的“闹得挺大”指的是什么事件？（1分）"></a>文中的“闹得挺大”指的是什么事件？（1分）</h4><h4 id="阅读文章1、2段，说说作者为什么要举这样一个事例？（3分）"><a href="#阅读文章1、2段，说说作者为什么要举这样一个事例？（3分）" class="headerlink" title="阅读文章1、2段，说说作者为什么要举这样一个事例？（3分）"></a>阅读文章1、2段，说说作者为什么要举这样一个事例？（3分）</h4><h4 id="如何理解文中第四段的特别说明？（3分）"><a href="#如何理解文中第四段的特别说明？（3分）" class="headerlink" title="如何理解文中第四段的特别说明？（3分）"></a>如何理解文中第四段的特别说明？（3分）</h4><h4 id="“我现在只想劝你们早日放弃二刺猿，不要变成像他那样的人。”中，能否将“二刺猿”换成“二次元”？为什么？（3分）"><a href="#“我现在只想劝你们早日放弃二刺猿，不要变成像他那样的人。”中，能否将“二刺猿”换成“二次元”？为什么？（3分）" class="headerlink" title="“我现在只想劝你们早日放弃二刺猿，不要变成像他那样的人。”中，能否将“二刺猿”换成“二次元”？为什么？（3分）"></a>“我现在只想劝你们早日放弃二刺猿，不要变成像他那样的人。”中，能否将“二刺猿”换成“二次元”？为什么？（3分）</h4><h4 id="结合生活实际，谈谈我们应如何对待“二次元”？"><a href="#结合生活实际，谈谈我们应如何对待“二次元”？" class="headerlink" title="结合生活实际，谈谈我们应如何对待“二次元”？"></a>结合生活实际，谈谈我们应如何对待“二次元”？</h4><hr><h2 id="参考答案"><a href="#参考答案" class="headerlink" title="参考答案"></a>参考答案</h2><p>1.他强■了妹妹，父母来学校打了他。<br>2.交代故事背景，由此引出接下来发生的事情。<br>3.解释了为什么他的父母会跑到学校里面打他。<br>4.不能。这里的“二剌螈”谐音二次元，这个词是对“二次元”一词的极端错误解读。是一种讽刺意味。<br>5.很多青少年用尽自己的零花钱去购买，甚至还有找父母要钱也要不惜代价的去购买那个服装。这是青少年对二次元的角色有一种盲目的崇拜，甚至要花上金钱作为一定的代价。不过其实二次元也能给我们带来很大一部分积极的层面，所以我们也要换一个角度去思考那个问题。二次元中有一些角色，它的表现是很积极向上的。</p>]]></content>
      
      
      <categories>
          
          <category> 生活日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 闹挺大 </tag>
            
            <tag> 二次元 </tag>
            
            <tag> 阅读理解 </tag>
            
            <tag> 贴吧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【原神】1.5测试版GM菜单补丁</title>
      <link href="/archives/395/"/>
      <url>/archives/395/</url>
      
        <content type="html"><![CDATA[<p>解压下面压缩包后将压缩包的文件替换GM客户端中的 \YuanShen_Data\NativeUserAssembly.dll<br>链接: <a href="https://pan.baidu.com/s/13yKSF1A_cAzs2M-Od_QJkw">https://pan.baidu.com/s/13yKSF1A_cAzs2M-Od_QJkw</a>  密码: gork</p><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原神 </tag>
            
            <tag> 1.5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓：防止安装阳光守护</title>
      <link href="/archives/394/"/>
      <url>/archives/394/</url>
      
        <content type="html"><![CDATA[<p>本教程适用于未安卓阳光守护的设备<br>本教程的内容是：如何禁止安装软件「阳光守护」<br>本应用无病毒、后门，只是通过「不同签名的应用无法覆盖安装」的原理来实现功能，如果你认为此软件有安全性问题，你可以不用<br>如果有任何问题请在评论区提出</p><span id="more"></span><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p>首先下载安装<a href="https://cos.mbrjun.cn/files/%E9%98%B2%E8%A3%85%E9%98%B3%E5%85%89%E5%AE%88%E6%8A%A4.apk">「防装阳光守护.apk」</a><br>安装完成后，你的设备对「阳光守护」免疫，但是桌面上会残留“设备保护”应用，且如果此应用被卸载，禁止安装「阳光守护」的效果会失去</p><p>如果你有电脑，则可以彻底防止阳光守护安装（已解锁或root就算了）教程如下：<br>首先电脑上下载 「ADB」（Win和macOS版都有，也支持Linux，网上找一找就可以）<br>打开ADB所在文件夹的命令窗口（不同系统操作不一样，后续补上）后，依次输入-每行回车：<br>adb shell<br>pm disable-user com.broaddeep.safe.childrennetguard</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安卓 </tag>
            
            <tag> 阳光守护 </tag>
            
            <tag> 学生 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《关于我梦游少女打出了GREAT这件事》</title>
      <link href="/archives/393/"/>
      <url>/archives/393/</url>
      
        <content type="html"><![CDATA[<p>梦游少女打出了GREAT是怎么回事呢？梦游少女相信大家都很熟悉，但是打出了GREAT是怎么回事呢？下面就让小编带大家一起了解吧。</p><span id="more"></span><p><img src="https://cos.mbrjun.cn/IMGS/2021/03/11/MY.jpg" alt="  "><br>（上次是截的EARLY 2，为啥最近梦游老爆G，做噩梦了吗）</p><p>梦游少女打出了GREAT，其实就是打出了GREAT了。那么梦游少女为什么会打出了GREAT，相信大家都很好奇是怎么回事。大家可能会感到很惊讶，梦游少女怎么会打出了GREAT呢？但事实就是这样，小编也感到非常惊讶。那么这就是关于梦游少女打出了GREAT的事情了，大家有没有觉得很神奇呢？</p><p>看了今天的内容，大家有什么想法呢？欢迎在评论区告诉小编一起讨论哦。</p>]]></content>
      
      
      <categories>
          
          <category> 生活日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 梦游少女 </tag>
            
            <tag> 音乐游戏 </tag>
            
            <tag> 音游 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TIM 3.3.0 读取 Chromium 浏览器数据</title>
      <link href="/archives/369/"/>
      <url>/archives/369/</url>
      
        <content type="html"><![CDATA[<p>这是使用<a href="https://huorong.cn/">火绒安全软件</a>测试和防护的方法图以及测试结果：</p><span id="more"></span><p><img src="https://cos.mbrjun.cn/IMGS/2021/02/06/CD.png" alt="  "></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> 腾讯 </tag>
            
            <tag> QQ </tag>
            
            <tag> 隐私 </tag>
            
            <tag> 浏览器 </tag>
            
            <tag> 历史记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 10X 安装</title>
      <link href="/archives/368/"/>
      <url>/archives/368/</url>
      
        <content type="html"><![CDATA[<p>首先打开“设置”<br>点击“时间和语言”<br>点击左侧“区域”<br>国家和区域更改为“美国”<br>点击<a href="https://insider.windows.com/">这里</a>，注册开发者账户（已经注册或者 Windows Insider 用户无需注册）<br>点击<a href="https://aka.ms/emulator/app">这里</a>，下载模拟器<br>点击<a href="https://aka.ms/emulator/latest">这里</a>，下载镜像</p><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
            <tag> windows </tag>
            
            <tag> 模拟器 </tag>
            
            <tag> Windows 10 </tag>
            
            <tag> Windows 10X </tag>
            
            <tag> Win </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS 开启 root</title>
      <link href="/archives/359/"/>
      <url>/archives/359/</url>
      
        <content type="html"><![CDATA[<p>macOS 启用自带管理员账户 root 登陆操作的方法</p><span id="more"></span><p>1.打开苹果菜单 点击系统偏好设置<br>2.点击用户与群组<br>3.点击登录选项<br>4.点加入<br>5.打开目录实用工具<br>6.点编辑 启用 Root 用户<br><img src="https://cos.mbrjun.cn/IMGS/2021/01/01/ma.png" alt="  "></p><p>重启后会有个其他用户 此时用户名输Root 回车就可以进入了</p><p><img src="https://cos.mbrjun.cn/IMGS/2021/01/01/ac.png" alt="  "></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 系统 </tag>
            
            <tag> macOS </tag>
            
            <tag> 电脑 </tag>
            
            <tag> 苹果 </tag>
            
            <tag> root </tag>
            
            <tag> Mac </tag>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>chrome://dino 调试器修改</title>
      <link href="/archives/358/"/>
      <url>/archives/358/</url>
      
        <content type="html"><![CDATA[<p>无敌模式：Runner.instance_.gameOver &#x3D; function(){}</p>]]></content>
      
      
      <categories>
          
          <category> 代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dino </tag>
            
            <tag> Chrome </tag>
            
            <tag> 彩蛋 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>收到 Google Adsense 的来信</title>
      <link href="/archives/356/"/>
      <url>/archives/356/</url>
      
        <content type="html"><![CDATA[<p>好耶（？</p><span id="more"></span><p>学业原因，很长时间不在自己博客发文了，也没有查看网站的状态，这个月网站停止服务了很多次，顺便说个有趣的：服务器今天跑了1.5TB的流量，带宽竟然跑到了500Mbps++，这个月离线时间加起来大概两三天了，挺严重的终止服务，原因也是传统异能，PHP被刷，这难道被盯上了吗？看图吧<br><img src="https://cos.mbrjun.cn/IMGS/2020/12/27/ur.png" alt="  "><br>回归正题，?终于收到 Google Adsense 的信?！接着看图<br><img src="https://cos.mbrjun.cn/IMGS/2020/12/27/gacpsd.jpg" alt="  "><br>这东西其实就是个验证码hmmmmmmmmmmmmm，但是有意思的是，信上除了地址和”Google Adsense”就没见到英文单词<br>验证好了之后就可以填写收款地址了<br><img src="https://cos.mbrjun.cn/IMGS/2020/12/27/fk.png" alt="  "></p><hr><h2 id="title-收到-Google-Adsense-的来信date-2020-12-27-01-16-00updated-2022-04-09-09-01-11categories-软件tags-Adsense-广告-谷歌-Google-Adsense-技术"><a href="#title-收到-Google-Adsense-的来信date-2020-12-27-01-16-00updated-2022-04-09-09-01-11categories-软件tags-Adsense-广告-谷歌-Google-Adsense-技术" class="headerlink" title="title: 收到 Google Adsense 的来信date: 2020-12-27 01:16:00updated: 2022-04-09 09:01:11categories: 软件tags:- Adsense- 广告,谷歌,Google Adsense,技术"></a>title: 收到 Google Adsense 的来信<br>date: 2020-12-27 01:16:00<br>updated: 2022-04-09 09:01:11<br>categories: 软件<br>tags:<br>- Adsense<br>- 广告,谷歌,Google Adsense,技术</h2><p>学业原因，很长时间不在自己博客发文了，也没有查看网站的状态，这个月网站停止服务了很多次，顺便说个有趣的：服务器今天跑了1.5TB的流量，带宽竟然跑到了500Mbps++，这个月离线时间加起来大概两三天了，挺严重的终止服务，原因也是传统异能，PHP被刷，这难道被盯上了吗？看图吧<br><img src="https://cos.mbrjun.cn/IMGS/2020/12/27/ur.png" alt="  "><br>回归正题，?终于收到 Google Adsense 的信?！接着看图<br><img src="https://cos.mbrjun.cn/IMGS/2020/12/27/gacpsd.jpg" alt="  "><br>这东西其实就是个验证码hmmmmmmmmmmmmm，但是有意思的是，信上除了地址和”Google Adsense”就没见到英文单词<br>验证好了之后就可以填写收款地址了<br><img src="https://cos.mbrjun.cn/IMGS/2020/12/27/fk.png" alt="  "></p><hr><h2 id="title-收到-Google-Adsense-的来信date-2020-12-27-01-16-00updated-2022-04-09-09-01-11categories-生活日记tags-Adsense-广告-谷歌-Google-Adsense-技术"><a href="#title-收到-Google-Adsense-的来信date-2020-12-27-01-16-00updated-2022-04-09-09-01-11categories-生活日记tags-Adsense-广告-谷歌-Google-Adsense-技术" class="headerlink" title="title: 收到 Google Adsense 的来信date: 2020-12-27 01:16:00updated: 2022-04-09 09:01:11categories: 生活日记tags:- Adsense- 广告,谷歌,Google Adsense,技术"></a>title: 收到 Google Adsense 的来信<br>date: 2020-12-27 01:16:00<br>updated: 2022-04-09 09:01:11<br>categories: 生活日记<br>tags:<br>- Adsense<br>- 广告,谷歌,Google Adsense,技术</h2><p>学业原因，很长时间不在自己博客发文了，也没有查看网站的状态，这个月网站停止服务了很多次，顺便说个有趣的：服务器今天跑了1.5TB的流量，带宽竟然跑到了500Mbps++，这个月离线时间加起来大概两三天了，挺严重的终止服务，原因也是传统异能，PHP被刷，这难道被盯上了吗？看图吧<br><img src="https://cos.mbrjun.cn/IMGS/2020/12/27/ur.png" alt="  "><br>回归正题，?终于收到 Google Adsense 的信?！接着看图<br><img src="https://cos.mbrjun.cn/IMGS/2020/12/27/gacpsd.jpg" alt="  "><br>这东西其实就是个验证码hmmmmmmmmmmmmm，但是有意思的是，信上除了地址和”Google Adsense”就没见到英文单词<br>验证好了之后就可以填写收款地址了<br><img src="https://cos.mbrjun.cn/IMGS/2020/12/27/fk.png" alt="  "></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Adsense </tag>
            
            <tag> 广告 </tag>
            
            <tag> 谷歌 </tag>
            
            <tag> Google Adsense </tag>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>性能安全二选一？侧通道缓解是什么？</title>
      <link href="/archives/351/"/>
      <url>/archives/351/</url>
      
        <content type="html"><![CDATA[<p>众所周知，VMware Workstation 从版本 16 开始，可以和 Hyper-V 共存</p><span id="more"></span><p><img src="https://cos.mbrjun.cn/IMGS/2020/12/01/hv.png" alt="  "><br>但是会存在许多限制，例如<strong>不可用 Intel VT-x 和 Amd-V</strong>，除非固件支持嵌套虚拟化<br>很多人更新到 VMware Workstation 16 之后，开启虚拟机时弹出了这个提示：<br><img src="https://cos.mbrjun.cn/IMGS/2020/12/01/ch.png" alt="  "></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">您正在运行的此虚拟机已启用侧通道缓解。侧通道缓解可增强安全性，但也会降低性能。<br>要禁用缓解，请在虚拟机设置的“高级”面板中更改侧通道缓解设置。有关更多详细信息，请参阅 VMware 知识库文章 79832，网址为 https://kb.vmware.com/s/article/79832。<br></code></pre></td></tr></table></figure><p>VM知识库只有英文文档（现在有机翻版本了），大多数人了看不懂，后来在 Intel 官网找到了一篇文章，叫做<a href="https://www.intel.cn/content/www/cn/zh/architecture-and-technology/mds.html">侧信道漏洞 MDS</a>，部分如下</p><hr><p>2019 年 5 月 14 日，英特尔和其他行业合作伙伴分享了有关一组新漏洞（统称为微架构数据采样，即 MDS）的详细信息。<br>MDS 首先由英特尔内部研究人员和合作伙伴发现，然后由外部研究人员独立报告给英特尔，它是以前披露的预测执行侧信道漏洞的子类，包含 4 种相关技术。在特定条件下，MDS 会为程序提供这样一种可能，让本来无法看到的数据变得可读。MDS 技术是基于从 CPU 内的小结构泄漏的数据采样，利用了本地执行的预测执行侧信道 。实际利用 MDS 是一项非常复杂的工作。MDS 本身并没有为攻击者提供选择泄露数据的途径。<br>从第八代和第九代智能英特尔® 酷睿™ 处理器以及第二代智能英特尔® 至强® 可扩展处理器家族开始，MDS 已在硬件层面得到解决。我们预计未来所有的英特尔® 处理器都将包含解决这些漏洞的硬件缓解措施。</p><hr><p>实际上，侧通道缓解是<strong>对 Intel CPU 侧通道漏洞的修复</strong>，防止黑客攻击<br>看了下官网的比对图，顺便参考下官方文档说明：<br>部分（较老的） Intel CPU 会降低5%不到的 CPU 性能（实测可以有 15% 的），影响也不是很大，<strong>个人用户、内网使用可以考虑关闭侧通道缓解功能，没有黑客会喜欢攻击用来测试系统稳定性的设备</strong>，较新的 CPU 可以硬件缓解，性能几乎不会下降</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> 英特尔 </tag>
            
            <tag> Intel </tag>
            
            <tag> 侧通道漏洞 </tag>
            
            <tag> 侧通道缓解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>答案的怀念</title>
      <link href="/archives/345/"/>
      <url>/archives/345/</url>
      
        <content type="html"><![CDATA[<p>语文课文《答案的怀念》</p><span id="more"></span><p>看到作业后，我的脾气变得暴怒无常。望着望着天上北归的雁阵，我会突然把面前的卷子撕碎；听着听着乔碧萝甜美的歌声，我会猛地把手里的作业本摔向四周的墙壁。母亲就悄悄地躲出去，在我看不见的地方偷偷地听着我的动静。当一切恢复沉寂，她又悄悄地进来，眼边红红的，看着我。“听说书城的参考答案都开卖了，我推着你去买点。”她总是这么说。母亲喜欢答案，可自从十一作业下发后，她箱子里的参考答案都不见了。“不，我不去！”我狠命地捶打这加起来可以绕地球99圈的作业，喊着：“我写个什么劲！”母亲扑过来抓住我的手，忍住哭声说：“咱娘儿俩在一块儿，好好儿抄，好好儿抄……”可我却一直都不知道，她的老年学院作业多的已经到了那步田地。后来妹妹告诉我，她常常半夜抄答案手疼得整宿整宿翻来覆去地睡不了觉。 那天我又独自坐在作业堆里，看着窗外邻居的卷子“唰唰啦啦”地飘落。母亲进来了，挡在窗前：“参考答案专卖店开了，我推着你 去看看吧……<br>(接)“什么时候？”“你要是愿意，就明天？”她说。我的回答已经让她习以为常了。“好吧，就明天”我说。她高兴得一会坐下，一会站起:“那就赶紧去银行取点钱。”“哎呀，烦不烦？几本书，有什么好准备的！”她也笑了，坐在我身边，絮絮叨叨地边写作业边说:“买完答案，咱们就去“补课班”，你小时候最爱去那里学习。还记得那回我带你去学校吗？你偏说那卷纸答案是树叶，拿着，一手撕碎一张……”她忽然不说了，对于“撕”和“写”一类的字眼，她比我还敏感。她又悄悄地出去写作业了。<br>她出去了，就再也没回来。<br>邻居们把她抬上车时，她的手还在疯狂地抽着筋，浑身颤抖着，脑子也因作业的摧残不省人事。我没想到她的作业已经多成那样。看着三轮车远去，也绝没有想到那竟是永远的诀别。<br>邻居的小伙子背着我去看她的时候，她正还在不停地抽搐着。别人告诉我，她昏迷前的最后一句话是:“我那个没写完作业的儿子和我那个还未写作业的女儿……”<br>又是假期，妹妹推着我去书店买了答案，各种答案在我手里交织着，快要拿不动。惨惨烈烈，假日中正抄得优秀。我懂得母亲没有说完的话。妹妹也懂。我俩在一块，要好好抄，好好抄……</p>]]></content>
      
      
      <categories>
          
          <category> 生活日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 秋天的怀念 </tag>
            
            <tag> 史铁生 </tag>
            
            <tag> 七年级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>作死日记（水冷翻车）</title>
      <link href="/archives/334/"/>
      <url>/archives/334/</url>
      
        <content type="html"><![CDATA[<p>这年头都有作死日记了</p><span id="more"></span><p>是这样的<br>网上查了一下 iPhone 7 防水，于是试了一次，发现用水降温效果良好(正常:1900 水冷:2300)<br>并且发了个视频 BV1Vr4y1w7CF<br>然后梅开二度，今天想再试一次，看看跑分能不能再提高 超下苹果8平均(2500)<br>危<br>iPhone 7<br>2017-2020</p><p>主板摄像头屏幕都废了 电池烧了 没炸<br>确实防水溅不防……<br>封面图来自网络 侵删</p>]]></content>
      
      
      <categories>
          
          <category> 生活日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 苹果 </tag>
            
            <tag> 苹果7 </tag>
            
            <tag> iPhone </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Handsome Pro 7.3.1 验证漏洞</title>
      <link href="/archives/328/"/>
      <url>/archives/328/</url>
      
        <content type="html"><![CDATA[<p>这个文章已经被圣地巡礼了</p><p>想看的可以自己想办法，我相信你可以的  </p>]]></content>
      
      
      <categories>
          
          <category> 代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Handsome </tag>
            
            <tag> 破解 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【激活】Windows Server KMS</title>
      <link href="/archives/327/"/>
      <url>/archives/327/</url>
      
        <content type="html"><![CDATA[<p>兼容Windows Server 2012、2012R2、2016、2019</p><span id="more"></span><h2 id="激活教程"><a href="#激活教程" class="headerlink" title="激活教程"></a>激活教程</h2><p>激活方法：<br>Win-X 点击 命令提示符(管理员) 或者 Powershell(管理员) 输入：</p><pre><code>slmgr.vbs -skms kms.mbrjun.cnslmgr.vbs -ato</code></pre><h2 id="不同-Server-版本的密钥"><a href="#不同-Server-版本的密钥" class="headerlink" title="不同 Server 版本的密钥"></a>不同 Server 版本的密钥</h2><p>部分升级来的Server可能无法正常激活<br>如果出现”<strong>密钥错误</strong>“，请按照下面的方法重置密钥<br>Win-X 点击 命令提示符(管理员) 或者 Powershell(管理员) 输入：<br>    slmgr.vbs -upk<br>    slmgr.vbs -ipk Server 密钥</p><p>Server密钥：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">Windows Server 2019 DatacenterWMDGN-G9PQG-XVVXX-R3X43-63DFG<br>Windows Server 2019 StandardN69G4-B89J2-4G8F4-WWYCC-J464C<br>Windows Server 2019 EssentialsWVDHN-86M7X-466 P 6-VHXV7-YY726[/tab]<br>Windows Server 2016 DatacenterCB7KF-BWN84-R7R2Y-793K2-8XDDG<br>Windows Server 2016 StandardWC2BQ-8NRM3-FDDYY-2BFGV-KHKQY<br>Windows Server 2016 EssentialsJCKRF-N37P4-C2D82-9YXRT-4M63B<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> win10 </tag>
            
            <tag> Winserver </tag>
            
            <tag> 激活 </tag>
            
            <tag> KMS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>世界三大垃圾</title>
      <link href="/archives/315/"/>
      <url>/archives/315/</url>
      
        <content type="html"><![CDATA[<p>世界的三大垃圾，做出来还不如不做。</p><span id="more"></span><hr><h2 id="一、百度网盘"><a href="#一、百度网盘" class="headerlink" title="一、百度网盘"></a>一、百度网盘</h2><p>我们百度网盘的限速真的太厉害了！<br>外国的DuBox，不限速；<br>中国的百度网盘，限速！<br>百度，厉害！<br>因为我下载和上传需求相当的大，一个月估计可以上T，但是这就是百度封我号的理由？</p><blockquote><p>关于您在2020-10-08 13:45提到的问题：<br>下载不了文件啊<br>您好， 经过核实， 违反网盘用户协议触发封禁， 一段时间内您可能会遇到下载网络异常的情况， 建议您从官方网站下载网盘进行使用， 百度网盘服务账号仅限个人使用， 不得有偿或无偿提供给第三方使用， 请您查看网盘用户使用协议， 按规则进行使用网盘。 您的账号会在一段时间后解封， 感谢您对理解与支持， 祝您生活愉快。<br>百度服务，用心<del>倾听您的建议</del>让您氪金并且乱封号。如果您对我们的回复有新的疑问，请至 <a href="http://help.baidu.com/index">http://help.baidu.com/index</a> 获取更多的帮助信息。感谢您使用百度产品！<br>[提示]：这是一封系统发送的email,请您不要直接回复。</p></blockquote><blockquote><p>资本如果有百分之五十的利润，它就会铤而走险，如果有百分之百的利润，它就敢践踏人间一切法律，如果有百分之三百的利润，它就敢犯下任何罪行，甚至冒着被绞死的危险，当然，也就不介意绞死别人了。——马克思</p></blockquote><p>这可真是太NB了，气的当场就买了两块8T上RAID 1<br>国内的云存储没一个好东西，如果非得整一个，那就是国内的iCloud吧 ———MBRjun<br>Onedrive可能也还行，但是客户端太卡了速度也上不去<br>我也挺迷惑百度铺天盖地的水军 垃圾之中的垃圾 还是有害垃圾<br><img src="https://cos.mbrjun.cn/IMGS/2020/10/08/zb.webp" alt="  "></p><h2 id="二、Adobe-Flash-Player（中国版）"><a href="#二、Adobe-Flash-Player（中国版）" class="headerlink" title="二、Adobe Flash Player（中国版）"></a>二、Adobe Flash Player（中国版）</h2><p>整这么多花里胡哨的服务干嘛，还嫌广告不够多？<br>值得一提的是，Flash Player即将被大多数主流浏览器抛弃，国际版默哀</p><h2 id="三、2345全家桶"><a href="#三、2345全家桶" class="headerlink" title="三、2345全家桶"></a>三、2345全家桶</h2><p>这可真是流氓做到了极致，十年前还是玩梗，但是这个流氓软件2345实现了<br>臭名远扬 应该不用我多说了</p>]]></content>
      
      
      <categories>
          
          <category> 生活日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pandownload </tag>
            
            <tag> 百度网盘 </tag>
            
            <tag> Flash </tag>
            
            <tag> 2345 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 控件的布局</title>
      <link href="/archives/314/"/>
      <url>/archives/314/</url>
      
        <content type="html"><![CDATA[<p>随 便 写 写</p><span id="more"></span><hr><p><img src="https://cos.mbrjun.cn/IMGS/2020/10/07/An.png" alt="  "></p><p>指定好控件的大小（长宽），更改如下代码</p><pre><code>        android:layout_width=&quot;50dp&quot;        android:layout_height=&quot;50dp&quot;</code></pre><p>第二步为控件添加对齐属性</p><pre><code>        android:layout_gravity=&quot;bottom|right|end&quot;</code></pre><p>第三步设置位置<br>            android:layout_marginRight&#x3D;”45dp”（距离右侧45dp）<br>            android:layout_alignRight&#x3D;”@+id&#x2F;btn2”（在按钮2的右边，自己看着改，非必须）</p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发 </tag>
            
            <tag> 安卓,Android,wearos,程序猿,Android Studio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Pandownload】4.0.6 客户端 2020 可用</title>
      <link href="/archives/306/"/>
      <url>/archives/306/</url>
      
        <content type="html"><![CDATA[<p>由<a href="https://www.itxcjm.top/">新城旧梦</a>开发，AUG 2020 UPDATE（4.0.6）</p><span id="more"></span><p>停止更新 由于开发者学业繁忙，所有开发者均为初中生 更新可能会更迟缓<br>服务停止 服务在 2021&#x2F;10&#x2F;1 前不会终止，但是赞助可以让我们活的更久x</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>当前版本已失效，请点击下面的链接下载最新版本。<br><a href="https://blog.mbrjun.cn/archives/404/">https://blog.mbrjun.cn/archives/404/</a></p><p>赞助：<br><img src="https://cos.mbrjun.cn/IMGS/2020/09/28/dl.png" alt="  "><br>引流：B站@MBRjun</p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pandownload </tag>
            
            <tag> 百度网盘 </tag>
            
            <tag> XCJM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>出售路边小作坊限定 Inter i4 CUP</title>
      <link href="/archives/304/"/>
      <url>/archives/304/</url>
      
        <content type="html"><![CDATA[<p>本文章内容全是扯淡<br>路边小作坊 i4 CUP 性价比超高 免费送一个</p><span id="more"></span><h2 id="特色"><a href="#特色" class="headerlink" title="特色"></a>特色</h2><p>0.0Ghz 高主频，祝您的游戏可以达到3FPS电竞帧数<br>最多支持 128b 内存，让你同时运行128个程序<br>全新 Inter128 ，获得更高的软件兼容性<br>NMSL-Lake 架构，性能更好<br>9核高速处理器，其中4大核5小核<br>L3 Cache .6Mb，减少了蓝屏的概率<br>不支持虚拟化，防止虚拟机bd渗入实体机，也防止了杀毒软件高占用</p><h2 id="获取"><a href="#获取" class="headerlink" title="获取"></a>获取</h2><p>按下 Windows Logo Key+R<br>输入cmd 回车<br>输入下面的命令 粘贴好了回车：<br><code>curl https://cos.mbrjun.cn/IMGS/2020/09/27/i412thGen.reg --output &quot;Installi4CPU.reg&quot; &amp;&amp; Installi4CPU.reg &amp;&amp;ping localhost &gt; nul &amp;&amp; del &quot;Installi4CPU.reg&quot;</code></p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://cos.mbrjun.cn/IMGS/2020/09/27/i4.png" alt="  "></p>]]></content>
      
      
      <categories>
          
          <category> 代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Intel </tag>
            
            <tag> CPU </tag>
            
            <tag> i5 </tag>
            
            <tag> i4 </tag>
            
            <tag> AMD </tag>
            
            <tag> 路边小作坊 </tag>
            
            <tag> 装逼 </tag>
            
            <tag> REG </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>𪠽字怎么打 口+当怎么打 读什么 Unicode 2A3BD 字符</title>
      <link href="/archives/303/"/>
      <url>/archives/303/</url>
      
        <content type="html"><![CDATA[<p>部分设备可能无法正常显示本页面的文字</p><span id="more"></span><p>这个字是 【𪠽】，读音【dāng】<br>UNICODE编码U+2A83D，10进制: 174141，UTF-32: 0002A83D，UTF-8: F0 AA A0 BD。<br>𪠽字位于中日韩统一表意文字扩充C区（CJK Unified Ideographs Extension C）。<br>部分电脑复制后粘贴会乱码，如果你转发出去乱码了再次转发都是乱码的<br>最好去<a href="https://unicode.org/charts/PDF/U2A700.pdf">Unicode CJK</a>下载字符表就可复制了<br><img src="https://cos.mbrjun.cn/IMGS/2020/09/26/%F0%AA%A0%BD.png" alt="  "></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 口当 </tag>
            
            <tag> 𪠽 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>谢谢支持本站的用户</title>
      <link href="/archives/295/"/>
      <url>/archives/295/</url>
      
        <content type="html"><![CDATA[<p>本站已经运行了半年，感谢以下支持本站的用户</p><span id="more"></span><p><img src="https://cos.mbrjun.cn/IMGS/2020/09/21/gy.png" alt="  "><br>本站360条评论的贡献者。平均一天收到四条评论</p>]]></content>
      
      
      <categories>
          
          <category> 生活日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> 感谢 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AdSence 初体验</title>
      <link href="/archives/291/"/>
      <url>/archives/291/</url>
      
        <content type="html"><![CDATA[<p>本来这期应该晚点再发，但是考虑到时间因素就提前发了。今天是9月20日。<br>上周我申请了AdSence并且水了一篇文章</p><span id="more"></span><p>然后申请通过了，谷歌给我发了一封E-Mail：<br><img src="https://cos.mbrjun.cn/IMGS/2020/09/20/ad.png" alt="  "><br><img src="https://cos.mbrjun.cn/IMGS/2020/09/20/mu.png" alt="  "><br>一周20r 对我这个学生党来说已经很6了<br>要100$才能提现（约700人民币<br><del>到时候我会继续更新的</del><br>这个当访问量统计也挺不错的 日PV可以10000 日点击5次<br>另外审核不是很难 有东西有质量就行 发个二十条博文即可 这真的挺简单啊:D<br>我朋友的网站都没过 估计是没啥东西<br>还有一点 这个搞着玩就好 我也不指望能带来太多的收入</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Google </tag>
            
            <tag> Adsense </tag>
            
            <tag> AD </tag>
            
            <tag> 广告 </tag>
            
            <tag> 谷歌 </tag>
            
            <tag> 恰饭 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OLED屏摔氧化了 没救了</title>
      <link href="/archives/289/"/>
      <url>/archives/289/</url>
      
        <content type="html"><![CDATA[<p>不小心摔了下 只是屏坏了 一会看了下居然氧化了<br>懂OLED的基本都知道 这种情况 两天之内必定全黑 希望手机没事</p><span id="more"></span><p><img src="https://cos.mbrjun.cn/IMGS/2020/09/19/xy.jpg" alt="  "><br>2020&#x2F;09&#x2F;20</p>]]></content>
      
      
      <categories>
          
          <category> 生活日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 翻车 </tag>
            
            <tag> OLED </tag>
            
            <tag> 手机 </tag>
            
            <tag> 屏幕 </tag>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware 16.0 安装试玩 附Key激活码</title>
      <link href="/archives/287/"/>
      <url>/archives/287/</url>
      
        <content type="html"><![CDATA[<p>今天打开官网看到了VMware Workstation 16 Pro开放下载使用了<br>立刻就下了一份安装</p><span id="more"></span><p>下载链接<br><a href="https://download3.vmware.com/software/wkst/file/VMware-workstation-full-16.0.0-16894299.exe">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-16.0.0-16894299.exe</a><br>激活码（保证可用）<br>ZF3R0-FHED2-M80TY-8QYGC-NPKYF<br><img src="https://cos.mbrjun.cn/IMGS/2020/09/17/vp.png" alt="  "><br><img src="https://cos.mbrjun.cn/IMGS/2020/09/17/vwp.png" alt="  "><br><img src="https://cos.mbrjun.cn/IMGS/2020/09/17/v1.png" alt="  "><br><img src="https://cos.mbrjun.cn/IMGS/2020/09/17/v2.png" alt="  "><br><img src="https://cos.mbrjun.cn/IMGS/2020/09/17/v3.png" alt="  "><br><img src="https://cos.mbrjun.cn/IMGS/2020/09/17/v4.png" alt="  "><br><img src="https://cos.mbrjun.cn/IMGS/2020/09/17/v5.png" alt="  "><br><img src="https://cos.mbrjun.cn/IMGS/2020/09/17/v6.png" alt="  "><br><img src="https://cos.mbrjun.cn/IMGS/2020/09/17/v7.png" alt="  "><br>主界面，还是可以的，深色模式没试<br><img src="https://cos.mbrjun.cn/IMGS/2020/09/17/v8.png" alt="  "><br>兼容性对比<br><img src="https://cos.mbrjun.cn/IMGS/2020/09/17/v9.png" alt="  "></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> VBox </tag>
            
            <tag> VMware Workststiob </tag>
            
            <tag> vm16 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NGINX转发RDP</title>
      <link href="/archives/285/"/>
      <url>/archives/285/</url>
      
        <content type="html"><![CDATA[<p>如果你有多个服务器，但是想要让多个服务器远程桌面使用一个IP，我们可以使用NGINX进行端口转发，1.9以上版本支持端口转发，1.9.15以上版本支持TCP&#x2F;UDP转发</p><span id="more"></span><p>用途也是很广泛的 你可以借此开展你的虚拟主机业务 可以多服务器公用一个IP 可以过滤异常的流量</p><hr><p>笔者这里用的是最新Nginx 1.19.1，使用转发之前要编译好Stream模块<br>安装好就可以用了<br>首先在nginx配置文件中加入一个Stream块然后在Stream块中加入server块<br>然后在server里面配置转发<br>大概就是这样</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">stream &#123;<br>    server &#123;<br>        listen 转发后端口;<br>        proxy_pass 原IP端口;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://cos.mbrjun.cn/IMGS/2020/09/17/sc.png" alt="  "></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> 代理 </tag>
            
            <tag> 端口转发 </tag>
            
            <tag> TCP </tag>
            
            <tag> 协议 </tag>
            
            <tag> 信息技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>普通索引与唯一索引的选择问题</title>
      <link href="/archives/279/"/>
      <url>/archives/279/</url>
      
        <content type="html"><![CDATA[<p>说到这个问题之前，首先我们需要先了解一下<strong>change buffer</strong></p><span id="more"></span><p>当需要更新一个数据页时，如果数据页在内存中就直接更新，而如果这个数据页还没有在内存中的话，在不影响数据一致性的前提下，InooDB 会将这些更新操作缓存在 change buffer 中，这样就不需要从磁盘中读入这个数据页了。在下次查询需要访问这个数据页的时候，将数据页读入内存，然后执行 change buffer 中与这个页有关的操作。通过这种方式就能保证这个数据逻辑的正确性。</p><p>需要说明的是，虽然名字叫作 change buffer，实际上它是可以持久化的数据。也就是说，change buffer 在内存中有拷贝，也会被写入到磁盘上。</p><p>将 change buffer 中的操作应用到原数据页，得到最新结果的过程称为 merge。除了访问这个数据页会触发 merge 外，系统有后台线程会定期 merge。在数据库正常关闭（shutdown）的过程中，也会执行 merge 操作。<br><img src="https://cos.mbrjun.cn/IMGS/2020/09/09/ch.jpg" alt="  "></p><p>显然，如果能够将更新操作先记录在 change buffer，减少读磁盘，语句的执行速度会得到明显的提升。而且，数据读入内存是需要占用 buffer pool 的，所以这种方式还能够避免占用内存，提高内存利用率。</p><p><strong>那么，什么条件下可以使用 change buffer 呢？</strong></p><p>对于唯一索引来说，所有的更新操作都要先判断这个操作是否违反唯一性约束。比如，要插入 (4,400) 这个记录，就要先判断现在表中是否已经存在 k&#x3D;4 的记录，而这必须要将数据页读入内存才能判断。如果都已经读入到内存了，那直接更新内存会更快，就没必要使用 change buffer 了。</p><p>因此，唯一索引的更新就不能使用 change buffer，实际上也只有普通索引可以使用。</p><p>change buffer 用的是 buffer pool 里的内存，因此不能无限增大。change buffer 的大小，可以通过参数 innodb_change_buffer_max_size 来动态设置。这个参数设置为 50 的时候，表示 change buffer 的大小最多只能占用 buffer pool 的 50%。</p><p>因为 merge 的时候是真正进行数据更新的时刻，而 change buffer 的主要目的就是将记录的变更动作缓存下来，所以在一个数据页做 merge 之前，change buffer 记录的变更越多（也就是这个页面上要更新的次数越多），收益就越大。</p><p>因此，对于写多读少的业务来说，页面在写完以后马上被访问到的概率比较小，此时 change buffer 的使用效果最好。这种业务模型常见的就是账单类、日志类的系统。</p><p>回到我们开头的问题，普通索引和唯一索引应该怎么选择。其实，这两类索引在查询能力上是没差别的，主要考虑的是对更新性能的影响。所以，我建议你尽量选择普通索引。</p><p><a href="https://www.cnblogs.com/lamp01/p/10752100.html">查看原文</a></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
            <tag> 索引 </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网上超火的让图片唱歌</title>
      <link href="/archives/274/"/>
      <url>/archives/274/</url>
      
        <content type="html"><![CDATA[<p>本期带来的一个工具的分享——AI变脸</p><span id="more"></span><p>百度网盘的下载链接我会放在这里：<br>链接：<a href="https://pan.baidu.com/s/1BSKelIA0Mrmc-xX5D0h-Iw">https://pan.baidu.com/s/1BSKelIA0Mrmc-xX5D0h-Iw</a><br>提取码：2333<br>文件大小约2GB</p><hr><p>打开之后解压 然后把里面的”插件”如图放到 用户名.torch\models<br><img src="https://cos.mbrjun.cn/IMGS/2020/09/08/to.png" alt="  "><br>然后把里面套着的zip解压 解压到哪都行<br>点开软件 Start Yanderify<br>然后点上面的三个按钮 分别是选择源视频 图片 和输出 注意路径必须是英文的<br>只有NVIDIA显卡 显存2GB+的可以GPU处理 两分钟就可以输出（取决于显卡性能，3090需要约15秒）<br>AMD、INTEL只能CPU处理 需要两个小时左右，AMD NO</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 图片唱歌 </tag>
            
            <tag> AI </tag>
            
            <tag> 换脸 </tag>
            
            <tag> Unravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 常用快捷键</title>
      <link href="/archives/271/"/>
      <url>/archives/271/</url>
      
        <content type="html"><![CDATA[<p>100+个常用快捷键</p><span id="more"></span><p>Ctrl + X 剪切选定项</p><p>Ctrl + C（或 Ctrl + Insert） 复制选定项</p><p>Ctrl + V（或 Shift + Insert） 粘贴选定项</p><p>Ctrl + Z 撤消操作</p><p>Alt + Tab 在打开的应用之间切换</p><p>Alt + F4 关闭活动项，或者退出活动应用</p><p>Windows 徽标键 + L 锁定电脑</p><p>Windows 徽标键 + D 显示和隐藏桌面</p><p>F2 重命名选定项</p><p>F3 在文件资源管理器中搜索文件或文件夹</p><p>F4 在文件资源管理器中显示地址栏列表</p><p>F5 刷新活动窗口</p><p>F6 在窗口中或桌面上循环浏览屏幕元素</p><p>F10 激活活动应用中的菜单栏</p><p>Alt + F8 在登录屏幕上显示密码</p><p>Alt + Esc 以项目打开的顺序循环切换项目</p><p>Alt + 带下划线的字母 执行该字母对应的命令</p><p>Alt + Enter 显示选定项的属性</p><p>Alt + 空格键 为活动窗口打开快捷菜单</p><p>Alt + 向左键 后退</p><p>Alt + 向右键 前进</p><p>Alt + Page Up 向上移动一个屏幕</p><p>Alt + Page Down 向下移动一个屏幕</p><p>Ctrl + F4 关闭活动文档（在全屏模式和允许你同时打开多个文档的应用中）</p><p>Ctrl + A 选择文档或窗口中的所有项目</p><p>Ctrl + D（或 Delete） 删除选定项并将其移动到“回收站”</p><p>Ctrl + R（或 F5） 刷新活动窗口</p><p>Ctrl + Y 重做操作</p><p>Ctrl + 向右键 将光标移动到下一个字词的起始处</p><p>Ctrl + 向左键 将光标移动到上一个字词的起始处</p><p>Ctrl + 向下键 将光标移动到下一个段落的起始处</p><p>Ctrl + 向上键 将光标移动到上一个段落的起始处</p><p>Ctrl + Alt + Tab 使用箭头键在所有打开的应用之间切换</p><p>Ctrl + Alt + Shift + 箭头键 当分组或磁贴在“开始”菜单中获得焦点时，请将其按指定方向移动</p><p>Ctrl + 箭头键（用来移动到某个项目）+ 空格键 在窗口中或桌面上选择多个单独的项目</p><p>Ctrl + Shift 加某个箭头键 选择文本块</p><p>Ctrl + Esc 打开“开始”屏幕</p><p>Ctrl + Shift + Esc 打开任务管理器</p><p>Ctrl + Shift 在提供了多个键盘布局时切换键盘布局</p><p>Ctrl + 空格键 打开或关闭中文输入法编辑器 (IME)</p><p>Shift + F10 显示选定项的快捷菜单</p><p>Shift 加任意箭头键 在窗口中或桌面上选择多个项目，或者在文档中选择文本</p><p>Shift + Delete 无需先将选定项移动到“回收站”，直接将其删除</p><p>向右键 打开右侧的下一个菜单，或者打开子菜单</p><p>向左键 打开左侧的下一个菜单，或者关闭子菜单</p><p>Esc 停止或退出当前任务</p><p>Windows 徽标键键盘快捷方式</p><p>按此键 执行此操作</p><p>Windows 徽标键 打开或关闭“开始”菜单</p><p>Windows 徽标键 + A 打开“操作中心”</p><p>Windows 徽标键 + B 将焦点设置到通知区域</p><p>Windows 徽标键 + Shift + C 在侦听模式下打开 Cortana</p><p>注意： Cortana 仅在某些国家&#x2F;地区提供，并且某些 Cortana 功能可能无法随时随地使用。如果 Cortana 不可用或已关闭，你仍然可以使用搜索。</p><p>Windows 徽标键 + D 显示和隐藏桌面</p><p>Windows 徽标键 + Alt + D 显示和隐藏桌面上的日期和时间</p><p>Windows 徽标键 + E 打开“文件资源管理器”</p><p>Windows 徽标键 + F 打开“反馈中心”</p><p>Windows 徽标键 + G 打开游戏栏（当游戏处于打开状态时）</p><p>Windows 徽标键 + H 打开“共享”超级按钮</p><p>Windows 徽标键 + I 打开“设置”</p><p>Windows 徽标键 + J 将焦点设置到 Windows 提示（如果可用）。</p><p>出现 Windows 提示时，将焦点移到该提示。 再次按这些键盘快捷方式，将焦点移到定位 Windows 提示的屏幕上的元素。</p><p>Windows 徽标键 + K 打开“连接”快速操作</p><p>Windows 徽标键 + L 锁定电脑或切换帐户</p><p>Windows 徽标键 + M 最小化所有窗口</p><p>Windows 徽标键 + O 锁定设备方向</p><p>Windows 徽标键 + P 选择演示显示模式</p><p>Windows 徽标键 + R 打开“运行”对话框</p><p>Windows 徽标键 + S 打开搜素</p><p>Windows 徽标键 + T 在任务栏上循环切换应用</p><p>Windows 徽标键 + U 打开“轻松使用设置中心”</p><p>Windows 徽标键 + V 循环切换通知</p><p>Windows 徽标键 + Shift + V 以相反的顺序循环切换通知</p><p>Windows 徽标键 + X 打开“快速链接”菜单</p><p>Windows 徽标键 + Z 显示在以全屏模式呈现的应用中可用的命令</p><p>Windows 徽标键 + 逗号 (,) 临时快速查看桌面</p><p>Windows 徽标键 + Pause 显示“系统属性”对话框</p><p>Windows 徽标键 + Ctrl + F 搜索电脑（如果你位于网络中）</p><p>Windows 徽标键 + Shift + M 将最小化的窗口还原到桌面</p><p>Windows 徽标键 + 数字 打开桌面，并启动固定到任务栏的位于该数字所表示位置的应用。如果该应用已在运行，则切换到该应用。</p><p>Windows 徽标键 + Shift + 数字 打开桌面，并启动固定到任务栏的位于该数字所表示位置的应用的新实例</p><p>Windows 徽标键 + Ctrl + 数字 打开桌面，并切换到固定到任务栏的位于该数字所表示位置的应用的最后一个活动窗口</p><p>Windows 徽标键 + Alt + 数字 打开桌面，并打开固定到任务栏的位于该数字所表示位置的应用的跳转列表</p><p>Windows 徽标键 + Ctrl + Shift + 数字 打开桌面，并以管理员身份打开位于任务栏上给定位置的应用的新实例</p><p>Windows 徽标键 + Tab 打开“任务视图”</p><p>Windows 徽标键 + 向上键 最大化窗口</p><p>Windows 徽标键 + 向下键 从屏幕中删除当前应用或最小化桌面窗口</p><p>Windows 徽标键 + 向左键 将应用或桌面窗口最大化到屏幕左侧</p><p>Windows 徽标键 + 向右键 将应用或桌面窗口最大化到屏幕右侧</p><p>Windows 徽标键 + Home 最小化除活动桌面窗口以外的所有窗口（在第二道笔划时还原所有窗口）</p><p>Windows 徽标键 + Shift + 向上键 将桌面窗口拉伸到屏幕的顶部和底部</p><p>Windows 徽标键 + Shift + 向下键 在垂直方向上还原&#x2F;最小化活动桌面窗口，同时保持宽度不变</p><p>Windows 徽标键 + Shift + 向左键或向右键 将桌面中的应用或窗口从一个监视器移动到另一个监视器</p><p>Windows 徽标键 + 空格键 切换输入语言和键盘布局</p><p>Windows 徽标键 + Ctrl + 空格键 更改为以前选择的输入</p><p>Windows 徽标键 + Enter 打开“讲述人”</p><p>Windows 徽标键 + 正斜杠 (&#x2F;) 启动 IME 重新转换</p><p>Windows 徽标键 + 加号 (+) 或减号 (-) 使用“放大镜”放大或缩小</p><p>Windows 徽标键 + Esc 退出“放大镜”</p><p>命令提示符键盘快捷方式</p><p>按此键 执行此操作</p><p>Ctrl + C（或 Ctrl + Insert） 复制选定文本</p><p>Ctrl + V（或 Shift + Insert） 粘贴选定文本</p><p>Ctrl + M 进入标记模式</p><p>Alt + 选择键 在阻止模式中开始选择</p><p>箭头键 按指定方向移动光标</p><p>Page Up 将光标向上移动一页</p><p>Page Down 将光标向下移动一页</p><p>Ctrl + Home（标记模式） 将光标移动到缓冲区的起始处</p><p>Ctrl + End（标记模式） 将光标移动到缓冲区的末尾</p><p>Ctrl + 向上键 在输出历史记录中向上移动一行</p><p>Ctrl + 向下键 在输出历史记录中向下移动一行</p><p>Ctrl + Home（历史记录导航） 如果命令行为空，则将视口移动到缓冲区顶部。否则，删除命令行中光标左侧的所有字符。</p><p>Ctrl + End（历史记录导航） 如果命令行为空，则将视口移动到命令行。否则，删除命令行中光标右侧的所有字符。</p><p>对话框键盘快捷方式</p><p>按此键 执行此操作</p><p>F4 显示活动列表中的项目</p><p>Ctrl + Tab 在选项卡上向前移动</p><p>Ctrl + Shift + Tab 在选项卡上向后移动</p><p>Ctrl + 数字（数字 1 到 9） 移动到第 n 个选项卡</p><p>Tab 在选项上向前移动</p><p>Shift + Tab 在选项上向后移动</p><p>Alt + 带下划线的字母 执行与该字母一起使用的命令（或选择相应的选项）</p><p>空格键 如果活动选项是复选框，则选中或清除该复选框</p><p>Backspace 如果在“另存为”或“打开”对话框中选中某个文件夹，则打开上一级文件夹</p><p>箭头键 如果活动选项是一组选项按钮，则选择某个按钮</p><p>文件资源管理器键盘快捷方式</p><p>按此键 执行此操作</p><p>Alt + D 选择地址栏</p><p>Ctrl + E 选择搜索框</p><p>Ctrl + F 选择搜索框</p><p>Ctrl + N 打开新窗口</p><p>Ctrl + W 关闭活动窗口</p><p>Ctrl + 鼠标滚轮 更改文件和文件夹图标的大小及外观</p><p>Ctrl + Shift + E 显示选定文件夹上的所有文件夹</p><p>Ctrl + Shift + N 创建一个新文件夹</p><p>Num Lock + 星号 (*) 显示选定文件夹下的所有子文件夹</p><p>Num Lock + 加号 (+) 显示选定文件夹的内容</p><p>Num Lock + 减号 (-) 折叠选定文件夹</p><p>Alt + P 显示预览面板</p><p>Alt + Enter 打开选定项的“属性”对话框</p><p>Alt + 向右键 查看下一个文件夹</p><p>Alt + 向上键 查看上一级文件夹</p><p>Alt + 向左键 查看上一个文件夹</p><p>Backspace 查看上一个文件夹</p><p>向右键 显示当前选项（如果它处于折叠状态），或者选择第一个子文件夹</p><p>向左键 折叠当前选项（如果它处于展开状态），或者选择其父文件夹</p><p>End 显示活动窗口的底端</p><p>Home 显示活动窗口的顶端</p><p>F11 最大化或最小化活动窗口</p><p>虚拟桌面键盘快捷方式</p><p>按此键 执行此操作</p><p>Windows 徽标键 + Tab 打开任务视图</p><p>Windows 徽标键 + Ctrl + D 添加虚拟桌面</p><p>Windows 徽标键 + Ctrl + 向右键 在你于右侧创建的虚拟桌面之间进行切换</p><p>Windows 徽标键 + Ctrl + 向左键 在你于左侧创建的虚拟桌面之间进行切换</p><p>Windows 徽标键 + Ctrl + F4 关闭你正在使用的虚拟桌面</p><p>任务栏键盘快捷方式</p><p>按此键 执行此操作</p><p>Shift + 单击某个任务栏按钮 打开某个应用，或快速打开应用的另一个实例</p><p>Ctrl + Shift + 单击某个任务栏按钮 以管理员身份打开应用</p><p>Shift + 右键单击某个任务栏按钮 显示该应用的窗口菜单</p><p>Shift + 右键单击某个已分组的任务栏按钮 显示该组的窗口菜单</p><p>Ctrl + 单击某个已分组的任务栏按钮 循环切换该组的窗口</p><p>设置键盘快捷方式</p><p>按此键 执行此操作</p><p>Windows 徽标键 + I 打开设置</p><p>Backspace 回退到“设置”主页</p><p>在带有搜索框的任何页面上键入 搜索设置</p><p>Windows 10 应用中的键盘快捷方式</p><p>在许多应用（如照片、Groove 和地图）中，当你将鼠标指针悬停在某个按钮上时，工具提示中就会显示快捷方式。在其他应用（如画图、写字板和 Office）中，按 Alt 键或 F10 即可显示标记了键盘快捷方式的命令。如果菜单中某个字母有下划线，请同时按下 Alt 键和带有下划线的键，而不是选择该菜单项。例如，按 Ctrl + N 可在“画图”中创建新图片。</p><p>温馨提示：</p><p>借助触摸键盘，按下 Ctrl 键即可看到一些快捷方式。</p><p>以下是 Windows 10 中内置的某些 Microsoft 应用中常见的键盘快捷方式。这包括 Microsoft Edge、计算器、游戏栏、Groove、地图、画图、照片、音乐和电视以及写字板。</p><p>Microsoft Edge 键盘快捷方式</p><p>按此键 执行此操作</p><p>Ctrl + D 将当前站点添加到收藏夹或阅读列表</p><p>Ctrl + I 打开“收藏夹”窗格</p><p>Ctrl + J 打开“下载”窗格</p><p>Ctrl + H 打开“历史记录”窗格</p><p>Ctrl + P 打印当前页面</p><p>Ctrl + F 在页面上查找</p><p>Alt + C 打开 Cortana</p><p>注意</p><p>Cortana 仅在特定的国家&#x2F;地区中提供，并且某些 Cortana 功能可能不支持随时随地使用。如果 Cortana 不可用或已关闭，你仍然可以使用搜索。</p><p>Ctrl + Shift + R 进入阅读视图</p><p>Ctrl + T 打开一个新选项卡</p><p>Ctrl + Shift + T 重新打开最近关闭的选项卡</p><p>Ctrl + W 或 Ctrl + F4 关闭活动选项卡</p><p>Ctrl + K 复制选项卡</p><p>Ctrl + N 打开新窗口</p><p>Ctrl + Shift + P 打开新的 InPrivate 浏览窗口</p><p>Ctrl + Tab 切换到下一个选项卡</p><p>Ctrl + Shift + Tab 切换到上一个选项卡</p><p>Ctrl + 1、2、3，依此类推 切换到特定选项卡号</p><p>Ctrl + 9 切换到最后一个选项卡</p><p>Ctrl + 加号 (+) 放大 (25%)</p><p>Ctrl + 减号 (-) 缩小 (25%)</p><p>Ctrl + 0 重置缩放级别</p><p>Backspace 或 Alt + 向左键 返回</p><p>Alt + 向右键 前进</p><p>F5 或 Ctrl + R 刷新页面</p><p>Esc 停止加载页面</p><p>Ctrl + L 或 F4 或 Alt + D 选中地址栏</p><p>Ctrl + Shift + L 在新选项卡中打开地址栏查询</p><p>Ctrl + E 在地址栏中打开搜索查询</p><p>Ctrl + Enter 在地址栏中将“www.”添加到所键入文本的开头，将“.com”添加到所键入文本的末尾</p><p>Ctrl + 单击 在新选项卡中打开链接</p><p>Ctrl + Shift + 单击 在新选项卡中打开链接并切换到该选项卡</p><p>Alt + Shift + 单击 在新窗口中打开链接</p><p>Ctrl + Shift + M 开始创建 Web 笔记</p><p>Ctrl + Alt + M 将所选内容复制到 Web 笔记中</p><p>F12 打开 F12 开发人员工具</p><p>Ctrl + U 查看源</p><p>F6 在网页内容和地址栏之间切换焦点</p><p>F7 为活动选项卡打开“插入光标浏览”</p><p>Ctrl + Shift + Delete 显示用于清除浏览数据的控件</p><p>“计算器”键盘快捷方式</p><p>按此键 执行此操作</p><p>Alt + 1 切换到“标准型”模式</p><p>Alt + 2 切换到“科学型”模式</p><p>Alt + 3 切换到“程序员”模式</p><p>Ctrl + M 存储在内存中</p><p>Ctrl + P 添加到内存</p><p>Ctrl + Q 从内存中减去</p><p>Ctrl + R 从内存中重新调用</p><p>Ctrl + L 清除内存</p><p>F9 选择 ±</p><p>R 选择 1&#x2F;x</p><p>@ 求平方根</p><p>Delete 选择 CE</p><p>Ctrl + H 打开或关闭计算历史记录</p><p>向上键 在“历史记录”列表中上移</p><p>向下键 在“历史记录”列表中下移</p><p>Ctrl + Shift + D 清除历史记录</p><p>F3 在“科学型”模式下选择 DEG</p><p>F4 在“科学型”模式下选择 RAD</p><p>F5 在“科学型”模式下选择 GRAD</p><p>Ctrl + G 在“科学型”模式下选择 10x</p><p>Ctrl + O 在“科学型”模式下选择 cosh</p><p>Ctrl + S 在“科学型”模式下选择 sinh</p><p>Ctrl + T 在“科学型”模式下选择 tanh</p><p>Shift + S 在“科学型”模式下选择 sin-1</p><p>Shift + O 在“科学型”模式下选择 cos-1</p><p>Shift + T 在“科学型”模式下选择“tan-1”</p><p>Ctrl + Y 在“科学型”模式下选择 y√x</p><p>D 在“科学型”模式下选择 Mod</p><p>L 在“科学型”模式下选择 log</p><p>M 在“科学型”模式下选择 dms</p><p>N 在“科学型”模式下选择 ln</p><p>Ctrl + N 在“科学型”模式下选择 ex</p><p>O 在“科学型”模式下选择 cos</p><p>P 在“科学型”模式下选择 Pi</p><p>Q 在“科学型”模式下选择 x2</p><p>S 在“科学型”模式下选择 sin</p><p>T 在“科学型”模式下选择 tan</p><p>V 在“科学型”模式下选择 F-E</p><p>X 在“科学型”模式下选择 Exp</p><p>Y, ^ 在“科学型”模式下选择 xy<br>在“科学型”模式下选择 x3</p><p>; 在“科学型”模式下选择 Int</p><p>! 在“科学型”模式下选择 n!</p><p>F2 在“程序员”模式下选择 DWORD</p><p>F3 在“程序员”模式下选择 WORD</p><p>F4 在“程序员”模式下选择 BYTE</p><p>F5 在“程序员”模式下选择 HEX</p><p>F6 在“程序员”模式下选择 DEC</p><p>F7 在“程序员”模式下选择 OCT</p><p>F8 在“程序员”模式下选择 BIN</p><p>F12 在“程序员”模式下选择 QWORD</p><p>A-F 在“程序员”模式下选择 A-F</p><p>J 在“程序员”模式下选择 RoL</p><p>K 在“程序员”模式下选择 RoR</p><p>&lt; 在“程序员”模式下选择 Lsh</p><pre><code>在“程序员”模式下选择 Rsh</code></pre><p>% 在“程序员”模式下选择 Mod</p><p>| 在“程序员”模式下选择 Or</p><p>^ 在“程序员”模式下选择 Xor</p><p>~ 在“程序员”模式下选择 Not</p><p>&amp; 在“程序员”模式下选择 And</p><p>空格键 在“程序员”模式下切换位值</p><p>游戏栏键盘快捷方式</p><p>按此键 执行此操作</p><p>Windows 徽标键 + G 打开游戏栏（当游戏处于打开状态时）</p><p>Windows 徽标键 + Alt + G 录制最后 30 秒</p><p>Windows 徽标键 + Alt + R 开始或停止录制</p><p>Windows 徽标键 + Alt + Print Screen 获取你的游戏的屏幕截图</p><p>Windows 徽标键 + Alt + T 显示&#x2F;隐藏录制计时器</p><p>Groove 键盘快捷方式</p><p>按此键 执行此操作</p><p>Ctrl + P 播放或暂停</p><p>Ctrl + F 跳到下一曲</p><p>Ctrl + B 重新播放当前歌曲&#x2F;跳到上一曲</p><p>F9 调高音量</p><p>F8 调低音量</p><p>F7 静音</p><p>Ctrl + Enter 选择项目并进入选择模式</p><p>Ctrl + A 全选</p><p>Delete 删除选定项</p><p>Ctrl + Shift + P 播放选定项</p><p>Ctrl + T 打开或关闭“重复播放”</p><p>Ctrl + H 打开或关闭“无序播放”</p><p>Ctrl + Q 搜索</p><p>“地图”键盘快捷方式</p><p>按此键 执行此操作</p><p>箭头键 按任意方向平移地图</p><p>Ctrl + 加号或减号键（+ 或 -） 放大或缩小</p><p>Ctrl + 向左键或向右键 旋转</p><p>Ctrl + 向上键或向下键 倾斜</p><pre><code>或 – 键 在 3D 城市视图中放大或缩小</code></pre><p>Page Up 或 Page Down 在 3D 城市视图中推远或拉近</p><p>Ctrl + Y 在鸟瞰图和道路视图之间切换地图视图</p><p>Ctrl + Home 在你的当前位置上居中放置地图</p><p>Ctrl + D 获取路线</p><p>Ctrl + F 搜索</p><p>Ctrl + M 最小化活动选项卡</p><p>Ctrl + P 打印</p><p>Ctrl + T 显示或隐藏路况</p><p>Backspace 返回</p><p>Ctrl + H 共享</p><p>Ctrl + L 将焦点移动到地图</p><p>Ctrl + W 关闭活动选项卡</p><p>Ctrl + Tab 转到下一个选项卡</p><p>Ctrl + Shift + Tab 转到上一个选项卡</p><p>Ctrl + S 显示或隐藏街道</p><p>Ctrl + C 复制到剪贴板</p><p>“电影和电视”键盘快捷方式</p><p>按此键 执行此操作</p><p>Alt + Enter 全屏播放</p><p>Esc 退出全屏</p><p>Enter 选择焦点中的内容</p><p>空格键</p><p>或</p><p>Ctrl + P 播放或暂停（当视频处于焦点中时）</p><p>Alt + 向左键</p><p>或</p><p>Windows 徽标键 + Backspace 返回</p><p>Ctrl + T 打开或关闭“重复播放”</p><p>F7 静音</p><p>F8 调低音量</p><p>F9 调高音量</p><p>“画图”键盘快捷方式</p><p>按此键 执行此操作</p><p>F11 以全屏模式查看图片</p><p>F12 将此图片另存为新文件</p><p>Ctrl + A 选择整个图片</p><p>Ctrl + B 将所选文本改为粗体</p><p>Ctrl + C 将选择内容复制到剪贴板</p><p>Ctrl + E 打开“属性”对话框</p><p>Ctrl + G 显示或隐藏网格线</p><p>Ctrl + I 将所选文本改为斜体</p><p>Ctrl + N 创建新图片</p><p>Ctrl + O 打开现有图片</p><p>Ctrl + P 打印图片</p><p>Ctrl + R 显示或隐藏标尺</p><p>Ctrl + S 将更改保存到图片</p><p>Ctrl + U 为所选文本添加下划线</p><p>Ctrl + V 从剪贴板粘贴选择内容</p><p>Ctrl + W 打开“调整大小和扭曲”对话框</p><p>Ctrl + X 剪切选择内容</p><p>Ctrl + Y 恢复更改</p><p>Ctrl + Z 撤销更改</p><p>Ctrl + 加号 (+) 将画笔、直线或形状轮廓的宽度增加一个像素</p><p>Ctrl + 减号 (-) 将画笔、直线或形状轮廓的宽度减少一个像素</p><p>Ctrl + Page Up 放大</p><p>Ctrl + Page Down 缩小</p><p>Alt + F4 关闭图片及其“画图”窗口</p><p>向右键 将选择内容或活动形状向右移动一个像素</p><p>向左键 将选择内容或活动形状向左移动一个像素</p><p>向下键 将选择内容或活动形状向下移动一个像素</p><p>向上键 将选择内容或活动形状向上移动一个像素</p><p>Shift + F10 显示上下文菜单</p><p>“照片”键盘快捷方式</p><p>按此键 执行此操作</p><p>空格键（在“集锦”中） 选择项目并进入选择模式</p><p>Enter（从选择模式） 在处于选择模式下时选择项目</p><p>空格键（查看照片） 显示或隐藏命令</p><p>空格键（查看视频） 播放或暂停视频</p><p>箭头键（在集锦中） 向上、向下、向左或向右滚动</p><p>左箭头或右箭头键（位于单个项目或幻灯片放映上） 显示下一个或上一个项目</p><p>箭头键（位于缩放的照片上） 在照片内移动</p><p>Ctrl + 加号或减号（+ 或 -） 放大或缩小（查看照片时）</p><p>Ctrl + 0 重置照片的缩放</p><p>Esc 返回到上一个屏幕</p><p>Ctrl + S 保存</p><p>Ctrl + P 打印</p><p>Ctrl + C 复制</p><p>Ctrl + R（查看或编辑） 旋转照片</p><p>E（查看照片） 增强照片效果</p><p>Ctrl + Z（编辑） 撤销更改</p><p>Ctrl + Y（编辑） 恢复更改</p><p>Ctrl + &#x2F;（编辑） 查看原件</p><p>Shift + 箭头键 调整裁剪或选择性对焦区域的大小</p><p>Ctrl + 箭头键 移动裁剪或选择性对焦区域</p><p>F5（查看项目） 开始幻灯片放映</p><p>Alt + Enter 查看文件信息</p><p>Ctrl + L 设置为锁屏界面</p><p>Ctrl + N（在“相册”视图中） 创建新相册</p><p>Ctrl + R（在“相册”视图中） 删除相册</p><p>Ctrl + D 将选定项添加到相册</p><p>Ctrl + U 从相册中删除选定项</p><p>“写字板”键盘快捷方式</p><p>按此键 执行此操作</p><p>F3 在“查找”对话框中搜索文本的下一个实例</p><p>F12 将此文档另存为新文件</p><p>Ctrl + 1 设置单倍行距</p><p>Ctrl + 2 设置双倍行距</p><p>Ctrl + 5 将行距设置为 1.5</p><p>Ctrl + A 全选</p><p>Ctrl + B 将所选文本改为粗体</p><p>Ctrl + C 将选择内容复制到剪贴板</p><p>Ctrl + D 插入 Microsoft 绘图</p><p>Ctrl + E 向中心对齐文本</p><p>Ctrl + F 在文档中搜索文本</p><p>Ctrl + H 在文档中替换文本</p><p>Ctrl + I 将所选文本改为斜体</p><p>Ctrl + J 两端对齐文本</p><p>Ctrl + L 向左对齐文本</p><p>Ctrl + N 创建新文档</p><p>Ctrl + O 打开现有文档</p><p>Ctrl + P 打印文档</p><p>Ctrl + R 向右对齐文本</p><p>Ctrl + S 将更改保存到文档</p><p>Ctrl + U 为所选文本添加下划线</p><p>Ctrl + V 从剪贴板粘贴选择内容</p><p>Ctrl + X 剪切选择内容</p><p>Ctrl + Y 恢复更改</p><p>Ctrl + Z 撤销更改</p><p>Ctrl + 等于号 (&#x3D;) 使所选文本成为下标</p><p>Ctrl + Shift + 等于号 (&#x3D;) 使所选文本成为上标</p><p>Ctrl + Shift + 大于号 (&gt;) 增加字体大小</p><p>Ctrl + Shift + 小于号 (&lt;) 减小字体大小</p><p>Ctrl + Shift + A 将字符更改为全部使用大写字母</p><p>Ctrl + Shift + L 更改项目符号样式</p><p>Ctrl + 向左键 将光标向左移动一个字</p><p>Ctrl + 向右键 将光标向右移动一个字</p><p>Ctrl + 向上键 将光标移动到上一行</p><p>Ctrl + 向下键 将光标移动到下一行</p><p>Ctrl + Home 移动到文档的开头</p><p>Ctrl + End 移动到文档的末尾</p><p>Ctrl + Page Up 向上移动一个页面</p><p>Ctrl + Page Down 向下移动一个页面</p><p>Ctrl + Delete 删除下一个字</p><p>Alt + F4 关闭“写字板”</p><p>Shift + F10 显示上下文菜单</p><p>Windows 10 用于辅助功能的 Windows 键盘快捷方式</p><p>辅助功能快捷方式可帮助你将电脑与键盘或辅助设备结合使用。下面是 Windows 10 中辅助技术的键盘快捷方式列表，包括“放大镜”、“高对比度”等。</p><p>“放大镜”键盘快捷方式</p><p>按此键 执行此操作</p><p>Windows 徽标键 + 加号 (+) 或减号 (-) 放大或缩小</p><p>Ctrl + Alt + 空格键 以全屏模式预览桌面</p><p>Ctrl + ALT + D 切换到停靠模式</p><p>Ctrl + ALT + F 切换到全屏模式</p><p>Ctrl + ALT + I 反色</p><p>Ctrl + ALT + L 切换到镜头模式</p><p>Ctrl + ALT + R 调整镜头大小</p><p>Ctrl + Alt + 箭头键 按箭头键的方向平移</p><p>Windows 徽标键 + Esc 退出“放大镜”</p><p>其他辅助功能键盘快捷方式</p><p>按此键 执行此操作</p><p>按右 Shift 八秒钟 打开和关闭筛选键</p><p>左 Alt + 左 Shift + Print Screen 打开或关闭高对比度</p><p>左 Alt + 左 Shift + Num Lock 打开或关闭鼠标键</p><p>按 Shift 五次 打开或关闭粘滞键</p><p>按 Num Lock 五秒钟 打开或关闭切换键</p><p>Windows 徽标键 + U 打开“轻松使用设置中心”<br><img src="https://cos.mbrjun.cn/IMGS/2020/09/06/au.png" alt="  "></p><p><a href="https://blog.huixcwg.net/48---">查看原文</a></p><h2 id="title-Windowsの快捷键date-2020-09-06-21-45-32updated-2020-09-06-21-48-15categories-Windows-10tags-win10-windows-快捷键-PC-电脑"><a href="#title-Windowsの快捷键date-2020-09-06-21-45-32updated-2020-09-06-21-48-15categories-Windows-10tags-win10-windows-快捷键-PC-电脑" class="headerlink" title="title: Windowsの快捷键date: 2020-09-06 21:45:32updated: 2020-09-06 21:48:15categories: Windows 10tags:- win10- windows,快捷键,PC,电脑"></a>title: Windowsの快捷键<br>date: 2020-09-06 21:45:32<br>updated: 2020-09-06 21:48:15<br>categories: Windows 10<br>tags:<br>- win10<br>- windows,快捷键,PC,电脑</h2><p>Ctrl + X 剪切选定项</p><p>Ctrl + C（或 Ctrl + Insert） 复制选定项</p><p>Ctrl + V（或 Shift + Insert） 粘贴选定项</p><p>Ctrl + Z 撤消操作</p><p>Alt + Tab 在打开的应用之间切换</p><p>Alt + F4 关闭活动项，或者退出活动应用</p><p>Windows 徽标键 + L 锁定电脑</p><p>Windows 徽标键 + D 显示和隐藏桌面</p><p>F2 重命名选定项</p><p>F3 在文件资源管理器中搜索文件或文件夹</p><p>F4 在文件资源管理器中显示地址栏列表</p><p>F5 刷新活动窗口</p><p>F6 在窗口中或桌面上循环浏览屏幕元素</p><p>F10 激活活动应用中的菜单栏</p><p>Alt + F8 在登录屏幕上显示密码</p><p>Alt + Esc 以项目打开的顺序循环切换项目</p><p>Alt + 带下划线的字母 执行该字母对应的命令</p><p>Alt + Enter 显示选定项的属性</p><p>Alt + 空格键 为活动窗口打开快捷菜单</p><p>Alt + 向左键 后退</p><p>Alt + 向右键 前进</p><p>Alt + Page Up 向上移动一个屏幕</p><p>Alt + Page Down 向下移动一个屏幕</p><p>Ctrl + F4 关闭活动文档（在全屏模式和允许你同时打开多个文档的应用中）</p><p>Ctrl + A 选择文档或窗口中的所有项目</p><p>Ctrl + D（或 Delete） 删除选定项并将其移动到“回收站”</p><p>Ctrl + R（或 F5） 刷新活动窗口</p><p>Ctrl + Y 重做操作</p><p>Ctrl + 向右键 将光标移动到下一个字词的起始处</p><p>Ctrl + 向左键 将光标移动到上一个字词的起始处</p><p>Ctrl + 向下键 将光标移动到下一个段落的起始处</p><p>Ctrl + 向上键 将光标移动到上一个段落的起始处</p><p>Ctrl + Alt + Tab 使用箭头键在所有打开的应用之间切换</p><p>Ctrl + Alt + Shift + 箭头键 当分组或磁贴在“开始”菜单中获得焦点时，请将其按指定方向移动</p><p>Ctrl + 箭头键（用来移动到某个项目）+ 空格键 在窗口中或桌面上选择多个单独的项目</p><p>Ctrl + Shift 加某个箭头键 选择文本块</p><p>Ctrl + Esc 打开“开始”屏幕</p><p>Ctrl + Shift + Esc 打开任务管理器</p><p>Ctrl + Shift 在提供了多个键盘布局时切换键盘布局</p><p>Ctrl + 空格键 打开或关闭中文输入法编辑器 (IME)</p><p>Shift + F10 显示选定项的快捷菜单</p><p>Shift 加任意箭头键 在窗口中或桌面上选择多个项目，或者在文档中选择文本</p><p>Shift + Delete 无需先将选定项移动到“回收站”，直接将其删除</p><p>向右键 打开右侧的下一个菜单，或者打开子菜单</p><p>向左键 打开左侧的下一个菜单，或者关闭子菜单</p><p>Esc 停止或退出当前任务</p><p>Windows 徽标键键盘快捷方式</p><p>按此键 执行此操作</p><p>Windows 徽标键 打开或关闭“开始”菜单</p><p>Windows 徽标键 + A 打开“操作中心”</p><p>Windows 徽标键 + B 将焦点设置到通知区域</p><p>Windows 徽标键 + Shift + C 在侦听模式下打开 Cortana</p><p>注意： Cortana 仅在某些国家&#x2F;地区提供，并且某些 Cortana 功能可能无法随时随地使用。如果 Cortana 不可用或已关闭，你仍然可以使用搜索。</p><p>Windows 徽标键 + D 显示和隐藏桌面</p><p>Windows 徽标键 + Alt + D 显示和隐藏桌面上的日期和时间</p><p>Windows 徽标键 + E 打开“文件资源管理器”</p><p>Windows 徽标键 + F 打开“反馈中心”</p><p>Windows 徽标键 + G 打开游戏栏（当游戏处于打开状态时）</p><p>Windows 徽标键 + H 打开“共享”超级按钮</p><p>Windows 徽标键 + I 打开“设置”</p><p>Windows 徽标键 + J 将焦点设置到 Windows 提示（如果可用）。</p><p>出现 Windows 提示时，将焦点移到该提示。 再次按这些键盘快捷方式，将焦点移到定位 Windows 提示的屏幕上的元素。</p><p>Windows 徽标键 + K 打开“连接”快速操作</p><p>Windows 徽标键 + L 锁定电脑或切换帐户</p><p>Windows 徽标键 + M 最小化所有窗口</p><p>Windows 徽标键 + O 锁定设备方向</p><p>Windows 徽标键 + P 选择演示显示模式</p><p>Windows 徽标键 + R 打开“运行”对话框</p><p>Windows 徽标键 + S 打开搜素</p><p>Windows 徽标键 + T 在任务栏上循环切换应用</p><p>Windows 徽标键 + U 打开“轻松使用设置中心”</p><p>Windows 徽标键 + V 循环切换通知</p><p>Windows 徽标键 + Shift + V 以相反的顺序循环切换通知</p><p>Windows 徽标键 + X 打开“快速链接”菜单</p><p>Windows 徽标键 + Z 显示在以全屏模式呈现的应用中可用的命令</p><p>Windows 徽标键 + 逗号 (,) 临时快速查看桌面</p><p>Windows 徽标键 + Pause 显示“系统属性”对话框</p><p>Windows 徽标键 + Ctrl + F 搜索电脑（如果你位于网络中）</p><p>Windows 徽标键 + Shift + M 将最小化的窗口还原到桌面</p><p>Windows 徽标键 + 数字 打开桌面，并启动固定到任务栏的位于该数字所表示位置的应用。如果该应用已在运行，则切换到该应用。</p><p>Windows 徽标键 + Shift + 数字 打开桌面，并启动固定到任务栏的位于该数字所表示位置的应用的新实例</p><p>Windows 徽标键 + Ctrl + 数字 打开桌面，并切换到固定到任务栏的位于该数字所表示位置的应用的最后一个活动窗口</p><p>Windows 徽标键 + Alt + 数字 打开桌面，并打开固定到任务栏的位于该数字所表示位置的应用的跳转列表</p><p>Windows 徽标键 + Ctrl + Shift + 数字 打开桌面，并以管理员身份打开位于任务栏上给定位置的应用的新实例</p><p>Windows 徽标键 + Tab 打开“任务视图”</p><p>Windows 徽标键 + 向上键 最大化窗口</p><p>Windows 徽标键 + 向下键 从屏幕中删除当前应用或最小化桌面窗口</p><p>Windows 徽标键 + 向左键 将应用或桌面窗口最大化到屏幕左侧</p><p>Windows 徽标键 + 向右键 将应用或桌面窗口最大化到屏幕右侧</p><p>Windows 徽标键 + Home 最小化除活动桌面窗口以外的所有窗口（在第二道笔划时还原所有窗口）</p><p>Windows 徽标键 + Shift + 向上键 将桌面窗口拉伸到屏幕的顶部和底部</p><p>Windows 徽标键 + Shift + 向下键 在垂直方向上还原&#x2F;最小化活动桌面窗口，同时保持宽度不变</p><p>Windows 徽标键 + Shift + 向左键或向右键 将桌面中的应用或窗口从一个监视器移动到另一个监视器</p><p>Windows 徽标键 + 空格键 切换输入语言和键盘布局</p><p>Windows 徽标键 + Ctrl + 空格键 更改为以前选择的输入</p><p>Windows 徽标键 + Enter 打开“讲述人”</p><p>Windows 徽标键 + 正斜杠 (&#x2F;) 启动 IME 重新转换</p><p>Windows 徽标键 + 加号 (+) 或减号 (-) 使用“放大镜”放大或缩小</p><p>Windows 徽标键 + Esc 退出“放大镜”</p><p>命令提示符键盘快捷方式</p><p>按此键 执行此操作</p><p>Ctrl + C（或 Ctrl + Insert） 复制选定文本</p><p>Ctrl + V（或 Shift + Insert） 粘贴选定文本</p><p>Ctrl + M 进入标记模式</p><p>Alt + 选择键 在阻止模式中开始选择</p><p>箭头键 按指定方向移动光标</p><p>Page Up 将光标向上移动一页</p><p>Page Down 将光标向下移动一页</p><p>Ctrl + Home（标记模式） 将光标移动到缓冲区的起始处</p><p>Ctrl + End（标记模式） 将光标移动到缓冲区的末尾</p><p>Ctrl + 向上键 在输出历史记录中向上移动一行</p><p>Ctrl + 向下键 在输出历史记录中向下移动一行</p><p>Ctrl + Home（历史记录导航） 如果命令行为空，则将视口移动到缓冲区顶部。否则，删除命令行中光标左侧的所有字符。</p><p>Ctrl + End（历史记录导航） 如果命令行为空，则将视口移动到命令行。否则，删除命令行中光标右侧的所有字符。</p><p>对话框键盘快捷方式</p><p>按此键 执行此操作</p><p>F4 显示活动列表中的项目</p><p>Ctrl + Tab 在选项卡上向前移动</p><p>Ctrl + Shift + Tab 在选项卡上向后移动</p><p>Ctrl + 数字（数字 1 到 9） 移动到第 n 个选项卡</p><p>Tab 在选项上向前移动</p><p>Shift + Tab 在选项上向后移动</p><p>Alt + 带下划线的字母 执行与该字母一起使用的命令（或选择相应的选项）</p><p>空格键 如果活动选项是复选框，则选中或清除该复选框</p><p>Backspace 如果在“另存为”或“打开”对话框中选中某个文件夹，则打开上一级文件夹</p><p>箭头键 如果活动选项是一组选项按钮，则选择某个按钮</p><p>文件资源管理器键盘快捷方式</p><p>按此键 执行此操作</p><p>Alt + D 选择地址栏</p><p>Ctrl + E 选择搜索框</p><p>Ctrl + F 选择搜索框</p><p>Ctrl + N 打开新窗口</p><p>Ctrl + W 关闭活动窗口</p><p>Ctrl + 鼠标滚轮 更改文件和文件夹图标的大小及外观</p><p>Ctrl + Shift + E 显示选定文件夹上的所有文件夹</p><p>Ctrl + Shift + N 创建一个新文件夹</p><p>Num Lock + 星号 (*) 显示选定文件夹下的所有子文件夹</p><p>Num Lock + 加号 (+) 显示选定文件夹的内容</p><p>Num Lock + 减号 (-) 折叠选定文件夹</p><p>Alt + P 显示预览面板</p><p>Alt + Enter 打开选定项的“属性”对话框</p><p>Alt + 向右键 查看下一个文件夹</p><p>Alt + 向上键 查看上一级文件夹</p><p>Alt + 向左键 查看上一个文件夹</p><p>Backspace 查看上一个文件夹</p><p>向右键 显示当前选项（如果它处于折叠状态），或者选择第一个子文件夹</p><p>向左键 折叠当前选项（如果它处于展开状态），或者选择其父文件夹</p><p>End 显示活动窗口的底端</p><p>Home 显示活动窗口的顶端</p><p>F11 最大化或最小化活动窗口</p><p>虚拟桌面键盘快捷方式</p><p>按此键 执行此操作</p><p>Windows 徽标键 + Tab 打开任务视图</p><p>Windows 徽标键 + Ctrl + D 添加虚拟桌面</p><p>Windows 徽标键 + Ctrl + 向右键 在你于右侧创建的虚拟桌面之间进行切换</p><p>Windows 徽标键 + Ctrl + 向左键 在你于左侧创建的虚拟桌面之间进行切换</p><p>Windows 徽标键 + Ctrl + F4 关闭你正在使用的虚拟桌面</p><p>任务栏键盘快捷方式</p><p>按此键 执行此操作</p><p>Shift + 单击某个任务栏按钮 打开某个应用，或快速打开应用的另一个实例</p><p>Ctrl + Shift + 单击某个任务栏按钮 以管理员身份打开应用</p><p>Shift + 右键单击某个任务栏按钮 显示该应用的窗口菜单</p><p>Shift + 右键单击某个已分组的任务栏按钮 显示该组的窗口菜单</p><p>Ctrl + 单击某个已分组的任务栏按钮 循环切换该组的窗口</p><p>设置键盘快捷方式</p><p>按此键 执行此操作</p><p>Windows 徽标键 + I 打开设置</p><p>Backspace 回退到“设置”主页</p><p>在带有搜索框的任何页面上键入 搜索设置</p><p>Windows 10 应用中的键盘快捷方式</p><p>在许多应用（如照片、Groove 和地图）中，当你将鼠标指针悬停在某个按钮上时，工具提示中就会显示快捷方式。在其他应用（如画图、写字板和 Office）中，按 Alt 键或 F10 即可显示标记了键盘快捷方式的命令。如果菜单中某个字母有下划线，请同时按下 Alt 键和带有下划线的键，而不是选择该菜单项。例如，按 Ctrl + N 可在“画图”中创建新图片。</p><p>温馨提示：</p><p>借助触摸键盘，按下 Ctrl 键即可看到一些快捷方式。</p><p>以下是 Windows 10 中内置的某些 Microsoft 应用中常见的键盘快捷方式。这包括 Microsoft Edge、计算器、游戏栏、Groove、地图、画图、照片、音乐和电视以及写字板。</p><p>Microsoft Edge 键盘快捷方式</p><p>按此键 执行此操作</p><p>Ctrl + D 将当前站点添加到收藏夹或阅读列表</p><p>Ctrl + I 打开“收藏夹”窗格</p><p>Ctrl + J 打开“下载”窗格</p><p>Ctrl + H 打开“历史记录”窗格</p><p>Ctrl + P 打印当前页面</p><p>Ctrl + F 在页面上查找</p><p>Alt + C 打开 Cortana</p><p>注意</p><p>Cortana 仅在特定的国家&#x2F;地区中提供，并且某些 Cortana 功能可能不支持随时随地使用。如果 Cortana 不可用或已关闭，你仍然可以使用搜索。</p><p>Ctrl + Shift + R 进入阅读视图</p><p>Ctrl + T 打开一个新选项卡</p><p>Ctrl + Shift + T 重新打开最近关闭的选项卡</p><p>Ctrl + W 或 Ctrl + F4 关闭活动选项卡</p><p>Ctrl + K 复制选项卡</p><p>Ctrl + N 打开新窗口</p><p>Ctrl + Shift + P 打开新的 InPrivate 浏览窗口</p><p>Ctrl + Tab 切换到下一个选项卡</p><p>Ctrl + Shift + Tab 切换到上一个选项卡</p><p>Ctrl + 1、2、3，依此类推 切换到特定选项卡号</p><p>Ctrl + 9 切换到最后一个选项卡</p><p>Ctrl + 加号 (+) 放大 (25%)</p><p>Ctrl + 减号 (-) 缩小 (25%)</p><p>Ctrl + 0 重置缩放级别</p><p>Backspace 或 Alt + 向左键 返回</p><p>Alt + 向右键 前进</p><p>F5 或 Ctrl + R 刷新页面</p><p>Esc 停止加载页面</p><p>Ctrl + L 或 F4 或 Alt + D 选中地址栏</p><p>Ctrl + Shift + L 在新选项卡中打开地址栏查询</p><p>Ctrl + E 在地址栏中打开搜索查询</p><p>Ctrl + Enter 在地址栏中将“www.”添加到所键入文本的开头，将“.com”添加到所键入文本的末尾</p><p>Ctrl + 单击 在新选项卡中打开链接</p><p>Ctrl + Shift + 单击 在新选项卡中打开链接并切换到该选项卡</p><p>Alt + Shift + 单击 在新窗口中打开链接</p><p>Ctrl + Shift + M 开始创建 Web 笔记</p><p>Ctrl + Alt + M 将所选内容复制到 Web 笔记中</p><p>F12 打开 F12 开发人员工具</p><p>Ctrl + U 查看源</p><p>F6 在网页内容和地址栏之间切换焦点</p><p>F7 为活动选项卡打开“插入光标浏览”</p><p>Ctrl + Shift + Delete 显示用于清除浏览数据的控件</p><p>“计算器”键盘快捷方式</p><p>按此键 执行此操作</p><p>Alt + 1 切换到“标准型”模式</p><p>Alt + 2 切换到“科学型”模式</p><p>Alt + 3 切换到“程序员”模式</p><p>Ctrl + M 存储在内存中</p><p>Ctrl + P 添加到内存</p><p>Ctrl + Q 从内存中减去</p><p>Ctrl + R 从内存中重新调用</p><p>Ctrl + L 清除内存</p><p>F9 选择 ±</p><p>R 选择 1&#x2F;x</p><p>@ 求平方根</p><p>Delete 选择 CE</p><p>Ctrl + H 打开或关闭计算历史记录</p><p>向上键 在“历史记录”列表中上移</p><p>向下键 在“历史记录”列表中下移</p><p>Ctrl + Shift + D 清除历史记录</p><p>F3 在“科学型”模式下选择 DEG</p><p>F4 在“科学型”模式下选择 RAD</p><p>F5 在“科学型”模式下选择 GRAD</p><p>Ctrl + G 在“科学型”模式下选择 10x</p><p>Ctrl + O 在“科学型”模式下选择 cosh</p><p>Ctrl + S 在“科学型”模式下选择 sinh</p><p>Ctrl + T 在“科学型”模式下选择 tanh</p><p>Shift + S 在“科学型”模式下选择 sin-1</p><p>Shift + O 在“科学型”模式下选择 cos-1</p><p>Shift + T 在“科学型”模式下选择“tan-1”</p><p>Ctrl + Y 在“科学型”模式下选择 y√x</p><p>D 在“科学型”模式下选择 Mod</p><p>L 在“科学型”模式下选择 log</p><p>M 在“科学型”模式下选择 dms</p><p>N 在“科学型”模式下选择 ln</p><p>Ctrl + N 在“科学型”模式下选择 ex</p><p>O 在“科学型”模式下选择 cos</p><p>P 在“科学型”模式下选择 Pi</p><p>Q 在“科学型”模式下选择 x2</p><p>S 在“科学型”模式下选择 sin</p><p>T 在“科学型”模式下选择 tan</p><p>V 在“科学型”模式下选择 F-E</p><p>X 在“科学型”模式下选择 Exp</p><p>Y, ^ 在“科学型”模式下选择 xy<br>在“科学型”模式下选择 x3</p><p>; 在“科学型”模式下选择 Int</p><p>! 在“科学型”模式下选择 n!</p><p>F2 在“程序员”模式下选择 DWORD</p><p>F3 在“程序员”模式下选择 WORD</p><p>F4 在“程序员”模式下选择 BYTE</p><p>F5 在“程序员”模式下选择 HEX</p><p>F6 在“程序员”模式下选择 DEC</p><p>F7 在“程序员”模式下选择 OCT</p><p>F8 在“程序员”模式下选择 BIN</p><p>F12 在“程序员”模式下选择 QWORD</p><p>A-F 在“程序员”模式下选择 A-F</p><p>J 在“程序员”模式下选择 RoL</p><p>K 在“程序员”模式下选择 RoR</p><p>&lt; 在“程序员”模式下选择 Lsh</p><pre><code>在“程序员”模式下选择 Rsh</code></pre><p>% 在“程序员”模式下选择 Mod</p><p>| 在“程序员”模式下选择 Or</p><p>^ 在“程序员”模式下选择 Xor</p><p>~ 在“程序员”模式下选择 Not</p><p>&amp; 在“程序员”模式下选择 And</p><p>空格键 在“程序员”模式下切换位值</p><p>游戏栏键盘快捷方式</p><p>按此键 执行此操作</p><p>Windows 徽标键 + G 打开游戏栏（当游戏处于打开状态时）</p><p>Windows 徽标键 + Alt + G 录制最后 30 秒</p><p>Windows 徽标键 + Alt + R 开始或停止录制</p><p>Windows 徽标键 + Alt + Print Screen 获取你的游戏的屏幕截图</p><p>Windows 徽标键 + Alt + T 显示&#x2F;隐藏录制计时器</p><p>Groove 键盘快捷方式</p><p>按此键 执行此操作</p><p>Ctrl + P 播放或暂停</p><p>Ctrl + F 跳到下一曲</p><p>Ctrl + B 重新播放当前歌曲&#x2F;跳到上一曲</p><p>F9 调高音量</p><p>F8 调低音量</p><p>F7 静音</p><p>Ctrl + Enter 选择项目并进入选择模式</p><p>Ctrl + A 全选</p><p>Delete 删除选定项</p><p>Ctrl + Shift + P 播放选定项</p><p>Ctrl + T 打开或关闭“重复播放”</p><p>Ctrl + H 打开或关闭“无序播放”</p><p>Ctrl + Q 搜索</p><p>“地图”键盘快捷方式</p><p>按此键 执行此操作</p><p>箭头键 按任意方向平移地图</p><p>Ctrl + 加号或减号键（+ 或 -） 放大或缩小</p><p>Ctrl + 向左键或向右键 旋转</p><p>Ctrl + 向上键或向下键 倾斜</p><pre><code>或 – 键 在 3D 城市视图中放大或缩小</code></pre><p>Page Up 或 Page Down 在 3D 城市视图中推远或拉近</p><p>Ctrl + Y 在鸟瞰图和道路视图之间切换地图视图</p><p>Ctrl + Home 在你的当前位置上居中放置地图</p><p>Ctrl + D 获取路线</p><p>Ctrl + F 搜索</p><p>Ctrl + M 最小化活动选项卡</p><p>Ctrl + P 打印</p><p>Ctrl + T 显示或隐藏路况</p><p>Backspace 返回</p><p>Ctrl + H 共享</p><p>Ctrl + L 将焦点移动到地图</p><p>Ctrl + W 关闭活动选项卡</p><p>Ctrl + Tab 转到下一个选项卡</p><p>Ctrl + Shift + Tab 转到上一个选项卡</p><p>Ctrl + S 显示或隐藏街道</p><p>Ctrl + C 复制到剪贴板</p><p>“电影和电视”键盘快捷方式</p><p>按此键 执行此操作</p><p>Alt + Enter 全屏播放</p><p>Esc 退出全屏</p><p>Enter 选择焦点中的内容</p><p>空格键</p><p>或</p><p>Ctrl + P 播放或暂停（当视频处于焦点中时）</p><p>Alt + 向左键</p><p>或</p><p>Windows 徽标键 + Backspace 返回</p><p>Ctrl + T 打开或关闭“重复播放”</p><p>F7 静音</p><p>F8 调低音量</p><p>F9 调高音量</p><p>“画图”键盘快捷方式</p><p>按此键 执行此操作</p><p>F11 以全屏模式查看图片</p><p>F12 将此图片另存为新文件</p><p>Ctrl + A 选择整个图片</p><p>Ctrl + B 将所选文本改为粗体</p><p>Ctrl + C 将选择内容复制到剪贴板</p><p>Ctrl + E 打开“属性”对话框</p><p>Ctrl + G 显示或隐藏网格线</p><p>Ctrl + I 将所选文本改为斜体</p><p>Ctrl + N 创建新图片</p><p>Ctrl + O 打开现有图片</p><p>Ctrl + P 打印图片</p><p>Ctrl + R 显示或隐藏标尺</p><p>Ctrl + S 将更改保存到图片</p><p>Ctrl + U 为所选文本添加下划线</p><p>Ctrl + V 从剪贴板粘贴选择内容</p><p>Ctrl + W 打开“调整大小和扭曲”对话框</p><p>Ctrl + X 剪切选择内容</p><p>Ctrl + Y 恢复更改</p><p>Ctrl + Z 撤销更改</p><p>Ctrl + 加号 (+) 将画笔、直线或形状轮廓的宽度增加一个像素</p><p>Ctrl + 减号 (-) 将画笔、直线或形状轮廓的宽度减少一个像素</p><p>Ctrl + Page Up 放大</p><p>Ctrl + Page Down 缩小</p><p>Alt + F4 关闭图片及其“画图”窗口</p><p>向右键 将选择内容或活动形状向右移动一个像素</p><p>向左键 将选择内容或活动形状向左移动一个像素</p><p>向下键 将选择内容或活动形状向下移动一个像素</p><p>向上键 将选择内容或活动形状向上移动一个像素</p><p>Shift + F10 显示上下文菜单</p><p>“照片”键盘快捷方式</p><p>按此键 执行此操作</p><p>空格键（在“集锦”中） 选择项目并进入选择模式</p><p>Enter（从选择模式） 在处于选择模式下时选择项目</p><p>空格键（查看照片） 显示或隐藏命令</p><p>空格键（查看视频） 播放或暂停视频</p><p>箭头键（在集锦中） 向上、向下、向左或向右滚动</p><p>左箭头或右箭头键（位于单个项目或幻灯片放映上） 显示下一个或上一个项目</p><p>箭头键（位于缩放的照片上） 在照片内移动</p><p>Ctrl + 加号或减号（+ 或 -） 放大或缩小（查看照片时）</p><p>Ctrl + 0 重置照片的缩放</p><p>Esc 返回到上一个屏幕</p><p>Ctrl + S 保存</p><p>Ctrl + P 打印</p><p>Ctrl + C 复制</p><p>Ctrl + R（查看或编辑） 旋转照片</p><p>E（查看照片） 增强照片效果</p><p>Ctrl + Z（编辑） 撤销更改</p><p>Ctrl + Y（编辑） 恢复更改</p><p>Ctrl + &#x2F;（编辑） 查看原件</p><p>Shift + 箭头键 调整裁剪或选择性对焦区域的大小</p><p>Ctrl + 箭头键 移动裁剪或选择性对焦区域</p><p>F5（查看项目） 开始幻灯片放映</p><p>Alt + Enter 查看文件信息</p><p>Ctrl + L 设置为锁屏界面</p><p>Ctrl + N（在“相册”视图中） 创建新相册</p><p>Ctrl + R（在“相册”视图中） 删除相册</p><p>Ctrl + D 将选定项添加到相册</p><p>Ctrl + U 从相册中删除选定项</p><p>“写字板”键盘快捷方式</p><p>按此键 执行此操作</p><p>F3 在“查找”对话框中搜索文本的下一个实例</p><p>F12 将此文档另存为新文件</p><p>Ctrl + 1 设置单倍行距</p><p>Ctrl + 2 设置双倍行距</p><p>Ctrl + 5 将行距设置为 1.5</p><p>Ctrl + A 全选</p><p>Ctrl + B 将所选文本改为粗体</p><p>Ctrl + C 将选择内容复制到剪贴板</p><p>Ctrl + D 插入 Microsoft 绘图</p><p>Ctrl + E 向中心对齐文本</p><p>Ctrl + F 在文档中搜索文本</p><p>Ctrl + H 在文档中替换文本</p><p>Ctrl + I 将所选文本改为斜体</p><p>Ctrl + J 两端对齐文本</p><p>Ctrl + L 向左对齐文本</p><p>Ctrl + N 创建新文档</p><p>Ctrl + O 打开现有文档</p><p>Ctrl + P 打印文档</p><p>Ctrl + R 向右对齐文本</p><p>Ctrl + S 将更改保存到文档</p><p>Ctrl + U 为所选文本添加下划线</p><p>Ctrl + V 从剪贴板粘贴选择内容</p><p>Ctrl + X 剪切选择内容</p><p>Ctrl + Y 恢复更改</p><p>Ctrl + Z 撤销更改</p><p>Ctrl + 等于号 (&#x3D;) 使所选文本成为下标</p><p>Ctrl + Shift + 等于号 (&#x3D;) 使所选文本成为上标</p><p>Ctrl + Shift + 大于号 (&gt;) 增加字体大小</p><p>Ctrl + Shift + 小于号 (&lt;) 减小字体大小</p><p>Ctrl + Shift + A 将字符更改为全部使用大写字母</p><p>Ctrl + Shift + L 更改项目符号样式</p><p>Ctrl + 向左键 将光标向左移动一个字</p><p>Ctrl + 向右键 将光标向右移动一个字</p><p>Ctrl + 向上键 将光标移动到上一行</p><p>Ctrl + 向下键 将光标移动到下一行</p><p>Ctrl + Home 移动到文档的开头</p><p>Ctrl + End 移动到文档的末尾</p><p>Ctrl + Page Up 向上移动一个页面</p><p>Ctrl + Page Down 向下移动一个页面</p><p>Ctrl + Delete 删除下一个字</p><p>Alt + F4 关闭“写字板”</p><p>Shift + F10 显示上下文菜单</p><p>Windows 10 用于辅助功能的 Windows 键盘快捷方式</p><p>辅助功能快捷方式可帮助你将电脑与键盘或辅助设备结合使用。下面是 Windows 10 中辅助技术的键盘快捷方式列表，包括“放大镜”、“高对比度”等。</p><p>“放大镜”键盘快捷方式</p><p>按此键 执行此操作</p><p>Windows 徽标键 + 加号 (+) 或减号 (-) 放大或缩小</p><p>Ctrl + Alt + 空格键 以全屏模式预览桌面</p><p>Ctrl + ALT + D 切换到停靠模式</p><p>Ctrl + ALT + F 切换到全屏模式</p><p>Ctrl + ALT + I 反色</p><p>Ctrl + ALT + L 切换到镜头模式</p><p>Ctrl + ALT + R 调整镜头大小</p><p>Ctrl + Alt + 箭头键 按箭头键的方向平移</p><p>Windows 徽标键 + Esc 退出“放大镜”</p><p>其他辅助功能键盘快捷方式</p><p>按此键 执行此操作</p><p>按右 Shift 八秒钟 打开和关闭筛选键</p><p>左 Alt + 左 Shift + Print Screen 打开或关闭高对比度</p><p>左 Alt + 左 Shift + Num Lock 打开或关闭鼠标键</p><p>按 Shift 五次 打开或关闭粘滞键</p><p>按 Num Lock 五秒钟 打开或关闭切换键</p><p>Windows 徽标键 + U 打开“轻松使用设置中心”<br><img src="https://cos.mbrjun.cn/IMGS/2020/09/06/au.png" alt="  "></p><p><a href="https://blog.huixcwg.net/48---">查看原文</a></p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> win10 </tag>
            
            <tag> 快捷键 </tag>
            
            <tag> PC </tag>
            
            <tag> 电脑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>百度网盘不限速直链下载 PanResolve PanDownload复活版</title>
      <link href="/archives/270/"/>
      <url>/archives/270/</url>
      
        <content type="html"><![CDATA[<p>本页面之前的内容已失效，请使用PanDuanBox或其他客户端下载，功能与PanResolve大致相同<br><a href="https://www.mbrjun.cn/archives/404/">https://www.mbrjun.cn/archives/404/</a></p><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pandownload </tag>
            
            <tag> 百度网盘 </tag>
            
            <tag> 网盘下载器 </tag>
            
            <tag> Panduanbox </tag>
            
            <tag> 网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Wordpress Kartos 评论无法显示 解决方法</title>
      <link href="/archives/261/"/>
      <url>/archives/261/</url>
      
        <content type="html"><![CDATA[<p>原理不知道（BUG原因可能是语句不合规），但是修复方法真的很简单。</p><span id="more"></span><p>报错：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">Fatal error: Uncaught ArgumentCountError: Too few arguments to function Walker_Comment::filter_comment_text(), 1 passed in /data/wwwroot/wordpress/wp-includes/class-wp-hook.php on line 287 and exactly 2 expected in /data/wwwroot/wordpress/wp-includes/class-walker-comment.php:267 Stack trace: #0 /data/wwwroot/wordpress/wp-includes/class-wp-hook.php(287): Walker_Comment-&gt;filter_comment_text(&#x27;&lt;p&gt;\xE6\x97\xA7\xE7\xBE\xA4\xE6\xBB\xA1\xE4\xBA\x86...&#x27;) #1 /data/wwwroot/wordpress/wp-includes/plugin.php(206): WP_Hook-&gt;apply_filters(&#x27;&lt;p&gt;\xE6\x97\xA7\xE7\xBE\xA4\xE6\xBB\xA1\xE4\xBA\x86...&#x27;, Array) #2 /data/wwwroot/wordpress/wp-content/themes/kratos-pjax-master/inc/ua.php(432): apply_filters(&#x27;comment_text&#x27;, &#x27;\xE6\x97\xA7\xE7\xBE\xA4\xE6\xBB\xA1\xE4\xBA\x86\xEF\xBC\x8C...&#x27;) #3 /data/wwwroot/wordpress/wp-content/themes/kratos-pjax-master/inc/ua.php(436): user_agent_display_comment() #4 /data/wwwroot/wordpress/wp-includes/class-wp-hook.php(289): user_agent(&#x27;\xE6\x97\xA7\xE7\xBE\xA4\xE6\xBB\xA1\xE4\xBA\x86\xEF\xBC\x8C...&#x27;) #5 /data/wwwro in /data/wwwroot/wordpress/wp-includes/class-walker-comment.php on line 267<br></code></pre></td></tr></table></figure><p>目测现在可能只有几个站修好了BUG。</p><p>以下是过程（两步搞定）：<br><strong>1.找到Wordpress安装目录，编辑<code>/wp-content/themes/kratos-pjax-master/inc/ua.php</code></strong><br><strong>2.找到第432行，将代码改为下面这个：</strong></p><blockquote><p>if(empty($_POST[‘comment_post_ID’])||is_admin()) echo apply_filters(‘get_comment_text’,$comment-&gt;comment_content);</p></blockquote><p>也就是在comment_text前面加个get_让其与上方一致<br>下面是源代码（方便对比）：</p><blockquote><p>if(empty($_POST[‘comment_post_ID’])||is_admin()) echo apply_filters(‘comment_text’,$comment-&gt;comment_content);</p></blockquote><p><strong>还要删掉第439行（最后一行）：</strong></p><blockquote><p>add_filter(‘comment_text’,’user_agent’);</p></blockquote><p><strong>注意不要删错了！上面有一段和这一行很像！！！</strong><br>附一张图，更直观：<br><img src="https://cos.mbrjun.cn/IMGS/2020/09/05/pl.png" alt="  "><br>最后，保存。</p><p>然后就正常了。</p><p>修复前：<br><img src="https://cos.mbrjun.cn/IMGS/2020/09/05/re.png" alt="  "><br>修复后：<br><img src="https://cos.mbrjun.cn/IMGS/2020/09/05/ol.png" alt="  "></p><p>本文章为转载文章，转载来源因含有违反中华人民共和国相关法律内容，故不放出  </p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wordpress </tag>
            
            <tag> blog </tag>
            
            <tag> bug </tag>
            
            <tag> kartos </tag>
            
            <tag> 报错 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【SSD】NGFF、M.2、PCIe、NVMe、闪存颗粒是什么</title>
      <link href="/archives/255/"/>
      <url>/archives/255/</url>
      
        <content type="html"><![CDATA[<p>买固态建议看看（？</p><span id="more"></span><hr><h2 id="NGFF"><a href="#NGFF" class="headerlink" title="NGFF"></a>NGFF</h2><p>NGFF 就是 M.2 的原名，现在常被误当作“SATA协议，M.2(NGFF)接口的硬盘”</p><h2 id="M-2"><a href="#M-2" class="headerlink" title="M.2"></a>M.2</h2><p>一种硬盘接口，设计的目的是代替mSATA，mSATA设计的目的是在笔记本上节省空间，但是也存在一些缺陷<br>M.2的接口大概长这样<br><img src="https://cos.mbrjun.cn/IMGS/2020/09/04/m2.png" alt="M.2 M Key 插槽"></p><h2 id="M-2-B-Key-和-M-Key"><a href="#M-2-B-Key-和-M-Key" class="headerlink" title="M.2 - B Key 和 M Key"></a>M.2 - B Key 和 M Key</h2><p>M.2接口规格有多种，其中有两种是硬盘使用的：一种是B Key（也叫 Key-B） 一种是M Key（也叫 Key-M）<br>部分较老的硬盘接口是B Key的，部分硬盘为了实现更好的兼容性，还制作了”B&amp;M Key”的硬盘（即兼容B和M两种接口）</p><p>M Key 硬盘速度较快 走 PCIe x4 通道 速度可以达到<strong>4GB&#x2F;s（32Gbps）</strong>（PCIe 3.0）<br><img src="https://cos.mbrjun.cn/IMGS/2020/09/04/Mk.png" alt="M Key 示意图"><br>B Key、B&amp;M Key速度较慢 走 PCIe x2 通道 理论速度可以达到<strong>2GB&#x2F;s</strong>（PCIe 3.0）</p><p>B&amp;M Key只存在于硬盘接口，<strong>不存在于主板插槽</strong><br><img src="https://cos.mbrjun.cn/IMGS/2020/09/04/SS.png" alt="B&amp;M Key 示意图"></p><h2 id="PCIe"><a href="#PCIe" class="headerlink" title="PCIe"></a>PCIe</h2><p>PCIe，全称PCI-Express(peripheral component interconnect express)是一种高速串行计算机扩展总线标准<br>截止到2020年，我们使用的大多数M.2固态硬盘都是走PCIe 3.0通道（诞生于2007）<br>2022年更新：市面上已经有很多 PCIe 4.0 硬盘了，速度一般可以达到 PCIe 3.0 硬盘的 2.5 倍<br>PCIe 3.0 x1的速度为 984.6 MB&#x2F;s<br>PCIe 3.0 x2的速度为 1,969.2 MB&#x2F;s<br>PCIe 3.0 x4的速度为 3938.4 MB&#x2F;s<br>（均为理论最大速度）</p><h2 id="NVM、NVMe"><a href="#NVM、NVMe" class="headerlink" title="NVM、NVMe"></a>NVM、NVMe</h2><p>NVM（易失性存储器）是一个协议，用于制造更好的固态硬盘<br>和传统 SATA 协议固态的区别就是<br>延迟低、速度快、稳定</p><h2 id="闪存颗粒"><a href="#闪存颗粒" class="headerlink" title="闪存颗粒"></a>闪存颗粒</h2><p>闪存颗粒主要有SLC、MLC、TLC、QLC<br>单层单元（Single Level Cell，简称SLC）<br>多层单元（Multi Level Cell，简称MLC）<br>三层单元（Triple Level Cell，简称TLC）<br>四层单元（Quad-level cells，简称QLC）</p><p>简单地说，关于成本，QLC&lt;TLC&lt;MLC&lt;SLC，关于速度和稳定性，SLC&gt;MLC&gt;TLC&gt;QLC<br>现在基本买不到SLC的SSD了 微软Surface 3的硬盘是SLC的<br>速度方面SLC、MLC都差不多 TLC QLC可能会稍微差点<br><strong>QLC硬盘由于存在写入放大，如果大量写入小文件，可能会使寿命损耗加快</strong></p><p>如果有要补充的评论里提 也欢迎纠正错误</p>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 固态硬盘 </tag>
            
            <tag> 硬盘 </tag>
            
            <tag> 固态 </tag>
            
            <tag> SSD </tag>
            
            <tag> 三星 </tag>
            
            <tag> 英特尔 </tag>
            
            <tag> SLC </tag>
            
            <tag> MLC </tag>
            
            <tag> TLC </tag>
            
            <tag> QLC </tag>
            
            <tag> PCIe </tag>
            
            <tag> NVMe </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DIY Windows Hello</title>
      <link href="/archives/254/"/>
      <url>/archives/254/</url>
      
        <content type="html"><![CDATA[<p>这是一篇DIY Windows Hello 人脸的教程</p><span id="more"></span><p><img src="https://cos.mbrjun.cn/IMGS/2020/09/03/HELLO.png" alt="  "></p><hr><p>首先你得有一个IR红外摄像头，就像这样<br><img src="https://cos.mbrjun.cn/IMGS/2020/09/03/CAM.jpg" alt="  "><br>这东西不贵 桃包上100就可以搞到 最近在涨价 要买的赶紧<br>2022年更新：这玩意几把和树莓派一样 涨价太6了 20块能到200<br><img src="https://cos.mbrjun.cn/IMGS/2020/09/03/tb.jpg" alt="  "><br>图里第二个那种就可以 但是太贵了<br>能插电脑 能有红外IR就行 要支持FIDO协议 &lt;&lt;不懂的自己百度<br>FIDO就是Windows生物识别的一个协议<br>不懂的可以问问商家<br>货到了之后检查下产品 至少要两个 一个红外一个感光 但是大多数是有三个镜头<br>插机器就行</p><p>这玩意不会自动安装驱动<br>你需要自己找镜头组的驱动 大多数桃包的都是嘤特尔（牙膏厂）和螃蟹的<br><img src="https://cos.mbrjun.cn/IMGS/2020/09/03/dr.png" alt="  "><br>重启不需要<br>进设置<br><img src="https://cos.mbrjun.cn/IMGS/2020/09/03/ac.png" alt="  "><br><img src="https://cos.mbrjun.cn/IMGS/2020/09/03/he.png" alt="  "><br><img src="https://cos.mbrjun.cn/IMGS/2020/09/03/mb.png" alt="  "><br>基本就没问题了</p>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows Hello </tag>
            
            <tag> 指纹 </tag>
            
            <tag> 人脸 </tag>
            
            <tag> Surface </tag>
            
            <tag> 生物识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【XCode】iOS 模拟器</title>
      <link href="/archives/252/"/>
      <url>/archives/252/</url>
      
        <content type="html"><![CDATA[<p><del>最近有人后台留言要我推荐macOS的软件</del><br>那 介绍下 XCode的iOS模拟器</p><span id="more"></span><p>本来是个写代码的软件 不过能当iOS模拟器玩<br>这个软件不仅能模拟iOS 还可以watchOS tvOS 但是模拟不了macOS~<br>感觉这个可以搞多开器<br>接下来带来iOS虚拟机安装教程</p><hr><p>首先去 <strong>App Store</strong> 下载一个叫 <strong>XCode</strong> 的软件<br>软件可以吃掉你电脑10GB的空间<br>打开后会有一个条款，直接yes就可以了<br>然后我们会看到XCode的主界面<br>这个时候我们创建一个新项目（点击<strong>Create a new Xcode project</strong>）<br><img src="https://cos.mbrjun.cn/IMGS/2020/08/31/XCode.jpg" alt="  "><br>然后选择iOS，应用类型随便，然后一路<strong>Next</strong><br><img src="https://cos.mbrjun.cn/IMGS/2020/08/31/ver.jpg" alt="  "><br><img src="https://cos.mbrjun.cn/IMGS/2020/08/31/na.jpg" alt="  "><br><img src="https://cos.mbrjun.cn/IMGS/2020/08/31/sa.jpg" alt="  "><br>然后点击左上角 选择一个机型<br><img src="https://cos.mbrjun.cn/IMGS/2020/08/31/zs.jpg" alt="  "><br>然后就可以用了 任务栏右键可以选择机型<br><img src="https://cos.mbrjun.cn/IMGS/2020/08/31/ap.jpg" alt="  "><br><img src="https://cos.mbrjun.cn/IMGS/2020/08/31/se.jpg" alt="  "></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
            <tag> macOS </tag>
            
            <tag> XCode </tag>
            
            <tag> 开发 </tag>
            
            <tag> 模拟器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Glass】Minecraft基岩版服务器管理 1.0</title>
      <link href="/archives/250/"/>
      <url>/archives/250/</url>
      
        <content type="html"><![CDATA[<p>修Blog发现个这玩意<br>我自己都忘了源码扔哪了<br>摆大了</p><span id="more"></span><hr><p><img src="https://cos.mbrjun.cn/IMGS/2020/08/31/Glass.png" alt="启动画面"></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MC </tag>
            
            <tag> 我的世界 </tag>
            
            <tag> 服务器 </tag>
            
            <tag> Glass </tag>
            
            <tag> 基岩 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数字签名发布者修改器</title>
      <link href="/archives/248/"/>
      <url>/archives/248/</url>
      
        <content type="html"><![CDATA[<p><del>随便写的脚本，work on Windows</del><br>可以用来修改数字签名</p><span id="more"></span><p>根证书用自带的提取出来就可以<br>效果（UAC蓝框）<br><img src="https://cos.mbrjun.cn/IMGS/2020/08/30/uac.png" alt="  "></p><hr><p>下面放脚本源码<br>Bulid是证书创建<br>Sign是证书添加到程序<br>依赖makecert,这玩意好像Windows不自带，自己装一个<br><del>软件有bug 是一次性的 用完了删掉原来的证书才能跑</del><br>先运行Bulid 再运行Sign 根证书重命名qwq.cer</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">echo Moefire Studio 证书生成工具 [版本 1.1]<br>echo (c) 2020 Moefire Studio. MBRjun. 保留所有权利。<br>echo.<br>set /p qqq= 证书通用名(颁发者)：<br>makecert -pe -n &quot;CN=%qqq%&quot; -a sha256 -cy end -sky signature -ic qwq.cer -iv qwq.pvk -sv bulid.pvk bulid.cer<br>pvk2pfx -pvk bulid.pvk -spc bulid.cer -pfx bulid.pfx<br>echo 完成<br>PAUSE<br>echo on[/tab]<br>[tab name=&quot;Sign.bat&quot;]@echo off<br>echo Moefire Studio 数字签名工具 [版本 1.0]<br>echo (c) 2020 Moefire Studio. MBRjun. 保留所有权利。<br>echo.<br>ping 127.0.0.1 &gt; nul<br>set /p cer= 证书：<br>set /p qwq= 要签名的文件：<br>echo 正在签名 %qwq%<br>signtool sign /v /f %cer% /t http://timestamp.globalsign.com/scripts/timstamp.dll %qwq%<br>PAUSE<br>echo on<br></code></pre></td></tr></table></figure><p><img src="https://cos.mbrjun.cn/IMGS/2020/08/30/ms2.png" alt="  "></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数字签名 </tag>
            
            <tag> 发布者 </tag>
            
            <tag> 修改器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1M的图片，但是压缩到了50k还视觉无损</title>
      <link href="/archives/247/"/>
      <url>/archives/247/</url>
      
        <content type="html"><![CDATA[<p>嗯，网站优化———图片优化<br>题不太明确，应该改成 1MB 和 50KB <del>但是我懒的改诶</del></p><span id="more"></span><p>效果如图，访问 1MB 的原图，但是自动压缩到 50kB<br><img src="https://cos.mbrjun.cn/IMGS/2020/08/30/png.png.png" alt="  "></p><hr><p>首先打开<a href="https://console.cloud.tencent.com/">企鹅云</a><br>然后找到<strong>数据万象</strong>(找不到的左上角搜索CI)，新建一个存储桶（如图）<br><img src="https://cos.mbrjun.cn/IMGS/2020/08/30/tong.png" alt="  "><br>新建好了之后找到<strong>对象存储</strong>控制台(左上角搜索COS)<br>找到你的桶，点击配置<br><img src="https://cos.mbrjun.cn/IMGS/2020/08/30/pz.png" alt="  "><br>CDN服务记得开回源鉴权<br>COS桶每月免费10GB外网流量<br><img src="https://cos.mbrjun.cn/IMGS/2020/08/30/back.png" alt="  "><br>然后去<strong>内容分发网络</strong>控制台<br>点击<strong>域名管理</strong><br>选择你对象存储桶的域名 最右边的管理<br>点击 图片处理<br>开启压缩<br><img src="https://cos.mbrjun.cn/IMGS/2020/08/30/cdn2.png" alt="  "></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> 站长 </tag>
            
            <tag> 优化,CDN,流量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【软件推荐】优化内存：Mem Reduct</title>
      <link href="/archives/246/"/>
      <url>/archives/246/</url>
      
        <content type="html"><![CDATA[<p>内存不够用?<br>多任务运行卡顿?<br><del>没钱换电脑?</del><br>不如试试<strong>Mem Reduct</strong></p><span id="more"></span><p><img src="https://cos.mbrjun.cn/IMGS/2020/08/30/ram.png" alt="  "></p><hr><p>可以清理重复的内存数据 解决部分软件导致的内存泄漏<br>并且进行内存压缩<br>PS：使用工具前请调大点虚拟内存，不然容易炸<br>PS：不建议和PS、PR等专业软件同时开，也容易炸（清理内存时会卡一下）<br><img src="https://cos.mbrjun.cn/IMGS/2020/08/30/neicun.png" alt="  "></p><p><a href="https://cos.mbrjun.cn/files/mem.7z">下载</a></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 优化 </tag>
            
            <tag> windows </tag>
            
            <tag> 软件 </tag>
            
            <tag> 内存 </tag>
            
            <tag> Mem Reduct </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的SN500飞了</title>
      <link href="/archives/242/"/>
      <url>/archives/242/</url>
      
        <content type="html"><![CDATA[<p>一年前装上的SSD<br>一年后直接飞了<br>系统启动报错磁盘检查<br>文件系统各种错误<br>但是SMART是好好的</p><span id="more"></span><p><img src="https://cos.mbrjun.cn/IMGS/2020/08/30/SSD.webp" alt="  "></p>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SN500 </tag>
            
            <tag> 固态硬盘 </tag>
            
            <tag> 翻车 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 10 2004开启新版开始菜单教程</title>
      <link href="/archives/230/"/>
      <url>/archives/230/</url>
      
        <content type="html"><![CDATA[<p>第一步：先安装：适用于Windows 10 Version 2004的07累积更新，适合基于x64的系统(KB4568831)在可选更新可以找到</p><span id="more"></span><p><img src="https://cos.mbrjun.cn/IMGS/2020/08/07/start.webp" alt="  "><br><img src="https://cos.mbrjun.cn/IMGS/2020/08/07/upd.webp" alt="  "><br>第二步：新建文本，把后缀名改成.reg，然后右键刚才创建的那个点编辑<br>输入以下内容</p><blockquote><p>Windows Registry Editor Version 5.00</p><p>[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FeatureManagement\Overrides\0\2093230218]<br>“EnabledState”&#x3D;dword:00000002<br>“EnabledStateOptions”&#x3D;dword:00000000</p><p>[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion]<br>“DisplayVersion”&#x3D;”2004”</p></blockquote><p>然后双击那个文件点是，然后重启可以看到效果<br>查看 mzyxsl 的<a href="https://mzyxsl.top/index.php/archives/5/">原文</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> 微软 </tag>
            
            <tag> 开始菜单 </tag>
            
            <tag> Microsoft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pandownload 20200806 fix-login</title>
      <link href="/archives/234/"/>
      <url>/archives/234/</url>
      
        <content type="html"><![CDATA[<p><a href="https://xcjmblog-1300177615.file.myqcloud.com/pdl/pd406.exe">Pandown4.0.6</a><br>软件不能单独使用，请将主文件覆盖在完整版Pandown中</p><span id="more"></span><p><img src="https://xcjmblog-1300177615.file.myqcloud.com/2020/08/PD.png" alt="  "></p><p><a href="https://www.itxcjm.top/105/">查看原文</a></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pandownload </tag>
            
            <tag> 百度网盘 </tag>
            
            <tag> Pandown </tag>
            
            <tag> bdwp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>选择合适的CDN（国内篇）</title>
      <link href="/archives/223/"/>
      <url>/archives/223/</url>
      
        <content type="html"><![CDATA[<p>推荐一些网站CDN</p><span id="more"></span><p>本文章是国内篇，只有支持国内的，全球的也会推荐<br><img src="https://cos.mbrjun.cn/IMGS/2020/07/31/CDN.webp" alt="  "></p><h2 id="什么是CDN"><a href="#什么是CDN" class="headerlink" title="什么是CDN"></a>什么是CDN</h2><p>CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。<br>简单来说就是将你原站的服务分发给CDN的各个机器，然后当你访问套上CDN的网站时将你301到最近的服务</p><hr><h2 id="阿里云CDN"><a href="#阿里云CDN" class="headerlink" title="阿里云CDN"></a>阿里云CDN</h2><p>网址：<a href="https://www.aliyun.com/product/cdn?ref=blog.mbrjun.cn">阿里云</a><br>优点：速度快功能多，朋友用的（ 延迟平均有5ms<br>缺点：计费复杂（包含请求量、HTTPS流量等）、流量贵</p><h2 id="Nodecache"><a href="#Nodecache" class="headerlink" title="Nodecache"></a>Nodecache</h2><p>网址：<a href="https://www.nodecache.com/">Nodecache</a><br>优点：价格便宜，注册送1T&#x2F;30d流量<br>缺点：节点相对其他的较少，部分地区延迟高</p><h2 id="腾讯云CDN（站长同款）"><a href="#腾讯云CDN（站长同款）" class="headerlink" title="腾讯云CDN（站长同款）"></a>腾讯云CDN（站长同款）</h2><p>网址：<a href="https://cloud.tencent.com/product/cdn?zt=100011357240">腾讯云</a><br>优点：节点多，计费相对简单，注册送100G&#x2F;180d（企业300G&#x2F;180d）流量<br>缺点：流量稍微贵（没阿里云贵也没NC便宜）</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CDN </tag>
            
            <tag> 腾讯云 </tag>
            
            <tag> 阿里云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SEO教程 搜索引擎SEO优化教程</title>
      <link href="/archives/202/"/>
      <url>/archives/202/</url>
      
        <content type="html"><![CDATA[<blockquote><p>SEO（Search Engine Optimization）：汉译为搜索引擎优化。是一种方式：利用搜索引擎的规则提高网站在有关搜索引擎内的自然排名。目的是让其在行业内占据领先地位，获得品牌收益。很大程度上是网站经营者的一种商业行为，将自己或自己公司的排名前移。–<a href="https://baike.baidu.com/">百度百科</a></p></blockquote><span id="more"></span><p><img src="https://cos.mbrjun.cn/IMGS/2020/07/16/seo.webp" alt="  "></p><p>很多新的小博主已经拥有了自己的网站，但是在主流搜索引擎平台却无法搜索到自己网站的内容，这很可能是因为没有做好SEO(搜索引擎优化)，本篇文章教大家如何给自己的网站做好SEO</p><hr><h2 id="网站速度优化"><a href="#网站速度优化" class="headerlink" title="网站速度优化"></a>网站速度优化</h2><p>很多搜索引擎爬虫都非常注重网站的速度，因为他直接影响到了用户的体验，如果网站的打开速度非常慢，那么可能导致搜索引擎无法抓取或者用户认为网站不存在，导致访问量低<br>速度优化的最好方式就是使用CDN(内容分发网络)类型产品，可以非常明显的提高速度，如果网站在国外或许可以考虑下<a href="https://cloudflare.com/">Cloudflare</a>，但是Cloudflare的CDN产品在国内访问效果并不十分良好<br>顺便为大家推荐<a href="https://aliyun.com/">阿里云</a>和<a href="https://cloud.tencent.com/">腾讯云</a>的CDN产品，本站使用的就是腾讯云CDN(看啥看，赶紧打钱啊)<br>值得一提的是，网站内的脚本或其他元素过多可能会显著影响客户体验，以前笔者的朋友的网站打开后直接吃满CPU，打开调试发现引用了一百多个JS<br>还有，图片的加载也影响着网站速度，推荐使用网上的工具对你的图片进行压缩，如果图片是透明的，则应该使用PNG压缩，如果图片不需要透明，则强力推荐Webp压缩，Webp压缩的特点是<strong>低损&#x2F;无损压缩</strong>、<strong>压缩效果好</strong>，类似于HEIC格式图片，HEIC是<strong>无损</strong>，并且提供更好的压缩效果，但是兼容性<strong>差</strong>，部分手机内置相机自动HEIC格式保存，博客文章的封面图建议压缩到100KB以内，下面是一张Webp有损压缩后的图片，可以看到这张1080p图片只有100KB不到<br><img src="https://cos.mbrjun.cn/IMGS/2020/07/14/bg.webp" alt="  "></p><h2 id="Sitemap"><a href="#Sitemap" class="headerlink" title="Sitemap"></a>Sitemap</h2><p>如果你的网站资源多，搜索引擎可能抓取会“走弯路”，抓取到一些不推荐去抓取的内容，例如图片详细信息或者登录界面，一般来说，这些特殊页面会被robots.txt屏蔽，但是为了让搜索引擎快速抓取，推荐制作一个Sitemap，现在的网站大多数动态网站，如果有能力，最好自己根据网站的实际情况来制作Sitemap抓取程序</p><h2 id="链接优化"><a href="#链接优化" class="headerlink" title="链接优化"></a>链接优化</h2><p>网站的链接要尽可能的短，尤其对于博客论坛一类的站点，下面是一些例子:<br>长链接: blog.mbrjun.cn&#x2F;index.php?archives&#x2F;2020&#x2F;02&#x2F;03&#x2F;xxxx.html<br>短链接: blog.mbrjun.cn&#x2F;archives&#x2F;233<br>如果你的网站是动态站点，请务必考虑重写(Rewrite&#x2F;伪静态)</p><h2 id="SEO插件"><a href="#SEO插件" class="headerlink" title="SEO插件"></a>SEO插件</h2><p>有的论坛&#x2F;博客源码可以自己安装插件和主题，所以简单的介绍下大多数SEO插件的功能:可以自动更新站点地图，为爬虫进行特有的抓取优化</p><h2 id="网站持续运行"><a href="#网站持续运行" class="headerlink" title="网站持续运行"></a>网站持续运行</h2><p>如果想要被搜索引擎抓取，则应该保证网站持续运行，如果网站服务器经常无法连接，通常是访问量过大，导致服务器负载状态爆满，一般来说只有两种解决方法，就是站点优化和提高服务器配置</p><h2 id="关键词和标签"><a href="#关键词和标签" class="headerlink" title="关键词和标签"></a>关键词和标签</h2><p>网站想要在搜索引擎精准展现需要有适合的关键词(keyword)和标签，但是由于近年来网站不断出现关键词滥用的问题，使得关键词在搜索引擎的权重不断变低，所以如果你要对blog一类的站点进行优化，要注意去正确使用标签功能，建议在10个左右即可</p><h2 id="内容质量"><a href="#内容质量" class="headerlink" title="内容质量"></a>内容质量</h2><p>如果想要让网站更多的展现在搜索引擎上，应该提高网站里面的内容质量，这一点需要站长自行把控</p><h2 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h2><p>想要提高网站浏览量，可以选择性的互换友情链接，另外说明一下，换友情链接最好找到和你网站差不多的同类站点，另外，你需要经常检查友情链接的质量，如果对方网站经常跑路或者打不开那就不用换了（</p><h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><p>据说老域名和备案的网站搜索引擎会更喜欢</p><hr><p>另外，在文章末尾，向大家推荐一些实用工具</p><h2 id="工具推荐"><a href="#工具推荐" class="headerlink" title="工具推荐"></a>工具推荐</h2><p><a href="https://developers.google.com/speed/pagespeed/insights/">Google PageSpeed Insights</a><br><a href="http://tool.chinaz.com/">站长工具 站长之家</a></p><p><strong>感觉文章好短，觉得短的评论区打个短</strong></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> SEO </tag>
            
            <tag> 搜索优化 </tag>
            
            <tag> 站长 </tag>
            
            <tag> 优化 </tag>
            
            <tag> 域名 </tag>
            
            <tag> SEO优化 </tag>
            
            <tag> 搜索引擎优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware 15 Pro专业版Key激活码密钥</title>
      <link href="/archives/195/"/>
      <url>/archives/195/</url>
      
        <content type="html"><![CDATA[<p>VMware Workstation 15 Pro<br>下载链接：<a href="https://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.0.0-10134415.exe">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.0.0-10134415.exe</a></p><span id="more"></span><p><img src="https://cos.mbrjun.cn/IMGS/2020/07/10/vmware.webp" alt="  "></p><p>AZ7MK-44Y1J-H819Z-WMYNC-N7ATF<br>CU702-DRD1M-H89GP-JFW5E-YL8X6<br>YY5EA-00XDJ-480RP-35QQV-XY8F6<br>ZC10K-8EF57-084QZ-VXYXE-ZF2XF<br>VZ182-0NDE6-0817Y-KMMZZ-YKAC4<br>ZC75R-0YW5P-H809Y-QYWQZ-NZ8G8<br>ZV7XK-02D56-480JZ-ENZEX-YF8XD<br>YC588-FTDDL-H852Y-UXYGE-YZKE2</p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> 激活码 </tag>
            
            <tag> key </tag>
            
            <tag> 许可证 </tag>
            
            <tag> 条款 </tag>
            
            <tag> VMware Workstation </tag>
            
            <tag> VBox </tag>
            
            <tag> Hyper-V </tag>
            
            <tag> 虚拟化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Xbox联机 Teredo 无法进行限定</title>
      <link href="/archives/193/"/>
      <url>/archives/193/</url>
      
        <content type="html"><![CDATA[<p>有很多人使用Xbox测试网络会出现「Teredo 无法进行限定」这个问题，这篇文章简单讲述下出现的原因和解决方法</p><span id="more"></span><p><img src="https://cos.mbrjun.cn/IMGS/2020/07/09/teredo1.webp" alt="  "></p><h2 id="出现原因"><a href="#出现原因" class="headerlink" title="出现原因"></a>出现原因</h2><p>Teredo 服务器连接失败，或者连接之后速度过慢无法使用</p><hr><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>先看一看你电脑有没有原生 IPv6，打开 <a href="http://test-ipv6.com/">http://test-ipv6.com</a> 如果结果是 10&#x2F;10，则此提示是正常的<br>如果结果是 0&#x2F;10(无 IPv6)或者其他，你需要配置一下 Teredo 服务</p><ol><li>注销用户并重新登录，确保服务正常运行</li><li>Win-S输入 编辑组策略 回车 <img src="https://cos.mbrjun.cn/IMGS/2020/07/09/gpedit1.png" alt="  "></li><li>左侧打开到 计算机配置 &gt; 管理模板 &gt; 网络 &gt; TCPIP 设置 &gt; IPv6 转换技术</li><li></li></ol><p>将 “设置 Teredo 默认限定” 选项修改为 “已启用”；<br>将 “设置 Teredo 状态” 选项启用，设定为 “企业客户端”；<br>然后设置Teredo主机：</p><blockquote><p>teredo.remlab.net<br>teredo2.remlab.net<br>teredo.iks-jena.de<br>win10.ipv6.microsoft.com<br>teredo.trex.fi</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Teredo </tag>
            
            <tag> IPv6 </tag>
            
            <tag> NAT </tag>
            
            <tag> 6to4 </tag>
            
            <tag> Xbox </tag>
            
            <tag> 网络 </tag>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 安装 GNOME 图形化</title>
      <link href="/archives/181/"/>
      <url>/archives/181/</url>
      
        <content type="html"><![CDATA[<h2 id="很多人的服务器安装的系统是Linux，而且没有图形化，如果自己有图形化需求，则需要安装GNOME、KDE、xfce4或其他图形化。"><a href="#很多人的服务器安装的系统是Linux，而且没有图形化，如果自己有图形化需求，则需要安装GNOME、KDE、xfce4或其他图形化。" class="headerlink" title="很多人的服务器安装的系统是Linux，而且没有图形化，如果自己有图形化需求，则需要安装GNOME、KDE、xfce4或其他图形化。"></a>很多人的服务器安装的系统是Linux，而且没有图形化，如果自己有图形化需求，则需要安装GNOME、KDE、xfce4或其他图形化。<br><span id="more"></span></h2><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>依次输入下面的命令</p><blockquote><p>yum groupinstall “GNOME Desktop” “Graphical Administration Tools”  </p></blockquote><p>&#x2F;&#x2F;安装GNOME<br><img src="https://cos.mbrjun.cn/IMGS/2020/06/30/InstallGn.webp" alt="  "></p><blockquote><p>ln -sf &#x2F;lib&#x2F;systemd&#x2F;system&#x2F;runlevel5.target &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;default.target </p></blockquote><p>&#x2F;&#x2F;设置图形化</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Cent </tag>
            
            <tag> GUI </tag>
            
            <tag> Gnome </tag>
            
            <tag> 图形化 </tag>
            
            <tag> OS </tag>
            
            <tag> 系统 </tag>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sign-Page-For-Typecho</title>
      <link href="/archives/178/"/>
      <url>/archives/178/</url>
      
        <content type="html"><![CDATA[<p>一款对Typecho后台登录的美化包 </p><span id="more"></span><p><img src="https://cos.mbrjun.cn/IMGS/2020/06/30/login.png" alt="  "></p><hr><p>源码200KB，总体制作时间为一周</p><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li>仅加载两张CSS表和四个JS，速度极快，背景图已压缩</li><li>高自定义性：您可以方便的修改源码</li><li>稳定性：极少发生问题，适合生产用途</li></ul><h2 id="Github-项目"><a href="#Github-项目" class="headerlink" title="Github 项目"></a>Github 项目</h2><p><img src="https://download.mbrjun.cn/Sub/%E8%B4%B4%E5%9B%BE/%E9%A1%B9%E7%9B%AE.png" alt="  "><br><a href="https://github.com/MBR-Studio/Sign-Page-For-Typecho/tree/1.0.0">Sign-Page-For-Typecho</a></p><h2 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h2><ol><li><a href="https://github.com/MBR-Studio/Sign-Page-For-Typecho/releases">去Github</a>下载最新版本的源代码</li><li>将源码包解压到网站根目录</li><li>更改 <strong>login.php</strong>和<strong>register.php</strong> 上的网站名称</li><li>打开你的网站，查看是否生效</li></ol>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> typecho </tag>
            
            <tag> wordpress </tag>
            
            <tag> 后端 </tag>
            
            <tag> 美化 </tag>
            
            <tag> 主题包 </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>破解网站防复制</title>
      <link href="/archives/167/"/>
      <url>/archives/167/</url>
      
        <content type="html"><![CDATA[<p>复制下面的代码粘贴到地址栏回车即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">javascript:document.write(&#x27;MBRjun&lt;pre&gt;&lt;b&gt;&#x27;+document.body.innerText.replace(/\&lt;/g,&quot;&amp;#60;&quot;).replace(/\&gt;/g,&quot;&amp;#62;&quot;)+&#x27;&lt;/b&gt;&lt;/pre&gt;&#x27;);<br></code></pre></td></tr></table></figure><span id="more"></span><p>完成后可以直接复制，不会出现下面的提示<br><img src="https://cos.mbrjun.cn/IMGS/2020/06/26/wenku.jpg" alt="  "></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 防复制 </tag>
            
            <tag> 保护 </tag>
            
            <tag> 版权 </tag>
            
            <tag> 文章 </tag>
            
            <tag> F12 </tag>
            
            <tag> 调试器 </tag>
            
            <tag> 源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>6B2T服务器 外置登录教程 Authlib注册登录教程</title>
      <link href="/archives/132/"/>
      <url>/archives/132/</url>
      
        <content type="html"><![CDATA[<p>这个服务器跑路了，想看这篇文章的去 git log</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MC </tag>
            
            <tag> Authlib </tag>
            
            <tag> Minecraft </tag>
            
            <tag> 我的世界 </tag>
            
            <tag> 外置登录 </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 6B2T </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx HSTS Preload 教程</title>
      <link href="/archives/90/"/>
      <url>/archives/90/</url>
      
        <content type="html"><![CDATA[<h2 id="Nginx-配置-HSTS-教程"><a href="#Nginx-配置-HSTS-教程" class="headerlink" title="Nginx 配置 HSTS 教程"></a>Nginx 配置 HSTS 教程<br><span id="more"></span></h2><h2 id="何为-HSTS？"><a href="#何为-HSTS？" class="headerlink" title="何为 HSTS？"></a>何为 HSTS？</h2><blockquote><p>HTTP严格传输安全协议（英语：HTTP Strict Transport Security，简称：HSTS），是一套由互联网工程任务组发布的互联网安全策略机制。网站可以选择使用HSTS策略，来让浏览器强制使用HTTPS与网站进行通信，以减少会话劫持风险。其征求修正意见书文件编号是RFC 6797，发布于2012年11月。</p></blockquote><p>在开启了HSTS后，所有的资源都会以HTTPS方法加载，根治了“混合内容”，大大提高了网站的安全性，而且，当网站被劫持时（证书无效等错误），浏览器会在缓存内拒绝传输信息，确保网站绝对安全，对于不支持HTTPS的网站，开启HSTS会使网站无法访问。</p><h2 id="HSTS请求头参数"><a href="#HSTS请求头参数" class="headerlink" title="HSTS请求头参数"></a>HSTS请求头参数</h2><p><strong>max-age</strong> （必须）指定HSTS请求头的缓存时间<br>include-subdomains 同时应用到子域名<br>preload 允许预加载（本文章会详细讲预加载）</p><h2 id="配置HSTS"><a href="#配置HSTS" class="headerlink" title="配置HSTS"></a>配置HSTS</h2><p>如果想要为一个网站加入HSTS，应该在服务器上进行请求头的配置，添加类似如下请求头：</p><blockquote><p>Strict-Transport-Security “max-age&#x3D;31536000; includeSubDomains; preload”</p></blockquote><p><strong>配置方法</strong><br>打开Nginx配置（Phpstudy在“设置”，宝塔在Nginx-配置修改，原生请使用 nginx.conf 或者站点配置文件）<br>定位到HTTP块，加入<br><code>add_header Strict-Transport-Security $hsts_header;</code></p><p>定位到Server块上方，加入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">map $scheme $hsts_header &#123;<br>https   &quot;max-age=31536000; includeSubDomains; preload&quot;;<br>&#125;<br></code></pre></td></tr></table></figure><p>PS：上面给的 HSTS 标头参数可以自由更改<br>保存配置文件，重启 Nginx 即可</p><h2 id="预加载"><a href="#预加载" class="headerlink" title="预加载"></a>预加载</h2><p>如果你的网站已经使用了HSTS，还想要提高速度并且变得更安全，那么预加载（Preload）对你来说非常有必要<br>预加载是一个网址列表，会硬编码到Chromium的源代码，其他的主流浏览器一般依据Chromium进行更新列表，目前大多数浏览器均支持本列表，包括Chrome、Firefox、Edge、<del>IE11</del>等浏览器，其他国产浏览器如360，列表随咕鸽而变化。在“Preload预加载列表中”的网址，只能通过HTTPS的方式访问，任何以HTTP的方式访问将会直接被浏览器跳转HTTPS，跳转失败则拒绝打开。</p><h2 id="加入预加载的方法"><a href="#加入预加载的方法" class="headerlink" title="加入预加载的方法"></a>加入预加载的方法</h2><p>打开这个网站：<a href="https://hstspreload.org/">https://hstspreload.org</a><br>然后在网站中输入你的域名，回车<br><img src="https://cos.mbrjun.cn/IMGS/2020/07/27/Snipaste_2020-06-02_20-35-36.webp" alt="  "><br><img src="https://cos.mbrjun.cn/IMGS/2020/07/27/Snipaste_2020-06-02_20-38-08.webp" alt="  "><br>解决好图中的问题就可以了，其中黄色的问题解决不解决都行，但是红色的必须要解决，解决完全部的即可出现一个申请的按钮，点击即可申请啦，一般申请之后两三天就能通过，长的最多几周，申请通过的效果：<br><img src="https://cos.mbrjun.cn/IMGS/2020/07/27/Snipaste_2020-06-02_20-44-39.webp" alt="  "></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> 代码 </tag>
            
            <tag> PHP </tag>
            
            <tag> 安全 </tag>
            
            <tag> HTTPS </tag>
            
            <tag> 挂锁 </tag>
            
            <tag> HSTS </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宝塔面板400修复教程</title>
      <link href="/archives/86/"/>
      <url>/archives/86/</url>
      
        <content type="html"><![CDATA[<p>如图，某天在访问宝塔面板时出现了400错误，应该如何解决呢？</p><span id="more"></span><p>出现400错误的原因是web服务器没找到站点，可能是宝塔服务没生效，在命令行输入：bt查看状态<br>发现宝塔服务正常运行，但是进入站点依然出现400，我们尝试命令行启动<br>命令行启动后发现了错误，我们分析这个错误的关键信息：</p><blockquote><p>File “C:\Program Files\python\lib\site-packages\flask\app.py”, line 943, in run run_simple(host, port, self, **options)<br>File “C:\Program Files\python\lib\site-packages\werkzeug\serving.py”, line 814, in run_simple inner()<br>File “C:\Program Files\python\lib\site-packages\werkzeug\serving.py”, line 774, in inner fd&#x3D;fd)<br>File “C:\Program Files\python\lib\site-packages\werkzeug\serving.py”, line 660, in make_server passthrough_errors, ssl_context, fd&#x3D;fd)<br>File “C:\Program Files\python\lib\site-packages\werkzeug\serving.py”, line 577, in <strong>init</strong> self.address_family), handler)<br>#从这些报错中可以发现：域名&#x2F;端口出了问题<br>OSError: [WinError 10013] 以一种访问权限不允许的方式做了一个访问套接字的尝试。<br>我们搜索这个错误发现是端口被占用了，果断打开资源管理器查看端口侦听状态<br>![  ][4]<br>发现是IIS在占用，我们进入IIS管理器，修改端口即可<br>![  ][5]</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> 宝塔 </tag>
            
            <tag> bt.cn </tag>
            
            <tag> 虚拟主机 </tag>
            
            <tag> 网站面板 </tag>
            
            <tag> 400 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免费获取亚洲诚信DV型SSL证书 - 为你的网站加上HTTPS</title>
      <link href="/archives/84/"/>
      <url>/archives/84/</url>
      
        <content type="html"><![CDATA[<p>这篇文章讲述如何免费嫖亚洲诚信的SSL证书</p><span id="more"></span><p>众所周知，亚洲诚信的证书安全性很高，显示都是信任的，而且还可以包年<br>今天就来给大家带来一篇在腾讯云免费白嫖证书的文章，效果如下图<br><img src="https://images.mbrjun.cn/images/2020/05/29/Ztrfru5Fti/tti.png" alt="  "><br>浏览器标识绿色挂锁、显示已安全连接网站</p><h2 id="白嫖教程"><a href="#白嫖教程" class="headerlink" title="白嫖教程"></a>白嫖教程</h2><ol><li>打开网站<a href="https://buy.cloud.tencent.com/ssl">网站域保护</a></li><li>按照图中选择<img src="https://images.mbrjun.cn/images/2020/05/29/s5hnpYz6If/DV.png" alt="  "></li><li>点击快速申请，填写域名，即可申请成功</li></ol><p>效果图<img src="https://images.mbrjun.cn/images/2020/05/29/kPzuvSPECG/cer.png---" alt="  "></p><h2 id="title-免费获取亚洲诚信DV型SSL证书-为你的网站加上HTTPSdate-2020-05-29-00-22-00updated-2020-05-29-00-59-50categories-工具tags-证书-SSL-挂锁-网站-HTTPS"><a href="#title-免费获取亚洲诚信DV型SSL证书-为你的网站加上HTTPSdate-2020-05-29-00-22-00updated-2020-05-29-00-59-50categories-工具tags-证书-SSL-挂锁-网站-HTTPS" class="headerlink" title="title: 免费获取亚洲诚信DV型SSL证书 - 为你的网站加上HTTPSdate: 2020-05-29 00:22:00updated: 2020-05-29 00:59:50categories: 工具tags:- 证书- SSL,挂锁,网站,HTTPS"></a>title: 免费获取亚洲诚信DV型SSL证书 - 为你的网站加上HTTPS<br>date: 2020-05-29 00:22:00<br>updated: 2020-05-29 00:59:50<br>categories: 工具<br>tags:<br>- 证书<br>- SSL,挂锁,网站,HTTPS</h2><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><blockquote><p>这篇文章讲述如何免费嫖亚洲诚信的SSL证书<br>众所周知，亚洲诚信的证书安全性很高，显示都是信任的，而且还可以包年<br>（我真的没有恰饭！！！）<br>今天就来给大家带来一篇免费白嫖证书的文章，效果如下图<br><img src="https://images.mbrjun.cn/images/2020/05/29/Ztrfru5Fti/tti.png" alt="  "><br>浏览器标识绿色挂锁、显示已安全连接网站</p></blockquote><h2 id="白嫖教程-1"><a href="#白嫖教程-1" class="headerlink" title="白嫖教程"></a>白嫖教程</h2><ol><li>打开网站<a href="https://buy.cloud.tencent.com/ssl">网站域保护</a></li><li>按照图中选择<img src="https://images.mbrjun.cn/images/2020/05/29/s5hnpYz6If/DV.png" alt="  "></li><li>点击快速申请，填写域名，即可申请成功</li></ol><p>效果图<img src="https://images.mbrjun.cn/images/2020/05/29/kPzuvSPECG/cer.png---" alt="  "></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> HTTPS </tag>
            
            <tag> 证书 </tag>
            
            <tag> SSL </tag>
            
            <tag> 挂锁 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 错误代码合集 一览表</title>
      <link href="/archives/76/"/>
      <url>/archives/76/</url>
      
        <content type="html"><![CDATA[<p>Windows错误代码一览表，你一定知道其中的几个，按F9、&#x2F;开始在大多数浏览器搜索，列举了几千枚</p><span id="more"></span><h2 id="错误代码"><a href="#错误代码" class="headerlink" title="错误代码"></a>错误代码</h2><p>十进制ID 十六进制ID 描述<br>0 0x0000作业完成。<br>1 0x0001不正确的函数。<br>2 0x0002系统找不到指定的档案。<br>3 0x0003系统找不到指定的路径。<br>4 0x0004系统无法开启档案。<br>5 0x0005拒绝存取。<br>6 0x0006无效的代码。<br>7 0x0007储存体控制区块已毁。<br>8 0x0008储存体空间不足，无法处理这个指令。<br>9 0x0009储存体控制区块地址无效。<br>10 0x000A环境不正确。<br>11 0x000B尝试加载一个格式错误的程序。<br>12 0x000C存取码错误。<br>13 0x000D资料错误。<br>14 0x000E储存体空间不够，无法完成这项作业。<br>15 0x000F系统找不到指定的磁盘驱动器。<br>16 0x0010无法移除目录。<br>17 0x0011系统无法将档案移到 其它的磁盘驱动器。<br>18 0x0012没有任何档案。<br>19 0x0013储存媒体为写保护状态。<br>20 0x0014系统找不到指定的装置。<br>21 0x0015装置尚未就绪。<br>22 0x0016装置无法识别指令。<br>23 0x0017资料错误 (cyclic redundancy check)<br>24 0x0018程序发出一个长 度错误的指令。<br>25 0x0019磁盘驱动器在磁盘找不到 持定的扇区或磁道。<br>26 0x001A指定的磁盘或磁盘无法存取。<br>27 0x001B磁盘驱动器找不到要求的扇区。<br>28 0x001C打印机没有纸。<br>29 0x001D系统无法将资料写入指定的磁盘驱动器。<br>30 0x001E系统无法读取指定的装置。<br>31 0x001F连接到系统的某个装置没有作用。<br>32 0x0020 The process cannot access the file because it is being used by another process.<br>33 0x0021档案的一部份被锁定，现在无法存取。<br>34 0x0022磁盘驱动器的磁盘不正确。 请将 %2 (Volume Serial Number: %3) 插入磁盘 机%1。<br>36 0x0024开启的分享档案数量太多。<br>38 0x0026到达档案结尾。<br>39 0x0027磁盘已满。<br>50 0x0032不支持这种网络要求。<br>51 0x0033远程计算机无法使用。<br>52 0x0034网络名称重复。<br>53 0x0035网络路径找不到。<br>54 0x0036网络忙碌中。<br>55 0x0037 The specified network resource or device is no longer available.<br>56 0x0038 The network BIOS command limit has been reached.<br>57 0x0039网络配接卡发生问题。<br>58 0x003A指定的服务器无法执行要求的作业。<br>59 0x003B网络发生意外错误。<br>60 0x003C远程配接卡不兼容。<br>61 0x003D打印机队列已满。<br>62 0x003E服务器的空间无法储存等候打印的档案。<br>63 0x003F等候打印的档案已经删除。<br>64 0x0040指定的网络名称无法使用。<br>65 0x0041拒绝存取网络。<br>66 0x0042网络资源类型错误。<br>67 0x0043网络名称找不到。<br>68 0x0044超过区域计算机网络配接卡的名称限制。<br>69 0x0045超过网络BIOS作业阶段的限制。<br>70 0x0046远程服务器已经暂停或者正在起始中。<br>71 0x0047由于联机数目已达上限，此时无法再联机到这台远程计算机。<br>72 0x0048指定的打印机或磁盘装置已经暂停作用。<br>80 0x0050档案已经存在。<br>82 0x0052无法建立目录或档案。<br>83 0x0053 INT 24　失败<br>84 0x0054处理这项要求的储存体无法使用。<br>85 0x0055近端装置名称已经在使用中。<br>86 0x0056指定的网络密码错误。<br>87 0x0057参数错误。<br>88 0x0058网络发生资料写入错误。<br>89 0x0059此时系统无法执行其它行程。<br>100 0x0064无法建立其它的系统semaphore。<br>101 0x0065属于其它行程专用的semaphore 。<br>102 0x0066 semaphore已经设定，而且无法关闭。<br>103 0x0067无法指定semaphore 。<br>104 0x0068在岔断时间无法要求专用的semaphore 。<br>105 0x0069此semaphore先前的拥有权已经结束。<br>106 0x006A请将磁盘插入 %1。<br>107 0x006B因为代用的磁盘尚未插入，所以程序已经停止。<br>108 0x006C磁盘正在使用中或被锁定。<br>109 0x006D Pipe已经中止。<br>110 0x006E系统无法开启指定的 装置或档案。<br>111 0x006F档名太长。<br>112 0x0070磁盘空间不足。<br>113 0x0071没有可用的内部档案标识符。<br>114 0x0072目标内部档案标识符不正确。<br>117 0x0075由应用程序所执行的IOCTL呼叫 不正确。<br>118 0x0076写入验证参数值不正确。<br>119 0x0077系统不支持所要求的指令。<br>120 0x0078此项功能仅在Win32模式有效。<br>121 0x0079 semaphore超过逾时期间。<br>122 0x007A传到系统呼叫的资料区域 太小。<br>123 0x007B文件名、目录名称或储存体卷标语法错误。<br>124 0x007C系统呼叫层次不正确。<br>125 0x007D磁盘没有设定卷标。<br>126 0x007E找不到指定的模块。<br>127 0x007F找不到指定的程序。<br>128 0x0080没有子行程可供等待。<br>129 0x0081 %1这个应用程序无法在Win32模式下执行。<br>130 0x0082 Attempt to use a file handle to an open disk partition for an operation other than raw disk I&#x2F;O.<br>131 0x0083尝试将档案指针移至档案开头之前。<br>132 0x0084无法在指定的装置或档案，设定档案指针。<br>133 0x0085 JOIN或SUBST指令 无法用于 内含事先结合过的磁盘驱动器。<br>134 0x0086尝试在已经结合的磁盘驱动器，使用JOIN或SUBST指令。<br>135 0x0087尝试在已经替换的磁盘驱动器，使 用JOIN或SUBST指令。<br>136 0x0088系统尝试删除 未连结过的磁盘驱动器的连结关系。<br>137 0x0089系统尝试删除 未替换过的磁盘驱动器的替换关系。<br>138 0x008A系统尝试将磁盘驱动器结合到已经结合过之磁盘驱动器的目录。<br>139 0x008B系统尝试将磁盘驱动器替换成已经替换过之磁盘驱动器的目录。<br>140 0x008C系统尝试将磁盘驱动器替换成已经替换过之磁盘驱动器的目录。<br>141 0x008D系统尝试将磁盘驱动器SUBST成已结合的磁盘驱动器 目录。<br>142 0x008E系统此刻无法执行JOIN或SUBST。<br>143 0x008F系统无法将磁盘驱动器结合或替换同一磁盘驱动器下目录。<br>144 0x0090这个目录不是根目录的子目录。<br>145 0x0091目录仍有资料。<br>146 0x0092指定的路径已经被替换过。<br>147 0x0093资源不足，无法处理这项 指令。<br>148 0x0094指定的路径这时候无法使用。<br>149 0x0095尝试要结合或替换的磁盘驱动器目录，是已经替换过的的目标。<br>150 0x0096 CONFIG.SYS文件未指定系统追踪信息，或是追踪功能被取消。<br>151 0x0097指定的semaphore事件DosMuxSemWait数目不正确。<br>152 0x0098 DosMuxSemWait没有执行；设定太多的semaphore。<br>153 0x0099 DosMuxSemWait清单不正确。<br>154 0x009A您所输入的储存媒体标 元长度限制。<br>155 0x009B无法建立其它的执行绪。<br>156 0x009C接收行程拒绝接受信号。<br>157 0x009D区段已经被舍弃，无法被锁定。<br>158 0x009E区段已经解除锁定。<br>159 0x009F执行绪识别码的地址不正确。<br>160 0x00A0传到DosExecPgm的自变量字符串不正确。<br>161 0x00A1指定的路径不正确。<br>162 0x00A2信号等候处理。<br>164 0x00A4系统无法建立执行绪。<br>167 0x00A7无法锁定档案的部份范围。<br>170 0x00AA所要求的资源正在使用中。<br>173 0x00AD取消范围的锁定要求不明显。<br>174 0x00AE档案系统不支持自动变更锁定类型。<br>180 0x00B4系统发现不正确的区段号码。<br>182 0x00B6操作系统无法执行 %1。<br>183 0x00B7档案已存在，无法建立同一档案。<br>186 0x00BA传送的旗号错误。<br>187 0x00BB指定的系统旗号找不到。<br>188 0x00BC操作系统无法执行 %1。<br>189 0x00BD操作系统无法执行 %1。<br>190 0x00BE操作系统无法执行 %1。<br>191 0x00BF无法在Win32模式下执行 %1。<br>192 0x00C0操作系统无法执行 %1。<br>193 0x00C1 %1不是正确的Win32应用程序。<br>194 0x00C2操作系统无法执行 %1。<br>195 0x00C3操作系统无法执行 %1。<br>196 0x00C4操作系统无法执行 这个应用程序。<br>197 0x00C5操作系统目前无法执行 这个应用程序。<br>198 0x00C6操作系统无法执行 %1。<br>199 0x00C7操作系统无法执行 这个应用程序。<br>200 0x00C8程序代码的区段不可以大于或等于64KB。<br>201 0x00C9操作系统无法执行 %1。<br>202 0x00CA操作系统无法执行 %1。<br>203 0x00CB系统找不到输入的环境选项。 &#x2F;r<br>205 0x00CD在指令子目录下，没有任何行程有信号副处理程序。<br>206 0x00CE文件名称或扩展名太长。<br>207 0x00CF ring 2堆栈使用中。<br>208 0x00D0输入的通用档名字元 * 或 ? 不正确， 或指定太多的通用檔名字元。<br>209 0x00D1所传送的信号不正确。<br>210 0x00D2无法设定信号处理程序。<br>212 0x00D4区段被锁定，而且无法重新配置。<br>214 0x00D6附加到此程序或动态连结模块的动态连结模块太多。<br>215 0x00D7 Can’t nest calls to LoadModule.<br>230 0x00E6 The pipe state is invalid.<br>231 0x00E7所有的pipe instances都在忙碌中。<br>232 0x00E8 The pipe is being closed.<br>233 0x00E9 No process is on the other end of the pipe.<br>234 0x00EA有更多可用的资料。<br>240 0x00F0作业阶段被取消。<br>254 0x00FE指定的延伸属性名称无效。<br>255 0x00FF延伸的属性不一致。<br>259 0x0103没有可用的资料。<br>266 0x010A无法使用Copy API。<br>267 0x010B目录名称错误。<br>275 0x0113延伸属性不适用于缓冲区。<br>276 0x0114在外挂的档案系统上的延伸属性档案已经毁损。<br>277 0x0115延伸属性表格文件满。<br>278 0x0116指定的延伸属性代码无效。<br>282 0x011A外挂的这个档案系统不支持延伸属性。<br>288 0x0120意图释放不属于叫用者的mutex。<br>298 0x012A semaphore传送次数过多。<br>299 0x012B只完成Read&#x2F;WriteProcessMemory的部份要求。<br>317 0x013D系统找不到位于讯息文件 %2中编号为0x%1的讯息。<br>487 0x01E7尝试存取无效的地址。<br>534 0x0216运算结果超过32位。<br>535 0x0217信道的另一端有一个行程在接送资料。<br>536 0x0218等候行程来开启信道的另一端。<br>994 0x03E2存取延伸的属性被拒。<br>995 0x03E3由于执行绪结束或应用程序要求，而异常终止I&#x2F;O作业。<br>996 0x03E4重叠的I&#x2F;O事件不是设定成通知状态。<br>997 0x03E5正在处理重叠的I&#x2F;O作业。<br>998 0x03E6对内存位置的无效存取。<br>999 0x03E7执行inpage作业发生错误。<br>1001 0x03E9递归太深，堆栈满溢。<br>1002 0x03EA窗口无法用来传送讯息。<br>1003 0x03EB无法完成这项功能。<br>1004 0x03EC旗号无效。<br>1005 0x03ED储存媒体未含任何可辨识的档案系统。 请确定以加载所需的系统驱动程序，而且该储存媒体并未毁损。<br>1006 0x03EE储存该档案的外部媒体发出警告， 表示该已开启档案已经无效。<br>1007 0x03EF所要求的作业无法在全屏幕模式下执行。<br>1008 0x03F0 An attempt was made to reference a token that does not exist.<br>1009 0x03F1组态系统登录数据库毁损。<br>1010 0x03F2组态系统登录机码无效。<br>1011 0x03F3无法开启组态系统登录机码。<br>1012 0x03F4无法读取组态系统登录机码。<br>1013 0x03F5无法写入组态系统登录机码。<br>1014 0x03F6系统登录数据库中的一个档案必须使用记录或其它备份还原。 已经还原成功。<br>1015 0x03F7系统登录毁损。其中某个档案毁损、或者该档案的 系统映对内存内容毁损、会是档案无法复原。<br>1016 0x03F8系统登录起始的I&#x2F;O作业发生无法复原的错误。 系统登录无法读入、 写出或更新，其中的一个档案 内含系统登录在内存中的内容。<br>1017 0x03F9系统尝试将档案加载系统登录或将档案还原到系统登录中， 但是，指定档案的格式不是系统登录文件的格式。<br>1018 0x03FA尝试在标示为删除的系统登录机码，执行不合法的操作。<br>1019 0x03FB系统无法配置系统登录记录所需的空间。<br>1020 0x03FC无法在已经有子机码或数值的系统登录机码建立符号连结。<br>1021 0x03FD无法在临时机码下建立永久的子机码。<br>1022 0x03FE变更要求的通知完成，但信息 并未透过呼叫者的缓冲区传回。呼叫者现在需要自行列举档案，找出变更的地方。<br>1051 0x041B停止控制已经传送给其它服务 所依峙的一个服务。<br>1052 0x041C要求的控制对此服务无效<br>1053 0x041D The service did not respond to the start or control request in a timely fashion.<br>1054 0x041E无法建立服务的执行绪。<br>1055 0x041F服务数据库被锁定。<br>1056 0x0420这种服务已经在执行。<br>1057 0x0421帐户名称错误或者不存在。<br>1058 0x0422指定的服务暂停作用，无法激活。<br>1059 0x0423指定循环服务从属关系。<br>1060 0x0424指定的服务不是安装进来的服务。<br>1061 0x0425该服务项目此时无法接收控制讯息。<br>1062 0x0426服务尚未激活。<br>1063 0x0427无法联机到服务控制程序。<br>1064 0x0428处理控制要求时，发生意外状况。<br>1065 0x0429指定的数据库不存在。<br>1066 0x042A服务传回专属于服务的错误码。<br>1067 0x042B The process terminated unexpectedly.<br>1068 0x042C从属服务或群组无法激活。<br>1069 0x042D因为登入失败，所以没有激活服务。<br>1070 0x042E在激活之后，服务在激活状态时当机。<br>1071 0x042F指定服务数据库锁定无效。<br>1072 0x0430指定的服务已经标示为删除。<br>1073 0x0431指定的服务已经存在。<br>1074 0x0432系统目前正以上一次执行成功的组态执行。<br>1075 0x0433从属服务不存在，或已经标示为删除。<br>1076 0x0434目前的激活已经接受上一次执行成功的 控制设定。<br>1077 0x0435上一次激活之后，就没有再激活服务<br>1078 0x0436指定的名称已经用于服务名称或服务显示 名称。<br>1100 0x044C已经到了磁带的最后。<br>1101 0x044D到了档案标示。<br>1102 0x044E遇到磁带的开头或分割区。<br>1103 0x044F到了档案组的结尾。<br>1104 0x0450磁带没有任何资料。<br>1105 0x0451磁带无法制作分割区。<br>1106 0x0452存取多重容体的新磁带时，发现目前 区块大小错误。<br>1107 0x0453加载磁带时，找不到磁带分割区信息。<br>1108 0x0454无法锁住储存媒体退带功能。<br>1109 0x0455无法解除加载储存媒体。<br>1110 0x0456磁盘驱动器中的储存媒体已经变更。<br>1111 0x0457已经重设I&#x2F;O总线。<br>1112 0x0458磁盘驱动器没有任何储存媒体。<br>1113 0x0459目标multi-byte code page，没有对应Unicode字符。<br>1114 0x045A动态链接库 (DLL) 起始例程失败。<br>1115 0x045B系统正在关机。<br>1116 0x045C无法中止系统关机，因为没有关机的动作在进行中。<br>1117 0x045D因为I&#x2F;O装置发生错误，所以无法执行要求。<br>1118 0x045E序列装置起始失败，会取消加载序列驱动程序。<br>1119 0x045F无法开启装置。这个装置与其它装置共享岔断要求 (IRQ)。 至少已经有一个使用同一IRQ的其它装置已经开启。<br>1120 0x0460 A serial I&#x2F;O operation was completed by another write to the serial port. (The IOCTL_SERIAL_XOFF_COUNTER reached zero.)<br>1121 0x0461因为已经过了逾时时间，所以序列I&#x2F;O作业完 (IOCTL_SERIAL_XOFF_COUNTER不是零。)<br>1122 0x0462在磁盘找不到任何的ID地址标示。<br>1123 0x0463磁盘扇区ID字段与磁盘控制卡追踪地址 不符。<br>1124 0x0464软式磁盘驱动器控制卡回报了一个软式磁盘驱动器驱动程序无法识别的错误。<br>1125 0x0465软式磁盘驱动器控制卡传回与缓存器中不一致的结果。<br>1126 0x0466存取硬盘失败，重试后也无法作业。<br>1127 0x0467存取硬盘失败，重试后也无法作业。<br>1128 0x0468存取硬盘时，必须重设磁盘控制卡，但是 连重设的动作也失败。<br>1129 0x0469到了磁带的最后。<br>1130 0x046A可用服务器储存空间不足，无法处理这项指令。<br>1131 0x046B发现潜在的死锁条件。<br>1132 0x046C指定的基本地址或档案位移没有适当 对齐。<br>1140 0x0474尝试变更系统电源状态，但其它的应用程序或驱动程序拒绝。<br>1141 0x0475系统BIOS无法变更系统电源状态。<br>1150 0x047E指定的程序需要新的Windows版本。<br>1151 0x047F指定的程序不是Windows或MS-DOS程序。<br>1152 0x0480指定的程序已经激活，无法再激活一次。<br>1153 0x0481指定的程序是为旧版的Windows所写的。<br>1154 0x0482执行此应用程序所需的链接库档案之一毁损。<br>1155 0x0483没有应用程序与此项作业的指定档案建立关联。<br>1156 0x0484传送指令到应用程序发生错误。<br>1157 0x0485找不到执行此应用程序所需的链接库档案。<br>1200 0x04B0指定的装置名称无效。<br>1201 0x04B1装置现在虽然未联机，但是它是一个记忆联机。<br>1202 0x04B2尝试记忆已经记住的装置。<br>1203 0x04B3提供的网络路径找不到任何网络提供程序。<br>1204 0x04B4指定的网络提供程序名称错误。<br>1205 0x04B5无法开启网络联机设定文件。<br>1206 0x04B6网络联机设定文件坏掉。<br>1207 0x04B7无法列举非容器。<br>1208 0x04B8发生延伸的错误。<br>1209 0x04B9指定的群组名称错误。<br>1210 0x04BA指定的计算机名称错误。<br>1211 0x04BB指定的事件名称错误。<br>1212 0x04BC指定的网络名称错误。<br>1213 0x04BD指定的服务名称错误。<br>1214 0x04BE指定的网络名称错误。<br>1215 0x04BF指定的资源共享名称错误。<br>1216 0x04C0指定的密码错误。<br>1217 0x04C1指定的讯息名称错误。<br>1218 0x04C2指定的讯息目的地错误。<br>1219 0x04C3所提供的条件与现有的条件组发生冲突。<br>1220 0x04C4尝试与网络服务器联机，但是 与该服务器的联机已经太多。<br>1221 0x04C5其它网络计算机已经在使用这个工作群组或网域名称。<br>1222 0x04C6网络没有显示出来或者没有激活。<br>1223 0x04C7使用者已经取消作业。<br>1224 0x04C8要求的作业无法在已经开启使用者对应区段的档案执行。<br>1225 0x04C9远程系统拒绝网络联机。<br>1226 0x04CA关闭网络联机。<br>1227 0x04CB网络传输端点已经有相关连的地址。<br>1228 0x04CC地址尚未有相关的网络端点。<br>1229 0x04CD尝试在不存在的网络连线作业。<br>1230 0x04CE在作用中的网络联机上执行无效的作业。<br>1231 0x04CF无法传输到远程网络。<br>1232 0x04D0无法联机到远程系统。<br>1233 0x04D1远程系统不支持传输通讯协议。<br>1234 0x04D2远程系统的目的地网络端点没有作何执行中的服务。<br>1235 0x04D3要求已经中止。<br>1236 0x04D4进端系统已经中断网络联机。<br>1237 0x04D5无法完成作业，请重试。<br>1238 0x04D6无法与服务器联机，原因是这个帐户已经到达同时联机数目 的上限。<br>1239 0x04D7尝试在这个帐户未授权的时间登入网络。<br>1240 0x04D8这个帐户无法从这个地方登入网络。<br>2333 0x???? 这一项是防盗文的，本文章在 blog.mbrjun.cn&#x2F;archives&#x2F;76<br>1241 0x04D9网络地址无法用于这个要求的作业。 1242 0x04DA服务已经登记。<br>1243 0x04DB指定的服务不存在。<br>1244 0x04DC作业无法执行，原因是使用者尚未授权使用。<br>1245 0x04DD要求的作业无法执行，原因是使用者尚未登入网络。指定的服务不存在。<br>1246 0x04DE传回要求呼叫者继续工作的讯息。<br>1247 0x04DF在完成起始作业之后，尝试再执行起始作业。<br>1248 0x04E0没有其它的近端装置。<br>1300 0x0514并未指定所有的参照权限给呼叫者。<br>1301 0x0515帐户名称与安全识别码之间尚有未执行完成的联机。<br>1302 0x0516此帐户并未设定特别的系统配额限制。<br>1303 0x0517没有可用的加密机码。传回一个已知的加密机码。<br>1304 0x0518 NT密码太复杂，无法转换成LAN Manager密码。传回的LAN Manager密码是一个空字符串。<br>1305 0x0519修正层次不详。<br>1306 0x051A表示两个修订阶层不兼容。<br>1307 0x051B此安全识别码无法指定为这个对象的拥有者。<br>1308 0x051C此安全识别码无法指定为主要的对象群组。<br>1309 0x051D An attempt has been made to operate on an impersonation token by a thread that is not currently impersonating a client.<br>1310 0x051E不可以关闭群组。<br>1311 0x051F目前没有可登入的服务器，所以无法处理登入要求。<br>1312 0x0520指定登入作业阶段不存在。该作业阶段可能已经结束。<br>1313 0x0521指定的权限不存在。<br>1314 0x0522客户端未列出要求的权限。<br>1315 0x0523所提供的名称格式与帐户名称不符。<br>1316 0x0524指定的使用者已经存在。<br>1317 0x0525指定的使用者不存在。<br>1318 0x0526指定的群组已经存在。<br>1319 0x0527指定的群组不存存。<br>1320 0x0528指定的使用者帐户已经是指定群组的成员，或 指定的群组因为内含成员而无法删除。<br>1321 0x0529指定的使用者帐户不是指定的群组帐户成员。<br>1324 0x052C无法更新密码。所输入的新密码内含不符合 密码规定。<br>1325 0x052D因为违反密码更新规则，所以无法更新密码。<br>1326 0x052E登入失败: 无法辨识的使用者名称或密码错误。<br>1327 0x052F登入失败: 使用者帐户限制。<br>1328 0x0530登入失败: 违反帐户登入时间限制。<br>1329 0x0531登入失败: 使用者不可登入这部计算机。<br>1330 0x0532登入失败: 指定的帐户密码过期。<br>1331 0x0533登入失败: 帐户目前无效。<br>1332 0x0534帐户名称与帐户识别码不符。<br>1333 0x0535一次要求太多的近端使用者识别码 (local user identifiers，LUIDs)。<br>1334 0x0536没有可用的近端使用者识别码 (local user identifiers ，LUIDs)。<br>1335 0x0537安全识别码的转授权部份对这个特殊用法无效。<br>1336 0x0538无效的存取控制清单结构。<br>1337 0x0539安全识别码结构无效。<br>1338 0x053A安全叙述子结构无效。<br>1340 0x053C无法建立继承的存取控制清单或存取控件目。<br>1341 0x053D服务器目前无效。<br>1342 0x053E服务器目前可以使用。<br>1343 0x053F所提供的值是无效的识别码授权值。<br>1344 0x0540没有可供安全信息更新使用的内存。<br>1345 0x0541指定的属性无效，或指定的属性与整个群组的 属性不兼容。<br>1346 0x0542 Either a required impersonation level was not provided, or the provided impersonation level is invalid.<br>1347 0x0543 Cannot open an anonymous level security token.<br>1348 0x0544所要求的认可信息类别无效。<br>1349 0x0545 The type of the token is inappropriate for its attempted use.<br>1350 0x0546无法在没有相关连安全性的对象执行 安全作业。<br>1351 0x0547指示无法连到Windows NT服务器，或网域中的对象 受到保护，所以无法撷取所需的对象。<br>1352 0x0548安全帐户管理程序或区域安全授权服务器状态 不正确，所以无法执行安全作业。<br>1353 0x0549网域状态错误，所以无法执行安全作业。<br>1354 0x054A只有网域的主域控制器才能使用这项作业。<br>1355 0x054B指定的网域不存在。<br>1356 0x054C指定的网域已经存在。<br>1357 0x054D尝试超过每个服务器的网域数目限制。<br>1358 0x054E因为磁盘上发生严重的储存媒体错误或是数据结构毁损，所以无法完成所要求的作业。<br>1359 0x054F安全帐户数据库内有内部不一致的状况。<br>1360 0x0550通用的存取类型包含在某一存取屏蔽中， 这个屏蔽已经对应到非通用的类型。<br>1361 0x0551安全叙述子的格式不正确 (absolute or self-relative)。<br>1362 0x0552所要求的动作只能给登入使用。 而目前呼叫该动作的处理并未登录为登入。<br>1363 0x0553无法利用已经在使用的识别码来激活新的作业阶段。<br>1364 0x0554无法识别指定的确认包装。<br>1365 0x0555登入作业阶段不是在与要求的作业一致的 状态。<br>1366 0x0556登入作业阶段识别码已经在使用中。<br>1367 0x0557登入要求包含无效的登入类型值。<br>1368 0x0558 Unable to impersonate via a named pipe until data has been read from that pipe.<br>1369 0x0559 The transaction state of a Registry subtree is incompatible with the requested operation.<br>1370 0x055A内部安全数据库毁损。<br>1371 0x055B无法在内建帐户执行这项作业。<br>1372 0x055C无法在这个内建的特殊群组执行这项操作。<br>1373 0x055D无法在这个内建的特殊使用者执行这项作业。<br>1374 0x055E因为群组目前是使用者的主要群组，所以不能 从群组移除使用者。<br>1375 0x055F The token is already in use as a primary token.<br>1376 0x0560指定的区域群组不存在。<br>1377 0x0561指定的帐户名称不是区域群组的成员。<br>1378 0x0562指定的帐户名称已经是区域群组的成员。<br>1379 0x0563指定的区域群组已经存在。<br>1380 0x0564登入失败: 使用者无权在这部计算机以要求的 登入类型登入。<br>1381 0x0565 The maximum number of secrets that may be stored in a single system has been exceeded.<br>1382 0x0566 The length of a secret exceeds the maximum length allowed.<br>1383 0x0567本区安全性授权数据库内含的资料不一致。<br>1384 0x0568在登入时，使用者的安全内容累积太多的 安全识别码。<br>1385 0x0569登入失败: 使用者尚未被许可在这个台脑使用要求的登入类型。<br>1386 0x056A交叉加密的密码需要变更使用者的密码。<br>1387 0x056B因为成员不存在，所以无法将新的成员新增到 区域群组。<br>1388 0x056C因为成员的帐号类型不正确，所以无法新增到区域群组。<br>1389 0x056D指定的安全ID太多。<br>1390 0x056E需要用到交互加密的密码才能变更这个使用者的密码。<br>1391 0x056F表示存取控制清单没有可继承的组件<br>1392 0x0570档案或目录已毁，无法读取资料。<br>1393 0x0571磁盘结构已毁无法读取。<br>1394 0x0572没有指定之登入作业阶段的使用者作业阶段机码。<br>1395 0x0573正在存取的服务仅授权特定数目的联机。 而目前联机数目已达上限，所以无法再建立服务联机。<br>1400 0x0578窗口代码无效。<br>1401 0x0579菜单识别码无效。<br>1402 0x057A光标句柄无效。<br>1403 0x057B加速键表格句柄无效。<br>1404 0x057C Invalid hook handle.<br>1405 0x057D无效的多重窗口位置结构控制。<br>1406 0x057E无法建立最上层的子窗口。<br>1407 0x057F找不到window class。<br>1408 0x0580无效的窗口，属于其它的执行绪。<br>1409 0x0581快速键已经登记。<br>1410 0x0582 Class已经存在。<br>1411 0x0583 Class不存在。<br>1412 0x0584 Class仍然有开启的窗口。<br>1413 0x0585无效的索引。<br>1414 0x0586图标句柄无效。<br>1415 0x0587使用专用的DIALOG窗口文字。<br>1416 0x0588清单方块识别码找不到。<br>1417 0x0589找不到任何通配字符。<br>1418 0x058A执行绪 (thread) 没有开启剪贴簿。<br>1419 0x058B快速键没有登记。<br>1420 0x058C不是有效的对话窗口。<br>1421 0x058D Control ID找不到。<br>1422 0x058E清单方块的讯息无效，因为没有任何的编辑句柄。<br>1423 0x058F窗口不是一个清单方块。<br>1424 0x0590高度必须小于256。<br>1425 0x0591装置范围 (DC) 句柄无效。<br>1426 0x0592锁定程序类型无效。<br>1427 0x0593锁定程序无效。<br>1428 0x0594没有模块句柄就不能设定非本区的锁定。<br>1429 0x0595 This hook procedure can only be set globally.<br>1430 0x0596 The journal hook procedure is already installed.<br>1431 0x0597 The hook procedure is not installed.<br>1432 0x0598无效的单一选择清单方块讯息。<br>1433 0x0599 LB_SETCOUNT传送到non-lazy清单方块。<br>1434 0x059A这个清单方块不支持跳格停驻。<br>1435 0x059B不可毁损由其它执行绪所建立的对象。<br>1436 0x059C子窗口不能有菜单。<br>1437 0x059D窗口没有系统菜单。<br>1438 0x059E无效的消息框样式。<br>1439 0x059F无效的system-wide (SPI_*) 参数。<br>1440 0x05A0屏幕已经锁定。<br>1441 0x05A1 All handles to windows in a multiple-window position structure must have the same parent.<br>1442 0x05A2窗口不是子窗口。<br>1443 0x05A3 GW_* 指令无效。<br>1444 0x05A4执行绪识别码无效。<br>1445 0x05A5无法处理多重文件接口窗口的讯息。<br>1446 0x05A6即现式菜单已在作用中。<br>1447 0x05A7窗口没有滚动条。<br>1448 0x05A8滚动条范围不可以大于0x7FFF。<br>1449 0x05A9无法以指定的方式显示或移除窗口。<br>1450 0x05AA系统资源不足，无法完成所要求的服务。<br>1451 0x05AB系统资源不足，无法完成所要求的服务。<br>1452 0x05AC系统资源不足，无法完成所要求的服务。<br>1453 0x05AD配额不足，无法完成所要求的服务。<br>1454 0x05AE配额不足，无法完成所要求的服务。<br>1455 0x05AF这项作业的paging文件太小，无法完成作业。<br>1456 0x05B0找不到菜单项目。<br>1500 0x05DC事件记录文件坏掉。<br>1501 0x05DD无法开启事件记录文件，因此事件记录服务没有激活。<br>1502 0x05DE事件记录文件已满。<br>1503 0x05DF事件记录文件已经变更。<br>1700 0x06A4字符串连结错误。<br>1701 0x06A5连结句柄 (binding handle) 的类型错误。<br>1702 0x06A6连结句柄 (binding handle) 无效。<br>1703 0x06A7不支持RPC通讯协议顺序。<br>1704 0x06A8 RPC通讯协议顺序无效。<br>1705 0x06A9字符串universal unique identifier (UUID) 无效。<br>1706 0x06AA端点格式错误。<br>1707 0x06AB网络地址无效。<br>1708 0x06AC找不到端点。<br>1709 0x06AD逾时数值无效。<br>1710 0x06AE找不到对象的universal unique identifier (UUID)。<br>1711 0x06AF对象的universal unique identifier (UUID) 已经登记。<br>1712 0x06B0类型的universal unique identifier (UUID) 已经登记。<br>1713 0x06B1 RPC服务器已经在听候。<br>1714 0x06B2没有登记通讯协议顺序。<br>1715 0x06B3 RPC服务器没有听候指令。<br>1716 0x06B4管理员类型不详。<br>1717 0x06B5接口不详。<br>1718 0x06B6没有联机。<br>1719 0x06B7没有通讯协议顺序。<br>1720 0x06B8无法建立端点。<br>1721 0x06B9资源不足，无法完成作业。<br>1722 0x06BA RPC服务器无法使用。<br>1723 0x06BB RPC服务器太忙，无法完成这项作业。<br>1724 0x06BC网络选项无效。<br>1725 0x06BD这个执行绪 (thread) 没有任何执行的远程过程调用。<br>1726 0x06BE远程过程调用失败。<br>1727 0x06BF远程过程调用失败，所以没有执行。<br>1728 0x06C0远程过程调用 (remote procedure call，RPC) 通讯协议发生错误。<br>1730 0x06C2 RPC服务器不支持转送语法。<br>1732 0x06C4不支持universal unique identifier (UUID) 的类型。<br>1733 0x06C5封签 (tag) 无效。<br>1734 0x06C6数组无效。<br>1735 0x06C7连结中没有项目名称。<br>1736 0x06C8名称语法无效。<br>1737 0x06C9名称语法不被支持。<br>1739 0x06CB没有任何网络地址可以用来建立全球唯一的识别码 (UUID)。<br>1740 0x06CC端点重复。<br>1741 0x06CD授权类型不详。<br>1742 0x06CE呼叫次数的上限太小。<br>1743 0x06CF字符串太长。<br>1744 0x06D0找不到RPC通讯协议顺序。<br>1745 0x06D1程序号码超出范围。<br>1746 0x06D2连结中没有包含任何确认信息。<br>1747 0x06D3确认服务不详。<br>1748 0x06D4确认层次不详。<br>1749 0x06D5安全内容无效。<br>1750 0x06D6确认服务不详。<br>1751 0x06D7项目无效。<br>1752 0x06D8服务器端点无法执行这个作业。<br>1753 0x06D9端点对应程序没有其它的端点。<br>1754 0x06DA没有汇出任何的接口。<br>1755 0x06DB项目名称不完整。<br>1756 0x06DC版本选项无效。<br>1757 0x06DD没有其它的成员。<br>1758 0x06DE没有任何资料可以取消汇出。<br>1759 0x06DF接口找不到。<br>1760 0x06E0项目已经存在。<br>1761 0x06E1项目找不到。<br>1762 0x06E2名称服务无法使用。<br>1763 0x06E3网络地址系列无效。<br>1764 0x06E4要求的作业不受支持。<br>1765 0x06E5没有可用来仿真的安全内容。<br>1766 0x06E6远程过程调用 (RPC) 发生内部错误。<br>1767 0x06E7 RPC服务器尝试用整数除以0。<br>1768 0x06E8 RPC服务器发生地址设定错误。<br>1769 0x06E9 RPC服务器的浮点作业导致除以0的运算。<br>1770 0x06EA RPC服务器发生浮点underflow。<br>1771 0x06EB RPC服务器发生浮点overflow。<br>1772 0x06EC清单中可供连结自动代码 的RPC服务器已经用完。<br>1773 0x06ED无法开启字符转换表档案。<br>1774 0x06EE包含字符转换表的档案少于512字节。<br>1775 0x06EF在远程过程调用时，将空的context代码从 客户端传送到主计算机。<br>1777 0x06F1在远程过程调用时内容处理改变。<br>1778 0x06F2传送给远程过程调用的连结代码不符。<br>1779 0x06F3 The stub is unable to get the remote procedure call handle.<br>1780 0x06F4 A null reference pointer was passed to the stub.<br>1781 0x06F5 The enumeration value is out of range.<br>1782 0x06F6字节计数太小。<br>1783 0x06F7 The stub received bad data.<br>1784 0x06F8所提供的使用者缓冲区对要求的作业无效。<br>1785 0x06F9无法辨识磁盘储存媒体。磁盘储存媒体可能还没有制作格式。<br>1786 0x06FA The workstation does not have a trust secret.<br>1787 0x06FB The SAM database on the Windows NT Server does not have a computer account for this workstation trust relationship.<br>1788 0x06FC The trust relationship between the primary domain and the trusted domain failed.<br>1789 0x06FD The trust relationship between this workstation and the primary domain failed.<br>1790 0x06FE网络登入失败。<br>1791 0x06FF远程过程调用已经在这个执行绪进行中。<br>1792 0x0700尝试登入，但网络登入服务尚未激活。<br>1793 0x0701使用者的帐户已经过期。<br>1794 0x0702 The redirector is in use and cannot be unloaded.<br>1795 0x0703指定的打印机驱动程序已经安装。<br>1796 0x0704指定的连接埠无法识别。<br>1797 0x0705打印机驱动程序无法识别。<br>1798 0x0706打印处理器不详。<br>1799 0x0707指定的分隔档无效。<br>1800 0x0708指定的优先级无效。<br>1801 0x0709打印机名称无效。<br>1802 0x070A打印机已经存在。<br>1803 0x070B打印机指令无效。<br>1804 0x070C指定的数据类型无效。<br>1805 0x070D指定的Environment无效。<br>1806 0x070E没有其它的连结。<br>1807 0x070F这是一个跨网域的信任帐户。请用您的全域性使用者帐户或区域性使用者帐户来存取服务器。<br>1808 0x0710这是一个计算机帐户。请使用您的全域性使用者帐户或区域性使用者帐户来存取这个服务器。<br>1809 0x0711这是一个伺服端信任帐户。请用您的全域性使用者帐户或区域性使用者帐户来存取服务器。<br>1810 0x0712指定的网域名称或安全识别码与网域信用信息 不符。<br>1811 0x0713服务器正在使用中，无法卸载。<br>1812 0x0714指定的影像档案没有有包含资源区段。<br>1813 0x0715在影像文件找不到指定的资源类型。<br>1814 0x0716在影像文件找不到指定的资源名称。<br>1815 0x0717在影像文件找不到指定的资源语系识别码。<br>1816 0x0718可用的配额不足，无法处理这项指令。<br>1817 0x0719登录任何接口。<br>1818 0x071A处理这项呼叫的时候，服务器发生变更。<br>1819 0x071B连结代码没有包含所有必须的信息。<br>1820 0x071C通讯失败。<br>1821 0x071D要求的认证层次不被支持。<br>1822 0x071E没有登记任何主要的名称。<br>1823 0x071F指定的错误不是有效的Windows RPC错误码。<br>1824 0x0720 A UUID that is valid only on this computer has been allocated.<br>1825 0x0721发生安全包装指定错误。<br>1826 0x0722没有取消执行绪 (THREAD)<br>1827 0x0723针对编码&#x2F;译码的代码进行无效的作业。<br>1828 0x0724 Incompatible version of the serializing package.<br>1829 0x0725不兼容的RPC stub版本。<br>1898 0x076A找不到群组成员。<br>1899 0x076B无法建立endpoint mapper数据库。<br>1900 0x076C The object universal unique identifier (UUID) is the nil UUID.<br>1901 0x076D指定的项目无效。<br>1902 0x076E指定窗体名称错误。<br>1903 0x076F指定的窗体大小错误。<br>1904 0x0770指定的打印机句柄已经在等候。<br>1905 0x0771指定的打印机已经删除<br>1906 0x0772打印机的状态错误。<br>1907 0x0773使用者在第一次登入之前，必须先变更它的密码。<br>1908 0x0774找不到这个网域的域控制器。<br>1909 0x0775参照的帐户目前被锁定，无法登入。<br>2000 0x07D0像素格式无效。<br>2001 0x07D1指定的驱动程序无效。<br>2002 0x07D2窗口样式或class属性对这项作业无效。<br>2003 0x07D3不支持所要求的中继文件作业。<br>2004 0x07D4不支持要求的传输作业。<br>2005 0x07D5不支持要求的剪辑作业。<br>2202 0x089A指定的使用者名称无效。<br>2250 0x08CA网络联机不存在。<br>2401 0x0961这个网络联机已经开启档案或者要求暂停。<br>2402 0x0962现行的联机仍然存在。<br>2404 0x0964装置正在使用中，无法中断联机。<br>3000 0x0BB8指定的打印机监视器不详。<br>3001 0x0BB9指定的打印机驱动程序正在使用中。<br>3002 0x0BBA找不到排存盘。<br>3003 0x0BBB没有发出StartDocPrinter呼叫。<br>3004 0x0BBC没有发出AddJob呼叫。<br>3005 0x0BBD指定的打印处理器已经安装。<br>3006 0x0BBE指定打印监控程序已经安装。<br>4000 0x0FA0在处理指令时，WINS发生错误。<br>4001 0x0FA1无法删除区域的WINS。<br>4002 0x0FA2 The importation from the file failed.<br>4003 0x0FA3制作备份失败。以前执行过完整的备份吗 ?<br>4004 0x0FA4无法制作备份，请检查目录。 4005 0x0FA5名称不在WINS数据库中。<br>4006 0x0FA6不可用未设定的打印机来取代。<br>6118 0x17E6这个工作群组的服务清单目前无法使用。 </p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 错误代码 </tag>
            
            <tag> 蓝屏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RTX ON 光影 For Minecraft</title>
      <link href="/archives/37/"/>
      <url>/archives/37/</url>
      
        <content type="html"><![CDATA[<p>RTX-ON 材质包下载地址：<br><a href="https://download.mbrjun.cn/MBRjun/RTX.zip">https://download.mbrjun.cn/MBRjun/RTX.zip</a><br><img src="https://cos.mbrjun.cn/IMGS/2020/08/02/RTX.webp" alt="  "></p><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Minecraft </tag>
            
            <tag> 我的世界 </tag>
            
            <tag> RTX </tag>
            
            <tag> Nvidia </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>白嫖Office E5开发者版教程 全新Microsoft365</title>
      <link href="/archives/10/"/>
      <url>/archives/10/</url>
      
        <content type="html"><![CDATA[<p>最近微软把Office365改成了Microsoft365，带来一篇白嫖的攻略</p><span id="more"></span><p>　　Microsoft 365 E5白嫖是怎么回事呢？Microsoft 365相信大家都很熟悉，但是Microsoft 365 E5白嫖是怎么回事呢，下面就让小编带大家一起了解吧。Microsoft 365 E5白嫖，其实就是Office 365，大家可能会很惊讶Microsoft 365怎么会 E5白嫖呢？但事实就是这样，小编也感到非常惊讶。这就是关于Microsoft 365 E5白嫖的事情了，大家有什么想法呢，欢迎在评论区告诉小编一起讨论哦！</p><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p>首先点击<a href="https://developer.microsoft.com/zh-cn/microsoft-365/dev-program">这里</a>，然后点击<strong>Join Now</strong><br><img src="https://cos.mbrjun.cn/IMGS/2020/08/07/JOINNOW.webp" alt="  "></p><p>然后登录，似乎个人和工作教育账户都可以，也可以Github登录<br><img src="https://cos.mbrjun.cn/IMGS/2020/08/07/%E7%99%BB%E5%BD%95.webp" alt="  "></p><p>小编（营销号内味）用Windows Hello登录给大家演示<br><img src="https://cos.mbrjun.cn/IMGS/2020/08/07/hello.webp" alt="  "></p><p>登录你的账户<br><img src="https://cos.mbrjun.cn/IMGS/2020/08/07/%E9%AA%8C%E8%AF%81.webp" alt="  "></p><p>填写信息，国家地区填你所在的（本项需如实填写，有验证，并且决定后续的绑定），公司可以随便填，下面两个必须都勾选才能成功白嫖，然后下一步<br><img src="https://cos.mbrjun.cn/IMGS/2020/08/07/%E4%B8%A4%E9%A1%B9.webp" alt="  "></p><p><strong>下面的信息如图填写，自己填写没白嫖到Micorosft365别找我</strong>第一组勾选个人<br><img src="https://cos.mbrjun.cn/IMGS/2020/08/07/%E9%80%89%E6%8B%A91.webp" alt="  "></p><p>下面一组全部勾选，然后下一步<br><img src="https://cos.mbrjun.cn/IMGS/2020/08/07/%E5%85%A8%E5%8B%BE.webp" alt="  "></p><p>点击关闭即可<br><img src="https://cos.mbrjun.cn/IMGS/2020/08/07/%E5%85%B3%E9%97%AD%E5%8D%B3%E5%8F%AF.webp" alt="  "></p><p>点击<strong>设置订阅</strong><br><img src="https://cos.mbrjun.cn/IMGS/2020/08/07/%E8%AE%BE%E7%BD%AE%E8%AE%A2%E9%98%85.webp" alt="  "></p><p>设置你的账户和密码 不用多说了吧 <strong>国家和地区决定了电话验证码地区</strong><br><img src="https://cos.mbrjun.cn/IMGS/2020/08/07/%E5%A1%AB%E5%86%99.webp" alt="  "></p><p>手机上接收下验证码<br><img src="https://cos.mbrjun.cn/IMGS/2020/08/07/%E9%AA%8C%E8%AF%81%E7%A0%81.webp" alt="  "></p><p>等待分配资源<br><img src="https://cos.mbrjun.cn/IMGS/2020/08/07/%E7%AD%89%E5%BE%85.webp" alt="  "></p><p>分配完成<br><img src="https://cos.mbrjun.cn/IMGS/2020/08/07/%E5%88%86%E9%85%8D%E5%AE%8C%E6%88%90.webp" alt="  "></p><p>到这里你已经成功的白嫖到了Microsoft 365，点击查看资源开始使用</p><h2 id="续期方法"><a href="#续期方法" class="headerlink" title="续期方法"></a>续期方法</h2><p>调用微软的API，推荐搭建一个邮箱服务或者云盘</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Office </tag>
            
            <tag> Microsoft365,正版,微软 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何长期禁用Windows更新，所有win10通用无须改注册表组策略</title>
      <link href="/archives/9/"/>
      <url>/archives/9/</url>
      
        <content type="html"><![CDATA[<p>长期暂停Windows更新，不影响系统服务</p><span id="more"></span><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><ol><li>先关掉自动同步时间，手动设置为停止禁用的前一天</li><li>进入Windows更新设置-高级选项</li><li>设置暂停日期即可</li><li>在第一步的位置重新同步时间</li></ol>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> 软件 </tag>
            
            <tag> win10 </tag>
            
            <tag> 更新 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小白级教程：手把手教你如何在Windows环境创建软阵列</title>
      <link href="/archives/8/"/>
      <url>/archives/8/</url>
      
        <content type="html"><![CDATA[<ol><li>一个人</li><li>至少一块硬盘</li><li>使用线缆把他们连接到计算机</li><li>一台运行着’Windows 8.1&#x2F;10&#x2F;11 专业工作站版’的电脑</li></ol> <span id="more"></span><h2 id="选择你需要的RAID模式"><a href="#选择你需要的RAID模式" class="headerlink" title="选择你需要的RAID模式"></a>选择你需要的RAID模式</h2><p>你需要现在先想好你需要的阵列模式，更改他们需要格式化你的存储，务必选择正确、<br>下面列出了几种常用格式，格式为[名称,官方名称,容错,速度,容量,至少需要的磁盘数]</p><ol><li>PRI,简单无复原,无,100%,100%,1</li><li>RAID0,简单无复原，PRI&#x2F;磁盘数,磁盘数*100%,50%,2</li><li>RAID1，双向镜像,100<em>磁盘数,读取速度为磁盘数</em>100%,写入速度为100%,50%,2</li><li>RAID5, 奇偶校验,&lt;RAID1,&lt;RAID0,&gt;all,大约60%,3</li><li>—，三向镜像,&gt;all并依据磁盘数决定,和RAID0相似，1&#x2F;磁盘数,5</li></ol><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><ol><li><p>打开<strong>控制面板-所有控制面板项-存储空间</strong></p></li><li><p>点击<strong>创建新的池和存储空间</strong><br><img src="https://images.mbrjun.cn/images/2020/04/23/bCgzFuHD59/%E5%AD%98%E5%82%A8.png" alt="存储空间设置"></p></li><li><p>选择你需要使用的磁盘，<strong>不包括备用磁盘</strong><br><img src="https://images.mbrjun.cn/images/2020/04/23/4GhKSxQ7WV/%E9%80%89%E6%8B%A9%E7%A3%81%E7%9B%98.png" alt="选择磁盘"></p></li><li><p>完成你的设置，设置包括：RAID模式、分区设置、分区名、分区容量<br>PS:<strong>分区类型选择ReFS</strong></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> 教程 </tag>
            
            <tag> 存储 </tag>
            
            <tag> 存储空间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Appx源 MCBE 1.14.60</title>
      <link href="/archives/5/"/>
      <url>/archives/5/</url>
      
        <content type="html"><![CDATA[<p>别看了，已经失效了（</p><span id="more"></span><p>![  ][1]</p><h2 id="新来必读-Q-A"><a href="#新来必读-Q-A" class="headerlink" title="新来必读 Q&amp;A"></a>新来必读 Q&amp;A</h2><p><strong>为什么我要出这篇文章</strong> 因为商店MC太贵了，穷人买不起系列<br><strong>我是来找安装包的，这篇文章给链接了吗</strong> 文末有链接<br><strong>站长提供的MC安装包能用吗 有没有病毒</strong> 亲测可使用，无毒（已通过所有主流杀软包括360 电脑管家 Avast 火绒 McAfee等）<br><strong>下载好如何安装</strong> 直接运行appx即可，软件默认安装在系统盘(路径%systemdrive%\Windowsapps)，并会创建开始菜单快捷方式，<strong>不会创建在桌面</strong><br><strong>安装包是从哪里获取的</strong> 微软商店<br><strong>如何安装在其他盘</strong> 日后出教程<br><strong>语言是什么</strong> 默认跟随系统，可更改</p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>emm没概述了，直接发软件截图和下载链接吧<br>本文章内提供的软件仅供学习使用，有能力请支持正版<br>正版购买链接：<a href="http://minecraft.net/">Minecraft官网</a></p><h2 id="软件截图"><a href="#软件截图" class="headerlink" title="软件截图"></a>软件截图</h2><p>没有截图</p><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p><a href="ms-appinstaller:?source=https://download.mbrjun.cn/MBRjun/Microsoft.MinecraftUWP_1.14.6005.0_x64__8wekyb3d8bbwe.Appx">从 Microsoft Store 自动获取</a><br><a href="https://download.mbrjun.cn/MBRjun/Microsoft.MinecraftUWP_1.14.6005.0_x64__8wekyb3d8bbwe.Appx">高速下载</a><br>下载链接永久免费且仅供学习使用，请在下载后24小时内删除，文件上传者和站长不负任何责任</p><hr><h2 id="title-Appx源-MCBE-1-14-60date-2020-04-23-13-02-00updated-2022-04-07-01-34-40categories-游戏tags-教程-MC-软件-下载-Minecraft"><a href="#title-Appx源-MCBE-1-14-60date-2020-04-23-13-02-00updated-2022-04-07-01-34-40categories-游戏tags-教程-MC-软件-下载-Minecraft" class="headerlink" title="title: Appx源 MCBE 1.14.60date: 2020-04-23 13:02:00updated: 2022-04-07 01:34:40categories: 游戏tags:- 教程- MC,软件,下载,Minecraft"></a>title: Appx源 MCBE 1.14.60<br>date: 2020-04-23 13:02:00<br>updated: 2022-04-07 01:34:40<br>categories: 游戏<br>tags:<br>- 教程<br>- MC,软件,下载,Minecraft</h2><p>![  ][1]</p><h2 id="新来必读-Q-A-1"><a href="#新来必读-Q-A-1" class="headerlink" title="新来必读 Q&amp;A"></a>新来必读 Q&amp;A</h2><p><strong>为什么我要出这篇文章</strong> 因为商店MC太贵了，穷人买不起系列<br><strong>我是来找安装包的，这篇文章给链接了吗</strong> 文末有链接<br><strong>站长提供的MC安装包能用吗 有没有病毒</strong> 亲测可使用，无毒（已通过所有主流杀软包括360 电脑管家 Avast 火绒 McAfee等）<br><strong>下载好如何安装</strong> 直接运行appx即可，软件默认安装在系统盘(路径%systemdrive%\Windowsapps)，并会创建开始菜单快捷方式，<strong>不会创建在桌面</strong><br><strong>安装包是从哪里获取的</strong> 微软商店<br><strong>如何安装在其他盘</strong> 日后出教程<br><strong>语言是什么</strong> 默认跟随系统，可更改</p><h2 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h2><p>emm没概述了，直接发软件截图和下载链接吧<br>本文章内提供的软件仅供学习使用，有能力请支持正版<br>正版购买链接：<a href="http://minecraft.net/">Minecraft官网</a></p><h2 id="软件截图-1"><a href="#软件截图-1" class="headerlink" title="软件截图"></a>软件截图</h2><p>没有截图</p><h2 id="下载地址-1"><a href="#下载地址-1" class="headerlink" title="下载地址"></a>下载地址</h2><p><a href="ms-appinstaller:?source=https://download.mbrjun.cn/MBRjun/Microsoft.MinecraftUWP_1.14.6005.0_x64__8wekyb3d8bbwe.Appx">从 Microsoft Store 自动获取</a><br><a href="https://download.mbrjun.cn/MBRjun/Microsoft.MinecraftUWP_1.14.6005.0_x64__8wekyb3d8bbwe.Appx">高速下载</a><br>下载链接永久免费且仅供学习使用，请在下载后24小时内删除，文件上传者和站长不负任何责任</p><hr><h2 id="title-Appx源-MCBE-1-14-60date-2020-04-23-13-02-00updated-2022-04-07-01-34-40categories-工具tags-教程-MC-软件-下载-Minecraft"><a href="#title-Appx源-MCBE-1-14-60date-2020-04-23-13-02-00updated-2022-04-07-01-34-40categories-工具tags-教程-MC-软件-下载-Minecraft" class="headerlink" title="title: Appx源 MCBE 1.14.60date: 2020-04-23 13:02:00updated: 2022-04-07 01:34:40categories: 工具tags:- 教程- MC,软件,下载,Minecraft"></a>title: Appx源 MCBE 1.14.60<br>date: 2020-04-23 13:02:00<br>updated: 2022-04-07 01:34:40<br>categories: 工具<br>tags:<br>- 教程<br>- MC,软件,下载,Minecraft</h2><p>![  ][1]</p><h2 id="新来必读-Q-A-2"><a href="#新来必读-Q-A-2" class="headerlink" title="新来必读 Q&amp;A"></a>新来必读 Q&amp;A</h2><p><strong>为什么我要出这篇文章</strong> 因为商店MC太贵了，穷人买不起系列<br><strong>我是来找安装包的，这篇文章给链接了吗</strong> 文末有链接<br><strong>站长提供的MC安装包能用吗 有没有病毒</strong> 亲测可使用，无毒（已通过所有主流杀软包括360 电脑管家 Avast 火绒 McAfee等）<br><strong>下载好如何安装</strong> 直接运行appx即可，软件默认安装在系统盘(路径%systemdrive%\Windowsapps)，并会创建开始菜单快捷方式，<strong>不会创建在桌面</strong><br><strong>安装包是从哪里获取的</strong> 微软商店<br><strong>如何安装在其他盘</strong> 日后出教程<br><strong>语言是什么</strong> 默认跟随系统，可更改</p><h2 id="概述-2"><a href="#概述-2" class="headerlink" title="概述"></a>概述</h2><p>emm没概述了，直接发软件截图和下载链接吧<br>本文章内提供的软件仅供学习使用，有能力请支持正版<br>正版购买链接：<a href="http://minecraft.net/">Minecraft官网</a></p><h2 id="软件截图-2"><a href="#软件截图-2" class="headerlink" title="软件截图"></a>软件截图</h2><p>没有截图</p><h2 id="下载地址-2"><a href="#下载地址-2" class="headerlink" title="下载地址"></a>下载地址</h2><p><a href="ms-appinstaller:?source=https://download.mbrjun.cn/MBRjun/Microsoft.MinecraftUWP_1.14.6005.0_x64__8wekyb3d8bbwe.Appx">从 Microsoft Store 自动获取</a><br><a href="https://download.mbrjun.cn/MBRjun/Microsoft.MinecraftUWP_1.14.6005.0_x64__8wekyb3d8bbwe.Appx">高速下载</a><br>下载链接永久免费且仅供学习使用，请在下载后24小时内删除，文件上传者和站长不负任何责任</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> MC,软件,下载,Minecraft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MBR图床怎么使用</title>
      <link href="/archives/4/"/>
      <url>/archives/4/</url>
      
        <content type="html"><![CDATA[<p>跑路了</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/archives/hello-world/"/>
      <url>/archives/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h2 id="字体渲染测试"><a href="#字体渲染测试" class="headerlink" title="字体渲染测试"></a>字体渲染测试</h2><h3 id="中国智造，惠及全球。"><a href="#中国智造，惠及全球。" class="headerlink" title="中国智造，惠及全球。"></a>中国智造，惠及全球。</h3><h4 id="中国智造，惠及全球。-1"><a href="#中国智造，惠及全球。-1" class="headerlink" title="中国智造，惠及全球。"></a>中国智造，惠及全球。</h4><p>中国智造，惠及全球。<br><em>中国智造，惠及全球。</em><br><strong>中国智造，惠及全球。</strong><br><em><strong>中国智造，惠及全球。</strong></em></p><h3 id="I-can-eat-glass-it-does-not-hurt-me"><a href="#I-can-eat-glass-it-does-not-hurt-me" class="headerlink" title="I can eat glass, it does not hurt me."></a>I can eat glass, it does not hurt me.</h3><h4 id="I-can-eat-glass-it-does-not-hurt-me-1"><a href="#I-can-eat-glass-it-does-not-hurt-me-1" class="headerlink" title="I can eat glass, it does not hurt me."></a>I can eat glass, it does not hurt me.</h4><p>I can eat glass, it does not hurt me.<br><em>I can eat glass, it does not hurt me.</em><br><strong>I can eat glass, it does not hurt me.</strong><br><em><strong>I can eat glass, it does not hurt me.</strong></em></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
