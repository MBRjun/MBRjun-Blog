<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MBRjun-Blog</title>
  
  
  <link href="https://www.mbrjun.cn/atom.xml" rel="self"/>
  
  <link href="https://www.mbrjun.cn/"/>
  <updated>2023-06-27T16:42:50.000Z</updated>
  <id>https://www.mbrjun.cn/</id>
  
  <author>
    <name>MBRjun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>RTL8168 升级使用 PVE 8.0</title>
    <link href="https://www.mbrjun.cn/archives/490/"/>
    <id>https://www.mbrjun.cn/archives/490/</id>
    <published>2023-06-27T16:42:50.000Z</published>
    <updated>2023-06-27T16:42:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>PVE 8.0 使用了新的 Linux 6.2 内核，但该内核版本也会使 RTL8168 网卡无法正常工作，需要降级内核版本才能使用</p><span id="more"></span><blockquote><p>建议大家远离 RTL 8168 网卡，他不仅被 ESXi 7&#x2F;8 所遗忘，如果对面是一个 Intel 的 I225-LM 网卡，更会直接自闭（无法自动协商），现在，他甚至被 <code>pve-kernel-6.2</code> 抛弃  </p></blockquote><p><a href="https://www.mbrjun.cn/archives/489/">先按照常规方法升级</a>，然后确认下你的网卡型号，按下面的步骤降级内核  </p><h2 id="确认网卡型号"><a href="#确认网卡型号" class="headerlink" title="确认网卡型号"></a>确认网卡型号</h2><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lspci | grep Ethernet</span><br></pre></td></tr></tbody></table></figure></div></figure><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">txt</li></ul></figcaption><div class="tabs-content"><figure class="highlight txt" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">02:00.0 Ethernet controller: Realtek Semiconductor Co., Ltd. RTL8111/8168/8411 PCI Express Gigabit Ethernet Controller (rev 15)</span><br></pre></td></tr></tbody></table></figure></div></figure><p>如果看到类似这样的输出，有 <code>RTL8111/8168/8411</code> 关键字，那就恭喜中奖，<strong>你正在使用 RTL 8168 网卡！</strong></p><h2 id="降级到-6-1-内核"><a href="#降级到-6-1-内核" class="headerlink" title="降级到 6.1 内核"></a>降级到 6.1 内核</h2><p>其实也不是必须用 6.1，降级到一个你认为稳定的也可以（我是不推荐 5.13 和 6.2），比如 5.15 和 5.19，但是我测试 6.1 是稳定的而且较新的 LTS  </p><p>然后就是注意别装成 Debian 原版内核了，我们要装的是 Proxmox VE 修改的内核</p><p>除了内核本体外还建议装下 kernel header  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install pve-kernel-6.1 pve-header-6.1</span><br></pre></td></tr></tbody></table></figure></div></figure><p>然后就可以使用自带的 <code>proxmox-boot-tool</code> 调内核优先级了</p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxmox-boot-tool kernel list</span><br></pre></td></tr></tbody></table></figure></div></figure><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">txt</li></ul></figcaption><div class="tabs-content"><figure class="highlight txt" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Manually selected kernels:</span><br><span class="line">None.</span><br><span class="line"></span><br><span class="line">Automatically selected kernels:</span><br><span class="line">6.1.10-1-pve</span><br><span class="line">6.2.16-3-pve</span><br></pre></td></tr></tbody></table></figure></div></figure><p>将 6.1 内核优先级调最高，以我现在的 6.1.10-1 为例：</p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxmox-boot-tool kernel pin 6.1.10-1-pve</span><br></pre></td></tr></tbody></table></figure></div></figure><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">txt</li></ul></figcaption><div class="tabs-content"><figure class="highlight txt" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Setting '6.1.10-1-pve' as grub default entry and running update-grub.</span><br><span class="line">Generating grub configuration file ...</span><br><span class="line">Found linux image: /boot/vmlinuz-6.2.16-3-pve</span><br><span class="line">Found initrd image: /boot/initrd.img-6.2.16-3-pve</span><br><span class="line">Found linux image: /boot/vmlinuz-6.1.10-1-pve</span><br><span class="line">Found initrd image: /boot/initrd.img-6.1.10-1-pve</span><br><span class="line">Found memtest86+ 64bit EFI image: /boot/memtest86+x64.efi</span><br><span class="line">Adding boot menu entry for UEFI Firmware Settings ...</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">Manually selected kernels:</span><br><span class="line">None.</span><br><span class="line"></span><br><span class="line">Automatically selected kernels:</span><br><span class="line">6.1.10-1-pve</span><br><span class="line">6.2.16-3-pve</span><br><span class="line"></span><br><span class="line">Pinned kernel:</span><br><span class="line">6.1.10-1-pve</span><br></pre></td></tr></tbody></table></figure></div></figure><p>重启就 OK 了  </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;PVE 8.0 使用了新的 Linux 6.2 内核，但该内核版本也会使 RTL8168 网卡无法正常工作，需要降级内核版本才能使用&lt;/p&gt;</summary>
    
    
    
    <category term="操作系统" scheme="https://www.mbrjun.cn/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="Proxmox VE" scheme="https://www.mbrjun.cn/tags/Proxmox-VE/"/>
    
    <category term="服务器" scheme="https://www.mbrjun.cn/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="虚拟化" scheme="https://www.mbrjun.cn/tags/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
    <category term="PVE" scheme="https://www.mbrjun.cn/tags/PVE/"/>
    
    <category term="RTL8168" scheme="https://www.mbrjun.cn/tags/RTL8168/"/>
    
  </entry>
  
  <entry>
    <title>Proxmox VE 8 发布/更新教程</title>
    <link href="https://www.mbrjun.cn/archives/489/"/>
    <id>https://www.mbrjun.cn/archives/489/</id>
    <published>2023-06-23T16:00:00.000Z</published>
    <updated>2023-06-23T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Proxmox VE 8.0 已于 2023 年 6 月 22 日发布，PVE 8.0 使用 Linux 6.2 内核和最新的 Debian 12 Bookworm 底层系统</p><span id="more"></span><h2 id="新特性"><a href="#新特性" class="headerlink" title="新特性"></a>新特性</h2><ul><li>默认使用 <code>x86-64-v2-AES</code> CPU 类型代替 <code>qemu64</code>&#x2F;<code>kvm64</code> 来提高性能  </li><li>ISO 安装新增 TUI</li><li>2FA 安全性提高</li><li>原生的深色模式</li><li>BtrFS 性能提升</li><li>核心软件包（<code>libc6</code>、<code>OpenSSL</code>、<code>OpenSSH</code>、<code>python3</code>等）更新</li></ul><h2 id="更新教程"><a href="#更新教程" class="headerlink" title="更新教程"></a>更新教程</h2><h3 id="检查现有版本"><a href="#检查现有版本" class="headerlink" title="检查现有版本"></a>检查现有版本</h3><p>在升级到 Proxmox VE 8.0 之前，您需要先升级到最新的 Proxmox VE 7.4  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt dist-upgrade</span><br></pre></td></tr></tbody></table></figure></div></figure><p><img src="https://cos.mbrjun.cn/IMGS/2023/06/17/35267825-2bd1-4c47-ba1a-f0da940bd969.webp" alt="Upgrade to Proxmox VE 7.4"></p><p>无需重启，然后输入 <code>pveversion</code> 命令，检查版本是否已更新到 7.4-15 或更新版本  </p><h3 id="更新前检查"><a href="#更新前检查" class="headerlink" title="更新前检查"></a>更新前检查</h3><p>运行命令 <code>pve7to8 --full</code> 来自动检查是否能升级 Proxmox VE 8.0  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">txt</li></ul></figcaption><div class="tabs-content"><figure class="highlight txt" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">= SUMMARY =</span><br><span class="line">TOTAL:    34</span><br><span class="line">PASSED:   27</span><br><span class="line">SKIPPED:  3</span><br><span class="line">WARNINGS: 4</span><br><span class="line">FAILURES: 0</span><br><span class="line"></span><br><span class="line">ATTENTION: Please check the output for detailed information!</span><br></pre></td></tr></tbody></table></figure></div></figure><h3 id="cgroup2-迁移"><a href="#cgroup2-迁移" class="headerlink" title="cgroup2 迁移"></a>cgroup2 迁移</h3><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'s/lxc.cgroup./lxc.cgroup2./g'</span> /etc/pve/lxc/*.conf</span><br></pre></td></tr></tbody></table></figure></div></figure><h3 id="开始更新"><a href="#开始更新" class="headerlink" title="开始更新"></a>开始更新</h3><p><strong>我们需要先添加 Debian 12 和 Proxmox 8 存储库</strong>：  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'s/bullseye/bookworm/g'</span> /etc/apt/sources.list</span><br></pre></td></tr></tbody></table></figure></div></figure><p>如果你是一个企业订阅用户，继续执行：</p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"deb https://enterprise.proxmox.com/debian/pve bookworm pve-enterprise"</span> &gt; /etc/apt/sources.list.d/pve-enterprise.list</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"deb https://enterprise.proxmox.com/debian/ceph-quincy bookworm enterprise"</span> &gt; /etc/apt/sources.list.d/ceph.list</span><br></pre></td></tr></tbody></table></figure></div></figure><p>否则请使用：</p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"deb http://download.proxmox.com/debian/ceph-quincy bookworm no-subscription"</span> &gt; /etc/apt/sources.list.d/ceph.list</span><br><span class="line">sed -i -e <span class="string">'s/bullseye/bookworm/g'</span> /etc/apt/sources.list.d/pve-install-repo.list</span><br></pre></td></tr></tbody></table></figure></div></figure><p>完成后，使用 <code>apt update</code> 刷新软件源，<strong>然后运行 <code>apt dist-upgrade</code> 更新</strong>  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">txt</li></ul></figcaption><div class="tabs-content"><figure class="highlight txt" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1174 upgraded, 199 newly installed, 15 to remove and 0 not upgraded.</span><br><span class="line">Need to get 1,441 MB of archives.</span><br><span class="line">After this operation, 1,917 MB of additional disk space will be used.</span><br></pre></td></tr></tbody></table></figure></div></figure><h2 id="更新内容"><a href="#更新内容" class="headerlink" title="更新内容"></a>更新内容</h2><p>更新时，系统会发送一封邮件到管理员邮箱，其中包含了更新的内容  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/06/24/c59cc0b2-a320-4a07-80be-4fba93b73413.webp" alt="apt-listchanges"></p><h2 id="配置文件修改"><a href="#配置文件修改" class="headerlink" title="配置文件修改"></a>配置文件修改</h2><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">txt</li></ul></figcaption><div class="tabs-content"><figure class="highlight txt" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Configuration file '/etc/issue'</span><br><span class="line">==&gt; Modified (by you or by a script) since installation.</span><br><span class="line">==&gt; Package distributor has shipped an updated version.</span><br><span class="line">What would you like to do about it ?  Your options are:</span><br><span class="line">    Y or I  : install the package maintainer's version</span><br><span class="line">    N or O  : keep your currently-installed version</span><br><span class="line">    D     : show the differences between the versions</span><br><span class="line">    Z     : start a shell to examine the situation</span><br><span class="line">The default action is to keep your current version.</span><br><span class="line">*** issue (Y/I/N/O/D/Z) [default=N] ?</span><br></pre></td></tr></tbody></table></figure></div></figure><ul><li><code>/etc/issue</code> 建议使用 N</li><li><code>/etc/lvm/lvm.conf</code> 建议使用 Y</li><li><code>/etc/default/grub</code> 建议使用 N</li></ul><h2 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h2><p>如果在更新过程中出现了错误（例如：SSH 连接中断、电源故障），导致更新中断，则可能需要使用下面的命令恢复：  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt -f install</span><br></pre></td></tr></tbody></table></figure></div></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Proxmox VE 8.0 已于 2023 年 6 月 22 日发布，PVE 8.0 使用 Linux 6.2 内核和最新的 Debian 12 Bookworm 底层系统&lt;/p&gt;</summary>
    
    
    
    <category term="操作系统" scheme="https://www.mbrjun.cn/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="Proxmox VE" scheme="https://www.mbrjun.cn/tags/Proxmox-VE/"/>
    
    <category term="服务器" scheme="https://www.mbrjun.cn/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="虚拟化" scheme="https://www.mbrjun.cn/tags/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
    <category term="ESXi" scheme="https://www.mbrjun.cn/tags/ESXi/"/>
    
    <category term="软路由" scheme="https://www.mbrjun.cn/tags/%E8%BD%AF%E8%B7%AF%E7%94%B1/"/>
    
    <category term="PVE" scheme="https://www.mbrjun.cn/tags/PVE/"/>
    
  </entry>
  
  <entry>
    <title>INTERNET OVERDOSE[EXP 10+] S 97.4013%</title>
    <link href="https://www.mbrjun.cn/archives/mai-2023-INTERNET-OVERDOSE-EXP-1/"/>
    <id>https://www.mbrjun.cn/archives/mai-2023-INTERNET-OVERDOSE-EXP-1/</id>
    <published>2023-05-27T09:07:00.000Z</published>
    <updated>2023-05-28T15:58:05.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cos.mbrjun.cn/IMGS/2023/05/29/703bc40a-3c58-47bc-a86b-6c20312fe1c9.webp" alt="maimai でらっくす FESTiVAL+ Plus: INTERNET OVERDOSE[EXP 10+] S 97.4013%"><br>maimai でらっくす FESTiVAL+ Plus: INTERNET OVERDOSE[EXP 10+] S 97.4013% <a href="https://b23.tv/BV1nu411s79f">BV1nu411s79f</a>  </p><span id="more"></span><iframe id=sbrxp src="https://player.bilibili.com/player.html?aid=529136122&cid=1144185376&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="width: 960px; height: 560px; max-width: 100%"> </iframe>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://cos.mbrjun.cn/IMGS/2023/05/29/703bc40a-3c58-47bc-a86b-6c20312fe1c9.webp&quot; alt=&quot;maimai でらっくす FESTiVAL+ Plus: INTERNET OVERDOSE[EXP 10+] S 97.4013%&quot;&gt;&lt;br&gt;maimai でらっくす FESTiVAL+ Plus: INTERNET OVERDOSE[EXP 10+] S 97.4013% &lt;a href=&quot;https://b23.tv/BV1nu411s79f&quot;&gt;BV1nu411s79f&lt;/a&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="maimai" scheme="https://www.mbrjun.cn/categories/maimai/"/>
    
    
    <category term="maimai" scheme="https://www.mbrjun.cn/tags/maimai/"/>
    
    <category term="maimaiDX" scheme="https://www.mbrjun.cn/tags/maimaiDX/"/>
    
    <category term="舞萌" scheme="https://www.mbrjun.cn/tags/%E8%88%9E%E8%90%8C/"/>
    
    <category term="舞萌DX" scheme="https://www.mbrjun.cn/tags/%E8%88%9E%E8%90%8CDX/"/>
    
    <category term="maimai でらっくす" scheme="https://www.mbrjun.cn/tags/maimai-%E3%81%A7%E3%82%89%E3%81%A3%E3%81%8F%E3%81%99/"/>
    
  </entry>
  
  <entry>
    <title>Can A Few Make A Difference?</title>
    <link href="https://www.mbrjun.cn/archives/488/"/>
    <id>https://www.mbrjun.cn/archives/488/</id>
    <published>2023-05-25T16:13:33.000Z</published>
    <updated>2023-05-25T16:13:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>Some of the greatest problems we face today are the destruction of our environment. Brown clouds, polluted water, endangered wild animals…, these problems seem so huge.  </p><p>So my family does what we can. We take cloth bags to stores instead of using plastic bags. We walk where we don’t have to drive…  </p><p>But does it do any good? When I am the only one in line at the market with cloth bags, am I doing any good? Does my walking to stores make any real difference to the world?  </p><span id="more"></span><p>I recently learned something about flamingos which like to get together in groups of a thousand or more. Every year, when the time comes for migration, a few of them first takeoff from the lake. But none of the others seem to notice, so the small group returns.  </p><p>However, the next day they try again. This time few more fly along with them, but most of them still pay no attention, so they return again. They try for several times. Every time a few more birds join in but, since the thousands of others still take no notice, the great migration plan is once more stopped.  </p><p>Then one day something changes. The same small group of birds once again starts flying and a small number more join in just as before, then more. Finally, they all take flight and the migration really begins.  </p><p>What a spectacular sight it must be-thousands of flamingos taking off into the sky at once!  </p><p>A few can make a difference. Even if you’re the one to take the first step, and continue trying, others will someday take notice and together we will solve even our greatest problems.  </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Some of the greatest problems we face today are the destruction of our environment. Brown clouds, polluted water, endangered wild animals…, these problems seem so huge.  &lt;/p&gt;
&lt;p&gt;So my family does what we can. We take cloth bags to stores instead of using plastic bags. We walk where we don’t have to drive…  &lt;/p&gt;
&lt;p&gt;But does it do any good? When I am the only one in line at the market with cloth bags, am I doing any good? Does my walking to stores make any real difference to the world?  &lt;/p&gt;</summary>
    
    
    
    <category term="日常" scheme="https://www.mbrjun.cn/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="Environment" scheme="https://www.mbrjun.cn/tags/Environment/"/>
    
    <category term="flamingos" scheme="https://www.mbrjun.cn/tags/flamingos/"/>
    
    <category term="Plastic Pollution" scheme="https://www.mbrjun.cn/tags/Plastic-Pollution/"/>
    
    <category term="Cloth Bags" scheme="https://www.mbrjun.cn/tags/Cloth-Bags/"/>
    
  </entry>
  
  <entry>
    <title>中通快递送丢一张 AIME 卡</title>
    <link href="https://www.mbrjun.cn/archives/487/"/>
    <id>https://www.mbrjun.cn/archives/487/</id>
    <published>2023-05-19T11:49:00.000Z</published>
    <updated>2023-05-19T11:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>送丢的是 maimai FESTiVAL 的限定卡，最后快递赔了 385 CNY  </p><span id="more"></span><p><img src="https://cos.mbrjun.cn/IMGS/2023/05/23/4e72591d-1952-4b35-90ec-a885b90dc3d4.webp" alt="maimai FESTiVAL aime"></p><p>快递卡了四天不动，开了个投诉单，然后快递说在找  </p><p>转天就告诉我件丢了  </p><blockquote><p>【中通】您好我是中通锦绣分部网点的客服工号是001您反馈的单号尾号8155发件催件的问题很抱歉给您带来了不便，经核实此件疑似不慎遗失，我司已微信理赔寄件人385元，我司联系寄件人后台给您处理售后问题，因我司电联联系不上您按短信内容有问题请联系17635999968</p></blockquote><p><del>不会真的是快递员太馋了给私吞了吧</del>  </p><p>物流信息到现在也没更新，不知道中通还能不能找到件  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/05/23/112c2594-a974-460a-8235-1807195d8537.webp" alt="ZTO 78685530518155"><br>运单号： <code>78685530518155</code>（<a href="https://www.17track.net/?nums=78685530518155">追踪</a>）  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/05/23/90c73b90-66a6-405c-ac92-beba0bbc1a7c.webp" alt="maimai FESTiVAL aime"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;送丢的是 maimai FESTiVAL 的限定卡，最后快递赔了 385 CNY  &lt;/p&gt;</summary>
    
    
    
    <category term="日常" scheme="https://www.mbrjun.cn/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="maimai" scheme="https://www.mbrjun.cn/tags/maimai/"/>
    
    <category term="中通快递" scheme="https://www.mbrjun.cn/tags/%E4%B8%AD%E9%80%9A%E5%BF%AB%E9%80%92/"/>
    
    <category term="头文字D" scheme="https://www.mbrjun.cn/tags/%E5%A4%B4%E6%96%87%E5%AD%97D/"/>
    
    <category term="中二" scheme="https://www.mbrjun.cn/tags/%E4%B8%AD%E4%BA%8C/"/>
    
    <category term="AIME" scheme="https://www.mbrjun.cn/tags/AIME/"/>
    
    <category term="AmusementIC" scheme="https://www.mbrjun.cn/tags/AmusementIC/"/>
    
  </entry>
  
  <entry>
    <title>使用 JS Fetch 测试网站连通性</title>
    <link href="https://www.mbrjun.cn/archives/486/"/>
    <id>https://www.mbrjun.cn/archives/486/</id>
    <published>2023-05-11T13:56:02.000Z</published>
    <updated>2023-05-11T13:56:02.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在浏览器或-Node-js-中使用-JavaScript-的-Fetch-测试网站连通性"><a href="#在浏览器或-Node-js-中使用-JavaScript-的-Fetch-测试网站连通性" class="headerlink" title="在浏览器或 Node.js 中使用 JavaScript 的 Fetch 测试网站连通性"></a>在浏览器或 Node.js 中使用 JavaScript 的 Fetch 测试网站连通性<br><span id="more"></span></h2><p>自己有在浏览器测试网站连通性的需求，最后使用 Fetch 实现了，就在这里分享一下中间遇到的坑和最后的解决方案，不想看前面废话可以直接<a href="#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88">跳转文末查看代码</a>  </p><h2 id="XHR"><a href="#XHR" class="headerlink" title="XHR"></a>XHR</h2><p>最开始打算直接用 <code>XMLHttpRequest</code> 解决，但是浏览器遇到了跨域拦截（CORS 失败）  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">js</li></ul></figcaption><div class="tabs-content"><figure class="highlight js" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">xhr.<span class="title function_">open</span>(<span class="string">'get'</span>, <span class="string">'https://www.google.com'</span>, !<span class="number">0</span>);</span><br><span class="line"><span class="comment">// async 参数被设置为 !0</span></span><br><span class="line"><span class="comment">// !0 在 JS 中是 true 的一种简写</span></span><br><span class="line">xhr.<span class="title function_">send</span>(<span class="literal">null</span>);</span><br></pre></td></tr></tbody></table></figure></div></figure><p><img src="https://cos.mbrjun.cn/IMGS/2023/05/11/bb7d4f58-4c87-4259-be7b-0a418c637084.webp" alt="XHR CORS"></p><p>出现 <code>Access to XMLHttpRequest at (url) from origin (src) has been blocked by CORS policy: No &#39;Access-Control-Allow-Origin&#39; header is present on the requested resource.</code> 报错，是因为待测的目标 URL（在这个示例中是 <a href="https://www.google.com/">https://www.google.com</a> ）没有允许浏览器读取响应信息  </p><p>正常情况下，<code>xhr.status</code> 应该会给我们响应的状态码，浏览器此时已经成功收到了 302 重定向的响应，但是 xhr 请求出现了 CORS 错误，再尝试获取这个状态码只能得到 0<br>也就是说，无论是否可以访问待测网站，<code>xhr.status</code> 都只会返回 0  </p><p>在浏览器中，XHR 请求都受到 CORS 策略的限制，而 XHR 也无法使用 <code>no-cors</code> 模式来绕过这个限制，这个时候，我们就需要使用 <code>Fetch</code> 了</p><h2 id="Fetch"><a href="#Fetch" class="headerlink" title="Fetch"></a>Fetch</h2><p><code>Fetch</code> 是 <code>XMLHttpRequest</code> 更现代的替代品，是 ES6（ECMAScript 2015）的东西（也就是说不支持 IE）  </p><p>除了过时的 Internet Explorer 和 Windows Script Host，基本所有可以执行 JS 的地方都能使用 <code>Fetch</code>，你甚至可以在 Node.js 中使用它  </p><p>先用 <code>Fetch</code> 重写下文章开头的代码  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">js</li></ul></figcaption><div class="tabs-content"><figure class="highlight js" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">fetch</span>(<span class="string">"https://www.google.com"</span>, {</span><br><span class="line">    <span class="attr">method</span>: <span class="string">"GET"</span>,</span><br><span class="line">    <span class="attr">body</span>: <span class="literal">null</span>,</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div></figure><p><img src="https://cos.mbrjun.cn/IMGS/2023/05/11/9fd946c9-88c5-4393-8d46-c4d8067884b6.webp" alt="Fetch CORS"></p><p>同样会获得 CORS 错误，提示 <code>Failed to fetch</code>，注意看，这个错误属于 <code>TypeError</code>  </p><p>但是我们可以让 <code>Fetch</code> 使用 <code>no-cors</code>，来绕过这个 CORS 限制！</p><p>改进一下代码，然后观察 <code>Fetch</code> 出现的 Error：</p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">js</li></ul></figcaption><div class="tabs-content"><figure class="highlight js" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> request = <span class="title function_">fetch</span>(<span class="string">"https://www.google.com"</span>, {</span><br><span class="line">    <span class="attr">method</span>: <span class="string">"GET"</span>,</span><br><span class="line">    <span class="attr">body</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">'no-cors'</span></span><br><span class="line">})</span><br><span class="line">request.<span class="title function_">then</span>( <span class="function"><span class="params">res</span> =&gt;</span> {</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">json</span>()</span><br><span class="line">})</span><br><span class="line">.<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'Error:'</span>, error))</span><br><span class="line">.<span class="title function_">then</span>( <span class="function"><span class="params">response</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'Success:'</span>, response));</span><br></pre></td></tr></tbody></table></figure></div></figure><p>执行这段代码，我们会得到 <code>Error: SyntaxError: Unexpected end of input</code>  </p><p>为什么会得到 <code>SyntaxError</code> 呢？因为 no-cors 会阻止浏览器获取响应的内容  </p><p>但实际上，如果我们得到了 <code>SyntaxError</code>，则说明这个请求已经发送成功，并且接收到了响应  </p><p>让我们将测试 URL 改为一个不存在的地址，再试一遍：  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">js</li></ul></figcaption><div class="tabs-content"><figure class="highlight js" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> request = <span class="title function_">fetch</span>(<span class="string">"https://this.domain.does.not.exist"</span>, {</span><br><span class="line">    <span class="attr">method</span>: <span class="string">"GET"</span>,</span><br><span class="line">    <span class="attr">body</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">'no-cors'</span></span><br><span class="line">})</span><br><span class="line">request.<span class="title function_">then</span>( <span class="function"><span class="params">res</span> =&gt;</span> {</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">json</span>()</span><br><span class="line">})</span><br><span class="line">.<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'Error:'</span>, error))</span><br><span class="line">.<span class="title function_">then</span>( <span class="function"><span class="params">response</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'Success:'</span>, response));</span><br></pre></td></tr></tbody></table></figure></div></figure><p>执行代码，我们会得到 <code>Error: TypeError: Failed to fetch</code>  </p><p>也就是说，带上 <code>no-cors</code> 之后，虽然请求成功也会报错，但是出现的是另一个报错  </p><ul><li>请求成功：<code>SyntaxError</code></li><li>请求失败：<code>TypeError</code></li></ul><p>接下来，对着不同错误做不同处理，就可以检测啦</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>直接放代码：  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">js</li></ul></figcaption><div class="tabs-content"><figure class="highlight js" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> request = <span class="title function_">fetch</span>(<span class="string">"https://www.google.com"</span>, {</span><br><span class="line">    <span class="attr">method</span>: <span class="string">"GET"</span>,</span><br><span class="line">    <span class="attr">body</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">'no-cors'</span></span><br><span class="line">})</span><br><span class="line">request.<span class="title function_">then</span>( <span class="function"><span class="params">res</span> =&gt;</span> { <span class="keyword">return</span> res.<span class="title function_">json</span>() })</span><br><span class="line">.<span class="title function_">catch</span>(<span class="function"><span class="params">e</span> =&gt;</span> { </span><br><span class="line">    <span class="keyword">if</span> (e <span class="keyword">instanceof</span> <span class="title class_">SyntaxError</span>){ <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'Google OK'</span>)} </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (e <span class="keyword">instanceof</span> <span class="title class_">TypeError</span>) { <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'Google Failed'</span>)} </span><br><span class="line">    <span class="keyword">else</span> {<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'Unknown Error:'</span> + e)}</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure></div></figure><p>如果请求成功，控制台输出 Google OK，如果失败，输出 Google Failed  </p><p>这段代码可以在浏览器里面跑，也可以使用 Node.js 运行</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;在浏览器或-Node-js-中使用-JavaScript-的-Fetch-测试网站连通性&quot;&gt;&lt;a href=&quot;#在浏览器或-Node-js-中使用-JavaScript-的-Fetch-测试网站连通性&quot; class=&quot;headerlink&quot; title=&quot;在浏览器或 Node.js 中使用 JavaScript 的 Fetch 测试网站连通性&quot;&gt;&lt;/a&gt;在浏览器或 Node.js 中使用 JavaScript 的 Fetch 测试网站连通性&lt;br&gt;</summary>
    
    
    
    <category term="JS" scheme="https://www.mbrjun.cn/categories/JS/"/>
    
    
    <category term="JavaScript" scheme="https://www.mbrjun.cn/tags/JavaScript/"/>
    
    <category term="fetch" scheme="https://www.mbrjun.cn/tags/fetch/"/>
    
    <category term="GFW" scheme="https://www.mbrjun.cn/tags/GFW/"/>
    
  </entry>
  
  <entry>
    <title>入坑 maimai！</title>
    <link href="https://www.mbrjun.cn/archives/485/"/>
    <id>https://www.mbrjun.cn/archives/485/</id>
    <published>2023-05-07T15:40:11.000Z</published>
    <updated>2023-05-25T16:34:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>入坑 maimai でらっくす 啦（<br>4 月 29 日去摸了一下舞萌 DX 2022，5 月 13 日游到日本去摸了一下最新最热 maimai でらっくす FESTiVAL+  </p><span id="more"></span><p><img src="https://cos.mbrjun.cn/IMGS/2023/05/25/0cff3d76-b17e-434e-897f-2ca9dd537567.webp" alt="maimai INTERNET OVERDOSE EXPERT 10+ AAA 96.5669%"><br><img src="https://cos.mbrjun.cn/IMGS/2023/05/09/5b63ff96-34b9-4b8f-98bc-b346a34f1da0.webp" alt="maimai"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;入坑 maimai でらっくす 啦（&lt;br&gt;4 月 29 日去摸了一下舞萌 DX 2022，5 月 13 日游到日本去摸了一下最新最热 maimai でらっくす FESTiVAL+  &lt;/p&gt;</summary>
    
    
    
    <category term="日常" scheme="https://www.mbrjun.cn/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="maimai" scheme="https://www.mbrjun.cn/tags/maimai/"/>
    
    <category term="maimaiDX" scheme="https://www.mbrjun.cn/tags/maimaiDX/"/>
    
    <category term="舞萌" scheme="https://www.mbrjun.cn/tags/%E8%88%9E%E8%90%8C/"/>
    
    <category term="舞萌DX" scheme="https://www.mbrjun.cn/tags/%E8%88%9E%E8%90%8CDX/"/>
    
  </entry>
  
  <entry>
    <title>Minecraft 或将停止在中国大陆的服务</title>
    <link href="https://www.mbrjun.cn/archives/484/"/>
    <id>https://www.mbrjun.cn/archives/484/</id>
    <published>2023-04-30T09:09:22.000Z</published>
    <updated>2023-04-30T09:09:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>本文中提到的所有 Minecraft 均指的是由 Microsoft Corporation 运营的一款游戏，与网易公司代理的游戏《我的世界》无关联</strong>  </p><p>近日部分中国玩家在自己的 Xbox 上打开 Minecraft 时收到了一条通知：「在您所在的地区内，我们即将无法支持此设备。」<br>Minecraft For Windows&#x2F;Xbox 现在也已经无法从中国大陆购买，这可能代表着 Minecraft 即将停止在中国大陆的服务  </p><span id="more"></span><hr><p>部分中国玩家在自己的 Xbox 上打开 Minecraft 时收到了这样的通知：</p><p><img src="https://cos.mbrjun.cn/IMGS/2023/04/30/1106cfa7-194e-41b4-a74f-835d8a302138.webp" alt="Xbox Minecraft End Support Warning in China"></p><p>该通知提到：最终版本发布后，您的地区<strong>无法再联网购买内容，但仍可下载已购项目或本地游玩</strong>，设备上的 <strong>Realm 服务器在 2023 年 9 月 30 日之后会停服</strong>  </p><p>目前只有 Xbox 用户收到此通知，Windows 玩家则未收到这个通知，但是这段提示已经可以在 Minecraft For Windows 的数据文件中找到：  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/04/30/6e0ee316-5b12-4af2-8593-f1697e1b07bb.webp" alt="Minecraft For Windows assets end support warning"></p><p>现在尝试在官网购买 Minecraft，如果你的 IP 地址在中国境内，付款时则会出现报错，无法购买（修改为繁体中文或其他语言可以购买），在官网查询 Minecraft 相关信息时，也出现了 502 报错：  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/04/30/1486e443-f8e8-4b25-90f8-811e6e45a409.webp" alt="Minecraft Official Website 502 Error in China"><br><img src="https://cos.mbrjun.cn/IMGS/2023/05/10/53e9b34c-dda2-496f-8e3c-b3a086dd2c08.webp" alt="Buy Minecraft in China"></p><p>Microsoft Store 目前也无法购买 Minecraft，但是已经购买 Minecraft 的玩家仍然可以下载，<strong>如果你担心未来无法正常更新 Minecraft，建议将 Microsoft 账户地区设置为中国大陆以外的地区</strong>  </p><p>虽然 Microsoft 尚未发出官方通知，但是根据 Xbox 上的提示以及游戏数据中的文字可以推测，国际版的 Minecraft 可能无法再在中国大陆更新了。  </p><p>此前，Microsoft&#x2F;Mojang 运营的 Minecraft 虽然可以在中国下载，但是未按照国家相关要求添加防沉迷等保护措施，而网易代理的《我的世界》遵守了这一规定，这可能是 Minecraft 发出此通知的一个原因。  </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;本文中提到的所有 Minecraft 均指的是由 Microsoft Corporation 运营的一款游戏，与网易公司代理的游戏《我的世界》无关联&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;近日部分中国玩家在自己的 Xbox 上打开 Minecraft 时收到了一条通知：「在您所在的地区内，我们即将无法支持此设备。」&lt;br&gt;Minecraft For Windows&amp;#x2F;Xbox 现在也已经无法从中国大陆购买，这可能代表着 Minecraft 即将停止在中国大陆的服务  &lt;/p&gt;</summary>
    
    
    
    <category term="游戏" scheme="https://www.mbrjun.cn/categories/%E6%B8%B8%E6%88%8F/"/>
    
    
    <category term="Minecraft" scheme="https://www.mbrjun.cn/tags/Minecraft/"/>
    
    <category term="我的世界" scheme="https://www.mbrjun.cn/tags/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C/"/>
    
    <category term="微软" scheme="https://www.mbrjun.cn/tags/%E5%BE%AE%E8%BD%AF/"/>
    
    <category term="Microsoft" scheme="https://www.mbrjun.cn/tags/Microsoft/"/>
    
  </entry>
  
  <entry>
    <title>Lowiro 推出 Arcaea 官方查分器</title>
    <link href="https://www.mbrjun.cn/archives/483/"/>
    <id>https://www.mbrjun.cn/archives/483/</id>
    <published>2023-04-29T03:57:01.000Z</published>
    <updated>2023-04-29T03:57:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>Lowiro 在 2023 年 4 月 27 日推出官方查分器 <strong>Arcaea Online</strong>（玩家称呼：Arcaea 小月卡），付费使用，目前的订阅价格为 200 MMR&#x2F;月<br>Lowiro 同时关闭了官方查分 API —— Arcaea Limited API，并对第三方的查分工具做出了一些限制  </p><span id="more"></span><hr><h2 id="v4-4-4-发布前"><a href="#v4-4-4-发布前" class="headerlink" title="v4.4.4 发布前"></a>v4.4.4 发布前</h2><p>Lowiro 在 Arcaea v4.4.4 版本发布的前一天（26 日）关闭了 Arcaea Limited API（简称 ALA）  </p><p>所有拥有 ALA 访问权限的开发者都会收到下面一条通知：  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">txt</li></ul></figcaption><div class="tabs-content"><figure class="highlight txt" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Dear Developer,</span><br><span class="line"></span><br><span class="line">We are writing to inform you that the Arcaea Limited API provided by lowiro will be formally sunset on the 26th April 2023.</span><br><span class="line">From April 26th 2023 00:00 GMT the service will be shut down permanently and you will no longer be able to make calls to any endpoints.</span><br><span class="line"></span><br><span class="line">We thank you very much for your use of the service and the tools you have created for the player community over the past years.</span><br><span class="line"></span><br><span class="line">Kind regards,</span><br><span class="line">lowiro - API Team</span><br></pre></td></tr></tbody></table></figure></div></figure><h2 id="v4-4-4"><a href="#v4-4-4" class="headerlink" title="v4.4.4"></a>v4.4.4</h2><p>Arcaea v4.4.4 发布后：</p><ul><li>Lowiro 修改了账号注册逻辑（现在需要做人机验证和邮箱验证了，以前是不需要的，直接使用用户名+邮箱+密码就可以注册，我手上还有个之前注册过的 <a href="mailto:&#x6c;&#x6f;&#x40;&#119;&#x69;&#46;&#x72;&#111;">&#x6c;&#x6f;&#x40;&#119;&#x69;&#46;&#x72;&#111;</a>）  </li><li>Lowiro 推出官方查分 Arcaea Online</li><li>Lowiro 开始对第三方的查分做出了一些限制（禁止用于查分的账号获取排行榜信息）</li></ul><p>目前，Arcaea 只（？）能通过官方工具 或 Excel 表格查分</p><h2 id="Arcaea-Online"><a href="#Arcaea-Online" class="headerlink" title="Arcaea Online"></a>Arcaea Online</h2><p>Arcaea Online 是 Lowiro 推出的一个服务，该服务部分功能是免费的，而部分功能（如查分）则需要付费  </p><p>免费功能：</p><ul><li>查看你账号的搭档信息（等级，FRAG，STEP，OVER）</li><li>查看世界总分排行榜</li></ul><p>付费功能：</p><ul><li>查询游玩过的曲目分数信息（也就是单曲查分）</li><li>查看好友总分排行榜</li><li>查看 PTT 近一年的变化</li><li>查询游玩单曲 PTT 最高的 30 个谱面，并可生成图片（也就是 B30 查分）</li></ul><p>付费订阅需要在网页上购买，价格为 200 MMR&#x2F;月，约合 12 CNY&#x2F;月  </p><h2 id="玩家社区争论"><a href="#玩家社区争论" class="headerlink" title="玩家社区争论"></a>玩家社区争论</h2><p>Lowiro 推出官方付费查分并限制第三方免费查分这一行为，在玩家社区引起了很多争论  </p><ul><li><blockquote><p>616让一位画师为他们画一幅“616正在宣传新开发的官方查分工具”。收到画时，却看到画上只有一个被打上禁止符号的QQ机器人符号和一群看着正在叫骂的人。<br>616不解的问：“这个符号是啥意思”画师答道：“是被封杀的民间b30bot”。又问：“那这群人呢？”“是因为以上操作而愤怒的玩家们”<br>“那616呢？”<br>“616正在宣传新开发的官方查分工具”</p></blockquote></li><li><blockquote><p>上联：雷亚ai曲绘碰不可碰之滑梯<br>下联：616心胸狭隘关闭查分接口<br>横批：世嘉飞妈</p></blockquote></li><li><blockquote><p>从 Arcaea Online 公布起我就在相关动向。说实在的，查分不是什么“没有了它会严重影响游戏体验”的功能；为这功能支付每月 200 mmr 其实也就是点个蜜雪冰城外卖的钱，确实不贵。</p><p>问题在于，对玩家公开的细节不够透明暂且不论，你们给出的功能也只是原本玩家社区自己都能搞定的东西（官方公布的功能里只有一个“查看完整世界榜”此前没有替代品）——先不论这些东西是否值 200 mmr：你们一定要等社区自己想办法做好了饭，这个饭大伙儿都吃习惯了，然后把饭勺抢过来，昭告大家请支持我们的官方服务吗？</p><p>哪怕你们在用户体验这块做点新尝试，例如把查分直接集成进游戏里，或者在游戏内把在玩家水平范围内且有助提升 PTT 的曲子标记出来，大家的反应可能都不至于如此。</p><p>再说价格。对比其他游戏：</p><ul><li><p>maimai 日服的官方网站提供一项付费服务：每天可以额外多玩 1 Track、游戏和网站内展示 Rating 对象曲、在世界排名的基础上可以查看地区和店内排名、赠送一个称号。价格是 330 日元每月，折合不超过 250 mmr。</p></li><li><p>osu! Supporter 的价格是 USD 4.00 每月，比 Arcaea 的贵一倍；但它提供丰富的额外权益，例如好友和地区排名、方便的谱面下载和检索、更多谱面上传槽位等。而且即使不订阅，也可以查看 osu 的全球排行和自身排名，pp 等个人游玩数据更是在个人资料页即可直接查看。</p></li><li><p>DJMAX 通行证的首发价是每季度 RMB 42.5，折合人民币不到每月 14.2 元，与 Arcaea 的价格相近。它提供了通行证 Premium 档位的装扮和皮肤奖励；重要的是，它还允许玩家在多人游戏中游玩房主选择的你尚未拥有的曲子——包括 DLC 的几百首付费乐曲。</p></li></ul><p>虽然我之前说了，Arcaea Online 这个价格不贵，但相比上述其他游戏提供的权益，这真的能说值得吗？</p><p>我只想表达一件事：希望 616 能认真斟酌增值服务的内容和价格。我非常喜欢 Arcaea 带给我的独一无二的游玩体验，我也认可 616 在内容产出上付出的努力；正因如此，我才对 Arcaea Online 这一既无诚意又无相匹配内容的订阅服务感到失望。</p><p>这笔钱我还是会先交一个月，就当一如既往地支持你们并为群友们试水了。希望 616 未来能让玩家真正心甘情愿地订阅你们的服务。</p></blockquote></li><li><blockquote><p>紧紧紧紧紧（钙先生手头比较紧张<br>谨谨谨谨谨（钙先生小心谨慎地想着如何骗钱<br>禁禁禁禁禁（想到可以禁止bot垄断查分渠道<br>仅仅仅仅仅（查分的渠道仅剩下arcol<br>襟襟襟襟襟（玩家们泣下沾襟<br>烬烬烬烬烬（bot开发者的努力化为灰烬<br>金金金金金<br>进进进进进（巨大多金币狂暴鸿儒钙先生钱包</p></blockquote></li></ul><p><img src="https://cos.mbrjun.cn/IMGS/2023/04/29/64cf38f2-b5cc-4bcc-8f4d-6d0db2e4c93a.webp" alt="Arcaea"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Lowiro 在 2023 年 4 月 27 日推出官方查分器 &lt;strong&gt;Arcaea Online&lt;/strong&gt;（玩家称呼：Arcaea 小月卡），付费使用，目前的订阅价格为 200 MMR&amp;#x2F;月&lt;br&gt;Lowiro 同时关闭了官方查分 API —— Arcaea Limited API，并对第三方的查分工具做出了一些限制  &lt;/p&gt;</summary>
    
    
    
    <category term="游戏" scheme="https://www.mbrjun.cn/categories/%E6%B8%B8%E6%88%8F/"/>
    
    
    <category term="音游" scheme="https://www.mbrjun.cn/tags/%E9%9F%B3%E6%B8%B8/"/>
    
    <category term="Arcaea" scheme="https://www.mbrjun.cn/tags/Arcaea/"/>
    
    <category term="Lowiro" scheme="https://www.mbrjun.cn/tags/Lowiro/"/>
    
    <category term="查分器" scheme="https://www.mbrjun.cn/tags/%E6%9F%A5%E5%88%86%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>更新 Umami 至 v2</title>
    <link href="https://www.mbrjun.cn/archives/482/"/>
    <id>https://www.mbrjun.cn/archives/482/</id>
    <published>2023-04-20T12:11:58.000Z</published>
    <updated>2023-04-20T12:11:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>Umami 是一款注重隐私的网站访客统计工具，对标 Google Analytics  </p><p>简单写一下 Umami 大版本升级（v1 到 v2）的教程<br>Umami v2 有很多破坏性更改，自己更新的时候遇到了一些坑，所以自己整理一下升级教程</p><span id="more"></span><blockquote><p>这不是官方教程，官方教程（英文）可以在<a href="https://umami.is/docs/migrate-v1-v2">这里</a>找到</p></blockquote><hr><p><strong>升级前请确认你正在运行最新版本的 v1(v1.4.0)，否则升级时会报错</strong>  </p><p>另外，强烈建议在升级之前备份数据库，如果数据库 dump 文件大于 50 MB，数据库更新可能需要几分钟才能完成  </p><h2 id="关闭旧版本"><a href="#关闭旧版本" class="headerlink" title="关闭旧版本"></a>关闭旧版本</h2><p>首先先把 Umami 旧版本关掉，如果你 Umami 是 systemd 自启，就用：  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop umami</span><br></pre></td></tr></tbody></table></figure></div></figure> <h2 id="升级数据库"><a href="#升级数据库" class="headerlink" title="升级数据库"></a>升级数据库</h2><p>在更新程序版本前要升级数据库，在 umami 目录输入下面的命令即可：  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx @umami/migrate-v1-v2@latest</span><br></pre></td></tr></tbody></table></figure></div></figure><p>如果你卡在了 <code>reify:prisma: http fetch GET 200</code> 这个步骤，并不用担心升级出现了问题，只是程序在下载文件而已  </p><p>（中国大陆下载升级 prisma 大概会消耗半个多小时时间，也可能会更久， prisma 下载文件的地址是写死的，这意味着你改了 npm 注册表（镜像）也没有一点用，但是你可以设置一个 <code>HTTPS_PROXY</code> 变量来让他走代理）  </p><p>升级好之后会问你要不要删除旧的数据表，输入 <code>y</code> 或者 <code>n</code> 就行  </p><h2 id="更新前准备"><a href="#更新前准备" class="headerlink" title="更新前准备"></a>更新前准备</h2><p>先检查一下自己的 Umami 配置文件（<code>.env</code>）有没有设置自定义 JS 名称（<code>TRACKER_SCRIPT_NAME</code>）  </p><p>更新 v2.2.0 之后，你需要在这个脚本名后加个 <code>.js</code> 才能正常跑，如果你原来是这样：  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">env</li></ul></figcaption><div class="tabs-content"><figure class="highlight plaintext" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TRACKER_SCRIPT_NAME=delightful</span><br></pre></td></tr></tbody></table></figure></div></figure><p>那么就改成：</p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">env</li></ul></figcaption><div class="tabs-content"><figure class="highlight plaintext" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TRACKER_SCRIPT_NAME=delightful.js</span><br></pre></td></tr></tbody></table></figure></div></figure><h2 id="更新-Umami"><a href="#更新-Umami" class="headerlink" title="更新 Umami"></a>更新 Umami</h2><p>先 stash 掉目前的更改，然后更新 Git 存储库：</p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br><span class="line">git pull --rebase</span><br></pre></td></tr></tbody></table></figure></div></figure><p>Git 更新完成后，还要更新 node 软件包：</p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn install</span><br></pre></td></tr></tbody></table></figure></div></figure><p>然后就是构建 Umami：</p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn build</span><br></pre></td></tr></tbody></table></figure></div></figure><p>构建时候可能会在 <code>Saved geo database</code> 卡很久，也可能遇到下面的报错，大意是 GeoIP 数据库下载失败：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">tracker/index.js → public/script.js...<br>created public/script.js in 572ms<br>$ node scripts/build-geo.js<br>node:events:491<br>      throw er; // Unhandled &#x27;error&#x27; event<br>      ^<br><br>Error: connect ETIMEDOUT 185.199.111.133:443<br>    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1278:16)<br></code></pre></td></tr></table></figure><p>一般只有中国大陆会出现这个问题，解决的方法就是在另一台网络正常的机器下载 GeoIP 数据库（GeoLite2-City），文件大概有 70 MB，下载完成后上传到服务器 umami 安装目录下面的 <code>geo/</code> 目录，重命名为 <code>GeoLite2-City.mmdb</code>  </p><p>当然，配置代理也是 OK 的，但是 GeoIP 数据库下载时不看系统代理变量，只能自己想办法配置 <code>iptables</code> 了  </p><p>如果你没直接报错退出，一直卡在 <code>Saved geo database</code>，其实也可以慢慢等，大概等个半小时也能下载完  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/04/28/4cfff234-4be9-416a-8b41-6ca2434d3165.webp" alt="Download GeoIP database"></p><h2 id="配置端口"><a href="#配置端口" class="headerlink" title="配置端口"></a>配置端口</h2><p>如果需要修改运行端口，修改 <code>package.json</code>，在第 15 行 <code>start</code> 后面加上 <code>-p 端口号</code>：</p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">json</li></ul></figcaption><div class="tabs-content"><figure class="highlight json" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">"start"</span><span class="punctuation">:</span> <span class="string">"next start -p 53019"</span><span class="punctuation">,</span></span><br></pre></td></tr></tbody></table></figure></div></figure><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>输入 <code>yarn start</code> 后，Umami 应该就可以正常启动了，如果发现无法正常统计，尝试清除一下网页缓存就可以  </p><p>如果你 Umami 是 systemd 自启，就用下面的命令启动  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start umami</span><br></pre></td></tr></tbody></table></figure></div></figure> ]]></content>
    
    
    <summary type="html">&lt;p&gt;Umami 是一款注重隐私的网站访客统计工具，对标 Google Analytics  &lt;/p&gt;
&lt;p&gt;简单写一下 Umami 大版本升级（v1 到 v2）的教程&lt;br&gt;Umami v2 有很多破坏性更改，自己更新的时候遇到了一些坑，所以自己整理一下升级教程&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://www.mbrjun.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="umami" scheme="https://www.mbrjun.cn/tags/umami/"/>
    
    <category term="统计脚本" scheme="https://www.mbrjun.cn/tags/%E7%BB%9F%E8%AE%A1%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>Linux 6.1 被选为 LTS 内核</title>
    <link href="https://www.mbrjun.cn/archives/481/"/>
    <id>https://www.mbrjun.cn/archives/481/</id>
    <published>2023-04-16T14:20:03.000Z</published>
    <updated>2023-04-16T14:20:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>近日 Linux 内核版本 6.1 被选为 LTS（”longterm maintenance”，长期维护）内核，计划维护四年，同时 Linux LTS 内核版本 5.15 的维护时间被延长三年  </p><span id="more"></span><h3 id="Longterm-release-kernels"><a href="#Longterm-release-kernels" class="headerlink" title="Longterm release kernels"></a>Longterm release kernels</h3><table><thead><tr><th>Version</th><th>Maintainer</th><th>Released</th><th>Projected EOL</th></tr></thead><tbody><tr><td>6.1</td><td>Greg Kroah-Hartman &amp; Sasha Levin</td><td>2022-12-11</td><td>Dec, 2026</td></tr><tr><td>5.15</td><td>Greg Kroah-Hartman &amp; Sasha Levin</td><td>2021-10-31</td><td>Oct, 2026</td></tr><tr><td>5.10</td><td>Greg Kroah-Hartman &amp; Sasha Levin</td><td>2020-12-13</td><td>Dec, 2026</td></tr><tr><td>5.4</td><td>Greg Kroah-Hartman &amp; Sasha Levin</td><td>2019-11-24</td><td>Dec, 2025</td></tr><tr><td>4.19</td><td>Greg Kroah-Hartman &amp; Sasha Levin</td><td>2018-10-22</td><td>Dec, 2024</td></tr><tr><td>4.14</td><td>Greg Kroah-Hartman &amp; Sasha Levin</td><td>2017-11-12</td><td>Jan, 2024</td></tr></tbody></table><blockquote><p>sourced from <a href="https://kernel.org/category/releases.html">kernel.org</a></p></blockquote><ul><li>6.1 版本将提供四年的长期维护，预计维护至 2026 年 12 月</li><li>5.15 版本维护时间延长三年，预计维护至 2026 年 10 月</li></ul><hr><p>对比 Linux 5.15 版本，Linux 6.1 带来了 <strong>Rust</strong> 语言的支持，提高了 <strong>BtrFS</strong> 文件系统的性能，支持使用 <strong>zstd</strong> 压缩内核，并且修复了 Intel I225 等系列网卡可能导致 <strong>Kernel Panic</strong> 的问题  </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;近日 Linux 内核版本 6.1 被选为 LTS（”longterm maintenance”，长期维护）内核，计划维护四年，同时 Linux LTS 内核版本 5.15 的维护时间被延长三年  &lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://www.mbrjun.cn/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://www.mbrjun.cn/tags/Linux/"/>
    
    <category term="kernel" scheme="https://www.mbrjun.cn/tags/kernel/"/>
    
  </entry>
  
  <entry>
    <title>Windows 11 22H2 现已支持 TCP BBR</title>
    <link href="https://www.mbrjun.cn/archives/479/"/>
    <id>https://www.mbrjun.cn/archives/479/</id>
    <published>2023-04-12T14:07:48.000Z</published>
    <updated>2023-04-12T14:07:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>Windows 11 22H2 现已支持 TCP BBR 拥塞控制。若想用 BBR 拥塞控制取代默认的 Cubic 拥塞控制，请在终端中输入下面的命令：  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">pwsh</li></ul></figcaption><div class="tabs-content"><figure class="highlight pwsh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">netsh int tcp <span class="built_in">set</span> supplemental Template=Internet CongestionProvider=bbr2</span><br><span class="line">netsh int tcp <span class="built_in">set</span> supplemental Template=Datacenter CongestionProvider=bbr2</span><br><span class="line">netsh int tcp <span class="built_in">set</span> supplemental Template=Compat CongestionProvider=bbr2</span><br><span class="line">netsh int tcp <span class="built_in">set</span> supplemental Template=DatacenterCustom CongestionProvider=bbr2</span><br><span class="line">netsh int tcp <span class="built_in">set</span> supplemental Template=InternetCustom CongestionProvider=bbr2</span><br></pre></td></tr></tbody></table></figure></div></figure> <span id="more"></span><p>在 Powershell 中使用下面的命令来查看当前使用的 TCP 拥塞控制：  </p><figure class="codeblock codeblock--tabbed"><figcaption><ul class="tabs"><li class="tab active">pwsh</li></ul></figcaption><div class="tabs-content"><figure class="highlight pwsh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Get-NetTCPSetting</span> | <span class="built_in">Select</span> SettingName, CongestionProvider</span><br></pre></td></tr></tbody></table></figure></div></figure> <p><img src="https://cos.mbrjun.cn/IMGS/2023/04/12/fc4bf2f5-5aa5-410a-bda4-11824c88359c.webp" alt="Windows Cubic TCP CC"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Windows 11 22H2 现已支持 TCP BBR 拥塞控制。若想用 BBR 拥塞控制取代默认的 Cubic 拥塞控制，请在终端中输入下面的命令：  &lt;/p&gt;
&lt;figure class=&quot;codeblock codeblock--tabbed&quot;&gt;&lt;figcaption&gt;&lt;ul class=&quot;tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;pwsh&lt;/li&gt;&lt;/ul&gt;&lt;/figcaption&gt;&lt;div class=&quot;tabs-content&quot;&gt;&lt;figure class=&quot;highlight pwsh&quot; style=&quot;display: block;&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;netsh int tcp &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; supplemental Template=Internet CongestionProvider=bbr2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;netsh int tcp &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; supplemental Template=Datacenter CongestionProvider=bbr2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;netsh int tcp &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; supplemental Template=Compat CongestionProvider=bbr2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;netsh int tcp &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; supplemental Template=DatacenterCustom CongestionProvider=bbr2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;netsh int tcp &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; supplemental Template=InternetCustom CongestionProvider=bbr2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="操作系统" scheme="https://www.mbrjun.cn/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="TCP" scheme="https://www.mbrjun.cn/tags/TCP/"/>
    
    <category term="Win11" scheme="https://www.mbrjun.cn/tags/Win11/"/>
    
    <category term="BBR" scheme="https://www.mbrjun.cn/tags/BBR/"/>
    
    <category term="Windows" scheme="https://www.mbrjun.cn/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>初中化学常见物质分子质量</title>
    <link href="https://www.mbrjun.cn/archives/478/"/>
    <id>https://www.mbrjun.cn/archives/478/</id>
    <published>2023-04-10T11:34:47.000Z</published>
    <updated>2023-04-10T11:34:47.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="酸根-x2F-铵根-x2F-氢氧根"><a href="#酸根-x2F-铵根-x2F-氢氧根" class="headerlink" title="酸根&#x2F;铵根&#x2F;氢氧根"></a>酸根&#x2F;铵根&#x2F;氢氧根</h2><table><thead><tr><th>化学式</th><th>相对分子质量</th><th>化学式</th><th>相对分子质量</th></tr></thead><tbody><tr><td><strong>NO<sub>3</sub><sup>-</sup></strong></td><td>62</td><td><strong>SO<sub>4</sub><sup>2-</sup></strong></td><td>96</td></tr><tr><td><strong>OH<sup>-</sup></strong></td><td>17</td><td><strong>PO<sub>4</sub><sup>3-</sup></strong></td><td>95</td></tr><tr><td><strong>CO<sub>3</sub><sup>2-</sup></strong></td><td>60</td><td><strong>NH<sub>4</sub><sup>+</sup></strong></td><td>18</td></tr></tbody></table><span id="more"></span><h2 id="八大沉淀"><a href="#八大沉淀" class="headerlink" title="八大沉淀"></a>八大沉淀</h2><table><thead><tr><th>化学式</th><th>相对分子质量</th><th>化学式</th><th>相对分子质量</th></tr></thead><tbody><tr><td><strong>BaSO<sub>4</sub></strong></td><td>233</td><td><strong>CaCO<sub>3</sub></strong></td><td>100</td></tr><tr><td><strong>AgCl</strong></td><td>143.5</td><td><strong>Mg(OH)<sub>2</sub></strong></td><td>58</td></tr><tr><td><strong>BaCO<sub>3</sub></strong></td><td>197</td><td><strong><font color=blue>Cu(OH)<sub>2</sub></font></strong></td><td>98</td></tr><tr><td><strong>Ag<sub>2</sub>CO<sub>3</sub></strong></td><td>276</td><td><strong><font color=red>Fe(OH)<sub>3</sub></font></strong></td><td>107</td></tr></tbody></table><h2 id="制氧气-x2F-氢气-x2F-二氧化碳"><a href="#制氧气-x2F-氢气-x2F-二氧化碳" class="headerlink" title="制氧气&#x2F;氢气&#x2F;二氧化碳"></a>制氧气&#x2F;氢气&#x2F;二氧化碳</h2><table><thead><tr><th>化学式</th><th>相对分子质量</th><th>化学式</th><th>相对分子质量</th></tr></thead><tbody><tr><td><strong>2KMnO<sub>4</sub></strong></td><td>316</td><td><strong>Zn</strong></td><td>65</td></tr><tr><td><strong>K<sub>2</sub>MnO<sub>4</sub></strong></td><td>197</td><td><strong>H<sub>2</sub>SO<sub>4</sub></strong></td><td>98</td></tr><tr><td><strong>MnO<sub>2</sub></strong></td><td>87</td><td><strong>ZnSO<sub>4</sub></strong></td><td>161</td></tr><tr><td><strong>2KClO<sub>3</sub></strong></td><td>245</td><td><strong>CaCO<sub>3</sub></strong></td><td>100</td></tr><tr><td><strong>2KCl</strong></td><td>78</td><td><strong>2HCl</strong></td><td>73</td></tr><tr><td><strong>H<sub>2</sub>O<sub>2</sub></strong></td><td>34</td><td><strong>CaCl<sub>2</sub></strong></td><td>111</td></tr></tbody></table><h2 id="碳的化合物-x2F-碳酸盐"><a href="#碳的化合物-x2F-碳酸盐" class="headerlink" title="碳的化合物&#x2F;碳酸盐"></a>碳的化合物&#x2F;碳酸盐</h2><table><thead><tr><th>化学式</th><th>相对分子质量</th><th>化学式</th><th>相对分子质量</th></tr></thead><tbody><tr><td><strong>CO<sub>2</sub></strong></td><td>44</td><td><strong>BaCO<sub>3</sub></strong></td><td>197</td></tr><tr><td><strong>CO</strong></td><td>28</td><td><strong>K<sub>2</sub>CO<sub>3</sub></strong></td><td>138</td></tr><tr><td><strong>CaCO<sub>3</sub></strong></td><td>100</td><td><strong>NaHCO<sub>3</sub></strong></td><td>84</td></tr><tr><td><strong>Na<sub>2</sub>CO<sub>3</sub></strong></td><td>106</td><td></td><td></td></tr></tbody></table><h2 id="其他常见无机物"><a href="#其他常见无机物" class="headerlink" title="其他常见无机物"></a>其他常见无机物</h2><ul><li>未列出可以直接用试卷开头给的<strong>金属质量</strong>和上文的<a href="#%E9%85%B8%E6%A0%B9-x2F-%E9%93%B5%E6%A0%B9-x2F-%E6%B0%A2%E6%B0%A7%E6%A0%B9"><strong>酸根质量</strong></a>去计算</li></ul><table><thead><tr><th>化学式</th><th>相对分子质量</th><th>化学式</th><th>相对分子质量</th></tr></thead><tbody><tr><td><strong>NaOH</strong></td><td>40</td><td><strong>Ca(OH)<sub>2</sub></strong></td><td>74</td></tr><tr><td><strong>NaCl</strong></td><td>58</td><td><strong>Na<sub>2</sub>SO<sub>4</sub></strong></td><td>142</td></tr><tr><td><strong>2NaCl</strong></td><td>116</td><td><strong>CuO</strong></td><td>80</td></tr></tbody></table><h2 id="有机物"><a href="#有机物" class="headerlink" title="有机物"></a>有机物</h2><table><thead><tr><th>化学式</th><th>相对分子质量</th><th>化学式</th><th>相对分子质量</th></tr></thead><tbody><tr><td><strong>C<sub>2</sub>H<sub>5</sub>OH</strong></td><td>46</td><td><strong>CH<sub>3</sub>COOH</strong></td><td>60</td></tr><tr><td><strong>C<sub>6</sub>H<sub>12</sub>O<sub>6</sub></strong></td><td>180</td><td><strong>CH<sub>4</sub></strong></td><td>16</td></tr></tbody></table><hr><h2 id="End"><a href="#End" class="headerlink" title="End"></a>End</h2><p>本文仅为作者整理自用，如有错误欢迎指出修改  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/04/10/0ee9c61f-68c1-4ce6-b108-13b547af1008.webp" alt="硫酸铜"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;酸根-x2F-铵根-x2F-氢氧根&quot;&gt;&lt;a href=&quot;#酸根-x2F-铵根-x2F-氢氧根&quot; class=&quot;headerlink&quot; title=&quot;酸根&amp;#x2F;铵根&amp;#x2F;氢氧根&quot;&gt;&lt;/a&gt;酸根&amp;#x2F;铵根&amp;#x2F;氢氧根&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;化学式&lt;/th&gt;
&lt;th&gt;相对分子质量&lt;/th&gt;
&lt;th&gt;化学式&lt;/th&gt;
&lt;th&gt;相对分子质量&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;NO&lt;sub&gt;3&lt;/sub&gt;&lt;sup&gt;-&lt;/sup&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;62&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;SO&lt;sub&gt;4&lt;/sub&gt;&lt;sup&gt;2-&lt;/sup&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;96&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;OH&lt;sup&gt;-&lt;/sup&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;PO&lt;sub&gt;4&lt;/sub&gt;&lt;sup&gt;3-&lt;/sup&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;95&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;CO&lt;sub&gt;3&lt;/sub&gt;&lt;sup&gt;2-&lt;/sup&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;60&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;NH&lt;sub&gt;4&lt;/sub&gt;&lt;sup&gt;+&lt;/sup&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="化学" scheme="https://www.mbrjun.cn/categories/%E5%8C%96%E5%AD%A6/"/>
    
    
    <category term="化学" scheme="https://www.mbrjun.cn/tags/%E5%8C%96%E5%AD%A6/"/>
    
    <category term="初中化学" scheme="https://www.mbrjun.cn/tags/%E5%88%9D%E4%B8%AD%E5%8C%96%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Microsoft 365 E5 开发人员订阅大面积封号</title>
    <link href="https://www.mbrjun.cn/archives/477/"/>
    <id>https://www.mbrjun.cn/archives/477/</id>
    <published>2023-04-05T12:33:12.000Z</published>
    <updated>2023-04-05T12:33:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天（2023-04-05）下午，大量用户发帖反应自己的 Microsoft 365 E5 开发人员订阅被封禁，订阅被设置为过期状态，我自己的订阅也被封掉了</p><span id="more"></span><p>订阅被封禁后没有任何邮件&#x2F;短信通知，有人认为导致订阅被封禁的原因是使用了<strong>自动续期脚本</strong>来续费订阅，也有人认为封禁和<strong>微软训练 AI</strong> 有关。 </p><p><strong>5 月 22 日补充：一个月以后发邮件通知了：</strong></p><blockquote><p>Warning: Your Microsoft 365 trial developer subscription expired on 4&#x2F;5&#x2F;2023 (UTC) due to lack of development activity.<br>• Subscription ID: (org).onmicrosoft.com<br>Your administrator access, your subscription, and all your data will be deleted on 6&#x2F;4&#x2F;2023 (UTC).</p></blockquote><p>各大论坛上发帖反应订阅被封的用户有的使用了续费脚本，有的并没有使用续费脚本仍被封号，还有一些用户使用了续费脚本，却没有被封  </p><p>目前估计已有至少 1000 人订阅被封禁（过期），而且知名 Microsoft 365 E5 自动订阅程序的开发者 <a href="https://qyi.io/">Qyi 的 Blog</a> 也无法打开，提示 SSL Handshake Error（发稿时已恢复正常，可能是因为访问量过大，服务器超载）  </p><hr><p>如果你有 Microsoft 365 E5 开发人员订阅，<strong>请立即检查你的订阅状态：</strong></p><ul><li><a href="https://developer.microsoft.com/en-us/microsoft-365/profile">使用个人账户登陆开发者控制台</a></li><li>或者 <a href="https://admin.microsoft.com/Adminportal/Home?source=applauncher#/subscriptions">使用子号（企业号）访问订阅管理页面</a></li></ul><p>如果显示你的账号<strong>已过期</strong>或者<strong>两天内过期</strong>，就是被封禁订阅了，被封禁后会有下面的提示：  </p><blockquote><p>你的 Microsoft 365 E5 Developer (without Windows and Audio Conferencing) Trial 已过期。  </p></blockquote><blockquote><p>This subscription expired in Apr 5, 2023</p></blockquote><p><img src="https://cos.mbrjun.cn/IMGS/2023/04/05/5e939bc4-e963-4cbf-b5b8-be37ee6fbfe0.webp" alt="Microsoft 365 E5 开发人员订阅被封"></p><hr><p>被封禁后，如果你的账号有重要数据，请立刻将数据备份到安全的地方，订阅封禁后，你的数据还会被<strong>保留一个月</strong>，如果你实在没有办法转移数据，可以去看看 <a href="https://www.mover.io/">mover.io</a> 这样的网盘对拷网站（谨慎使用对拷，因为使用对拷也可能导致目标账号被封）  </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天（2023-04-05）下午，大量用户发帖反应自己的 Microsoft 365 E5 开发人员订阅被封禁，订阅被设置为过期状态，我自己的订阅也被封掉了&lt;/p&gt;</summary>
    
    
    
    <category term="日常" scheme="https://www.mbrjun.cn/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="Office" scheme="https://www.mbrjun.cn/tags/Office/"/>
    
    <category term="微软" scheme="https://www.mbrjun.cn/tags/%E5%BE%AE%E8%BD%AF/"/>
    
    <category term="Microsoft" scheme="https://www.mbrjun.cn/tags/Microsoft/"/>
    
    <category term="Office365" scheme="https://www.mbrjun.cn/tags/Office365/"/>
    
    <category term="Microsoft365" scheme="https://www.mbrjun.cn/tags/Microsoft365/"/>
    
    <category term="OfficeE5" scheme="https://www.mbrjun.cn/tags/OfficeE5/"/>
    
  </entry>
  
  <entry>
    <title>为自己的域名配置 Microsoft 365 邮件服务</title>
    <link href="https://www.mbrjun.cn/archives/476/"/>
    <id>https://www.mbrjun.cn/archives/476/</id>
    <published>2023-03-30T11:33:37.000Z</published>
    <updated>2023-04-05T07:26:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用 Microsoft 365 订阅来搭建自定义域名邮箱，配置好域名邮箱之后，就可以使用自己域名后缀的邮箱来发送邮件了<br>教程同样适用于 Microsoft 365 开发者订阅，也就是 E5  </p><span id="more"></span><hr><h2 id="0x01-准备"><a href="#0x01-准备" class="headerlink" title="0x01 准备"></a>0x01 准备</h2><ul><li>Microsoft 工作或学校账户（需要全局管理员权限）</li><li>一个域名（需要能修改 DNS 记录）</li></ul><h2 id="0x02-绑定域名"><a href="#0x02-绑定域名" class="headerlink" title="0x02 绑定域名"></a>0x02 绑定域名</h2><ul><li>先打开 <a href="https://admin.microsoft.com/Adminportal/Home?source=applauncher#/Domains">Microsoft 365 后台 - 设置 - 域</a>，点击<code>添加域</code>，输入域名并进行验证<br>按照 Microsoft 后台的说明添加验证记录  <table><thead><tr><th>主机名</th><th>类型</th><th>值</th><th>优先级</th><th>TTL</th></tr></thead><tbody><tr><td><code>@</code></td><td>TXT</td><td><code>MS=msXXXXXXXX</code></td><td></td><td><code>1</code> 天（<code>86400</code> 秒）</td></tr></tbody></table>不同 Microsoft 账号记录值不同，注意修改</li><li>接下来，Microsoft 后台会提示你添加 DNS 记录，我们需要先勾选上 <strong>Exchange 和 Exchange Online Protection</strong>，然后按照网页说明再添加一波  <table><thead><tr><th>主机名</th><th>类型</th><th>值</th><th>优先级</th><th>TTL</th></tr></thead><tbody><tr><td><code>@</code></td><td>MX</td><td><code>mbr-moe.mail.protection.outlook.com</code></td><td><code>0</code></td><td><code>1</code> 天（<code>86400</code> 秒）</td></tr><tr><td><code>@</code></td><td>SPF 或 TXT</td><td><code>v=spf1 include:spf.protection.outlook.com -all</code></td><td></td><td><code>1</code> 天（<code>86400</code> 秒）</td></tr><tr><td><code>autodiscover</code></td><td>CNAME 或 ALIAS</td><td><code>autodiscover.outlook.com</code></td><td></td><td><code>1</code> 天（<code>86400</code> 秒）</td></tr></tbody></table>不同 Microsoft 账号 MX 记录值不同，注意修改<br>MX 记录用于声明往你的域名发送的邮件应该发给 Microsoft 的服务器，SPF 记录用来证明“以你域名的身份发送的邮件 是你信任的服务器发出的”，最后一条 CNAME 记录是部分电子邮件客户端自动配置时使用的</li></ul><h2 id="0x03-为账户绑定邮箱"><a href="#0x03-为账户绑定邮箱" class="headerlink" title="0x03 为账户绑定邮箱"></a>0x03 为账户绑定邮箱</h2><ul><li>打开 <a href="https://admin.microsoft.com/Adminportal/Home?source=applauncher#/users">Microsoft 365 后台 - 用户 - 活跃用户</a></li><li>为所有需要使用邮件服务的用户执行下面的操作：<ul><li>找到用户名右侧的修改密码（钥匙）按键，右边有三个点，点击那三个点（<code>更多操作</code>）</li><li>点击<code>管理用户名和电子邮件</code></li><li><code>主电子邮件地址和用户名</code> 改为你想要的默认收发邮箱，修改完需要重新登录</li><li>如果需要多个收发邮箱，就在下面继续添加 <img src="https://cos.mbrjun.cn/IMGS/2023/03/31/9868eead-68c7-4759-84d6-548509017236.webp"></li><li><blockquote><p>注 1：其他收发邮箱（默认邮箱以外的绑定邮箱，下文简称 ALIAS）大多数邮件客户端都不能直接发信（发件人列表只有默认邮箱），但 ALIAS 其实是可以 SMTP 的（登录凭据写默认邮箱，<code>From: </code> 指定 ALIAS 即可）；</p></blockquote></li><li><blockquote><p>注 2：Microsoft 365 组织内人员互相发送邮件，即使你使用 ALIAS，对方收件时会显示发件人为你的默认邮箱，如果你发给组织内成员的 ALIAS，对方邮件客户端会显示自己的主邮箱收到邮件（组织内 你：ALIAS &gt; ALIAS 收件人： 主 &gt; 主）；组织外其他人（指不使用你域名的邮箱，例如 Gmail 用户）向你的 ALIAS 发送邮件，你的客户端会显示是主邮箱收到邮件（组织外 发件人： 对方 &gt; ALIAS 你： 对方 &gt; 主）；你通过 SMTP 使用 ALIAS 给组织外其他人发送邮件，对方客户端会显示你的 ALIAS 发信（组织外 你：ALIAS &gt; 对方 收件人： ALIAS &gt; 对方）；抄送也适用于以上规则，当作收件人就好</p></blockquote></li></ul></li></ul><h2 id="0x04-配置-DKIM-签名"><a href="#0x04-配置-DKIM-签名" class="headerlink" title="0x04 配置 DKIM 签名"></a>0x04 配置 DKIM 签名</h2><p>DKIM 是一种验证邮件是否由你发送的方法，它依赖于公钥加密来验证而不仅仅是 IP 地址，所以 DKIM 被认为是比 SPF 更强大的验证形式。配置 DKIM 签名可增强安全性，并防止邮件<strong>误判</strong>进入垃圾箱  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/04/03/28f93b4c-97e7-4309-acc4-fd0d2e0e3377.webp" alt="DKIM"><br>SPF 失败后，DKIM 成功，邮件仍能正常传递  </p><ul><li>打开 <a href="https://security.microsoft.com/dkimv2">Microsoft 365 Defender - DKIM</a></li><li>点击<em>你的域名</em></li><li>点击 <code>创建 DKIM 密钥</code></li><li>打开上方开关，添加 DNS 记录<table><thead><tr><th>主机名</th><th>类型</th><th>值</th><th>优先级</th><th>TTL</th></tr></thead><tbody><tr><td><code>selector1._domainkey</code></td><td>CNAME</td><td>selector1-mbr-moe._domainkey.mbrstudio.onmicrosoft.com</td><td></td><td>86400</td></tr><tr><td><code>selector2._domainkey</code></td><td>CNAME</td><td>selector2-mbr-moe._domainkey.mbrstudio.onmicrosoft.com</td><td></td><td>86400</td></tr></tbody></table>记录值包含了组织注册时的邮箱（不可更改）以及你的域名</li><li><blockquote><p>注 3：组织内人员互相发送邮件，邮件不会被 DKIM 签名</p></blockquote></li></ul><h2 id="0x05-配置-DMARC"><a href="#0x05-配置-DMARC" class="headerlink" title="0x05 配置 DMARC"></a>0x05 配置 DMARC</h2><p>DMARC 也是一种验证邮件的方法，在配置 DMARC 之前，建议先配置好 SPF 和 DKIM  </p><p>配置 DMARC 也需要添加一条 DNS TXT 记录，这个记录你可以使用生成器产生，也可以手写，以下是我的邮箱域名 mbr.moe 的 DMARC 记录  </p><table><thead><tr><th>主机名</th><th>类型</th><th>值</th><th>优先级</th><th>TTL</th></tr></thead><tbody><tr><td><code>_dmarc</code></td><td>TXT</td><td><code>v=DMARC1; p=reject; sp=reject; pct=100; ruf=mailto:dmarc@mbr.moe; rua=mailto:dmarc@mbr.moe; fo=0:1:d:s; rf=afrf; ri=604800; aspf=s; adkim=s</code></td><td></td><td>86400</td></tr></tbody></table><p>DMARC 的参数和注意事项可以看 <strong>Cymetrics Tech Blog</strong> 的一篇文章： <a href="https://tech-blog.cymetrics.io/posts/crystal/email-sec-settings-dkimdmarc/#dmarc">關於 email security 的大小事 — 設定篇 DKIM、DMARC</a>  </p><h2 id="0x06-收信配置"><a href="#0x06-收信配置" class="headerlink" title="0x06 收信配置"></a>0x06 收信配置</h2><p>配置好邮箱服务器基本设置后，接下来看看如何收信  </p><p>Microsoft 365 邮件服务支持了常见的邮件协议，比如 IMAP、POP 和 <strong>E</strong>xchange <strong>A</strong>ctive<strong>S</strong>ync(EAS)，也可以使用 Outlook 网页版登录    </p><h3 id="IMAP-x2F-POP3"><a href="#IMAP-x2F-POP3" class="headerlink" title="IMAP&#x2F;POP3"></a>IMAP&#x2F;POP3</h3><p>先来讲一下 IMAP&#x2F;POP3 协议的登陆方法  </p><p>使用 IMAP&#x2F;POP3 登陆时，邮件客户端一般需要你指定服务器和一些其他信息，在你的邮件客户端上填入以下信息即可：</p><ul><li>用户名：<em>填写你的默认邮箱</em></li><li>密码：<em>填写你 Microsoft 账户的密码</em></li><li>服务器：<code>outlook.office365.com</code></li><li>端口号：IMAP <code>993</code> POP <code>995</code></li><li>需要 SSL&#x2F;TLS</li><li>SMTP 配置：详见 <a href="#smtp">SMTP 发信配置</a></li></ul><p>配置好这些信息后保存，就可以正常收信了</p><h3 id="EAS"><a href="#EAS" class="headerlink" title="EAS"></a>EAS</h3><p>使用 EAS 登录邮箱不会很复杂，登陆时输入用户名和密码验证即可，输入完成后，你的邮件客户端还会打开一个网页，提示你进行授权，而且使用 EAS 登陆是可以使用 2FA 验证的，也许可以提高一些账户安全性  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/04/05/ecdd7f91-fbbf-4da1-99b0-9e89b7007a51.webp"></p><h3 id="Outlook-网页版"><a href="#Outlook-网页版" class="headerlink" title="Outlook 网页版"></a>Outlook 网页版</h3><p>登录这个网址即可 <a href="https://outlook.office365.com/mail/">https://outlook.office365.com/mail/</a>  </p><h2 id="0x07-发信配置"><a href="#0x07-发信配置" class="headerlink" title="0x07 发信配置"></a>0x07 发信配置</h2><p>除了收信，发信也是很重要的，Microsoft 365 支持使用 SMTP、EAS 或者 Outlook 网页版发信  </p><h3 id="SMTP"><a href="#SMTP" class="headerlink" title="SMTP"></a>SMTP</h3><p>SMTP 配置可能有些复杂，因为 Microsoft 账户默认是不允许发信的，需要先给账号开启 SMTP 功能，还需要关闭<em>安全默认值</em>  </p><ul><li>打开 <a href="https://admin.microsoft.com/Adminportal/Home?source=applauncher#/users">Microsoft 365 后台 - 用户 - 活跃用户</a></li><li>为所有需要使用邮件服务的用户执行下面的操作：<ul><li>点击用户的显示名称</li><li>点击 <code>邮件</code></li><li>点击 <code>管理电子邮件应用</code></li><li>勾上 <code>SMTP</code>，保存</li><li><img src="https://cos.mbrjun.cn/IMGS/2023/04/05/de82ad2b-ce01-47c1-928b-7a4c49eebee1.webp"></li></ul></li><li>打开 <a href="https://entra.microsoft.com/#view/Microsoft_AAD_IAM/TenantOverview.ReactView?Microsoft_AAD_IAM_legacyAADRedirect=true">Azure Active Directory Legacy</a><ul><li>点击<code>属性</code>(<code>Properties</code>)-<code>管理安全默认值</code>(<code>Manage security defaults</code>)</li><li>禁用安全默认值，保存</li></ul></li></ul><p>然后就可以用 SMTP 发信了，SMTP 发信信息填写：</p><ul><li>用户名：<em>填写你的默认邮箱</em></li><li><code>From:</code> 标头：<em>可以是默认邮箱，也可以是 ALIAS</em><ul><li>部分客户端无法指定 From 标头</li></ul></li><li>密码：<em>填写你 Microsoft 账户的密码</em></li><li>服务器：<code>smtp.office365.com</code></li><li>端口号：<code>587</code></li><li>需要 STARTTLS</li></ul><h3 id="EAS-Sending"><a href="#EAS-Sending" class="headerlink" title="EAS(Sending)"></a>EAS(Sending)</h3><p>EAS 同时支持发信和收信，因此不需要额外配置，配置好<a href="#eas">收信</a>就可以了  </p><p>EAS 发信，<code>From: </code>标头默认是你 Microsoft 账户的名字</p><h3 id="Outlook-网页版-sending"><a href="#Outlook-网页版-sending" class="headerlink" title="Outlook 网页版(sending)"></a>Outlook 网页版(sending)</h3><p>同样不需要额外配置，配置好<a href="#outlook-%E7%BD%91%E9%A1%B5%E7%89%88">收信</a>就可以了</p><h2 id="0x08-功能设置"><a href="#0x08-功能设置" class="headerlink" title="0x08 功能设置"></a>0x08 功能设置</h2><p>邮箱的部分功能（例如发件人白名单）需要进入 <a href="#outlook-%E7%BD%91%E9%A1%B5%E7%89%88">Outlook 网页版</a>配置，建议用电脑登录然后过一遍全部设置，看看有没有要改的</p><h2 id="0x09-常见错误"><a href="#0x09-常见错误" class="headerlink" title="0x09 常见错误"></a>0x09 常见错误</h2><p>列举一些常见的配置错误</p><h3 id="E535"><a href="#E535" class="headerlink" title="E535"></a>E535</h3><p>完整错误是 <code>535 5.7.139 Authentication unsuccessful, SmtpClientAuthentication is disabled for the Tenant. Visit https://aka.ms/smtp_auth_disabled for more information.</code></p><p>账号没有开启 SMTP，再看一遍<a href="#smtp">发信配置教程</a>  </p><h3 id="E554"><a href="#E554" class="headerlink" title="E554"></a>E554</h3><p>完整错误是 <code>554 5.2.252 SendAsDenied; neko@mbr.moe not allowed to send as MAILER-DAEMON@PVE.MBR</code></p><p>没有配置 <code>From:</code> 标头或者配置错误，Linux 容易出现此错误（未配置发件邮箱，直接使用了 <a href="mailto:&#114;&#111;&#x6f;&#x74;&#64;&#108;&#111;&#x63;&#97;&#108;&#x68;&#x6f;&#x73;&#x74;&#46;&#x6c;&#111;&#x63;&#97;&#x6c;&#100;&#111;&#x6d;&#x61;&#105;&#x6e;">&#114;&#111;&#x6f;&#x74;&#64;&#108;&#111;&#x63;&#97;&#108;&#x68;&#x6f;&#x73;&#x74;&#46;&#x6c;&#111;&#x63;&#97;&#x6c;&#100;&#111;&#x6d;&#x61;&#105;&#x6e;</a> 这样的邮箱）<br>配置发件人即可，Linux Postfix 可以按下面方法配置：  </p><p><code>/etc/postfix/main.cf</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">smtp_header_checks = pcre:/etc/postfix/headers<br></code></pre></td></tr></table></figure><p><code>/etc/postfix/headers</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">/^From:.*/ REPLACE From: MBRjun Device Notifications &lt;noreply-devices@mbr.moe&gt;<br></code></pre></td></tr></table></figure><p>然后在 <code>/etc/postfix/headers</code> 里面设置发件人信息就好，配置完成后，所有发出的邮件 <code>From:</code> 都会改写为你配置的邮箱  </p><h2 id="0x0A-测试"><a href="#0x0A-测试" class="headerlink" title="0x0A 测试"></a>0x0A 测试</h2><p>配置好之后就可以测试收发了：  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/04/05/f5ee828c-2523-4698-8d16-066fd20a7f80.webp"><br>正常发送邮件</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;使用 Microsoft 365 订阅来搭建自定义域名邮箱，配置好域名邮箱之后，就可以使用自己域名后缀的邮箱来发送邮件了&lt;br&gt;教程同样适用于 Microsoft 365 开发者订阅，也就是 E5  &lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://www.mbrjun.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Office" scheme="https://www.mbrjun.cn/tags/Office/"/>
    
    <category term="域名" scheme="https://www.mbrjun.cn/tags/%E5%9F%9F%E5%90%8D/"/>
    
    <category term="Office365" scheme="https://www.mbrjun.cn/tags/Office365/"/>
    
    <category term="邮箱" scheme="https://www.mbrjun.cn/tags/%E9%82%AE%E7%AE%B1/"/>
    
  </entry>
  
  <entry>
    <title>npm 抑制 deprecated 警告</title>
    <link href="https://www.mbrjun.cn/archives/475/"/>
    <id>https://www.mbrjun.cn/archives/475/</id>
    <published>2023-03-19T12:46:52.000Z</published>
    <updated>2023-03-19T12:46:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>Suppress <code>npm WARN deprecated</code> messages in <code>npm install</code>.</p><h2 id="我们在给项目安装依赖的时候，经常出现-npm-WARN-deprecated-警告，介绍几种-npm-隐藏弃用警告的方法（教程也适用于-yarn-和-pnpm-等-Node-js-包管理器）"><a href="#我们在给项目安装依赖的时候，经常出现-npm-WARN-deprecated-警告，介绍几种-npm-隐藏弃用警告的方法（教程也适用于-yarn-和-pnpm-等-Node-js-包管理器）" class="headerlink" title="我们在给项目安装依赖的时候，经常出现 npm WARN deprecated 警告，介绍几种 npm 隐藏弃用警告的方法（教程也适用于 yarn 和 pnpm 等 Node.js 包管理器）"></a>我们在给项目安装依赖的时候，经常出现 <code>npm WARN deprecated</code> 警告，介绍几种 <code>npm</code> 隐藏弃用警告的方法（教程也适用于 <code>yarn</code> 和 <code>pnpm</code> 等 Node.js 包管理器）<br><span id="more"></span></h2><p>如果一个 npm 包的维护者强烈希望用户将他的包升级到一个新版本，或者维护者不再维护这个包，那么他就可能将他的包（部分版本或所有版本）标记为<strong>弃用（deprecate）</strong><br>被标记为弃用的包在安装时会发出警告：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">npm WARN deprecated uuid@3.4.0: Please upgrade to version 7 or higher.  Older versions may use Math.random() in certain circumstances, which is known to be problematic.  See https://v8.dev/blog/math-random for details.<br></code></pre></td></tr></table></figure><p>如果你的项目直接依赖那个包，你可能会升级那个包来避免出现警告；<br>但如果那个包被间接依赖，你通常什么也做不了，只能等待包维护者处理，出现这种情况，您可能会想要隐藏弃用警告  </p><hr><p><strong>有这几种常见的方法来抑制 deprecated 警告：</strong>  </p><ul><li><a href="#%E8%AE%BE%E7%BD%AE-log-level">设置 Log Level</a><ul><li>优点：简单，而且可以直接对所有包生效</li><li>缺点：会同时隐藏项目中其他的警告，出错时不易调试</li></ul></li><li><a href="#%E4%BF%AE%E6%94%B9%E9%94%81%E6%96%87%E4%BB%B6">修改锁文件（lock-file）</a><ul><li>优点：只隐藏<strong>弃用</strong>警告，而且可以指定隐藏哪个包的警告</li><li>缺点：需要项目有锁文件</li></ul></li></ul><hr><h2 id="设置-Log-Level"><a href="#设置-Log-Level" class="headerlink" title="设置 Log Level"></a>设置 Log Level</h2><h3 id="方法一：一次性设置（只对本次安装生效）"><a href="#方法一：一次性设置（只对本次安装生效）" class="headerlink" title="方法一：一次性设置（只对本次安装生效）"></a>方法一：一次性设置（只对本次安装生效）</h3><p>使用 <code>--loglevel=error</code> 参数，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">npm i --loglevel=error<br></code></pre></td></tr></table></figure><p>也可以使用环境变量 <code>npm_config_loglevel=error</code>（需要注意，都是小写的），如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">npm_config_loglevel=error npm i<br></code></pre></td></tr></table></figure><h3 id="方法二：对一个项目生效"><a href="#方法二：对一个项目生效" class="headerlink" title="方法二：对一个项目生效"></a>方法二：对一个项目生效</h3><p>编辑项目 rc（run-command） 文件 <code>.npmrc</code>（也可能是 <code>.yarnrc</code>，取决于你使用的 Node.js 包管理器）文件（如果不存在，可以新建），设置 <code>loglevel</code>，例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">loglevel=error<br></code></pre></td></tr></table></figure><h3 id="方法三：全局生效"><a href="#方法三：全局生效" class="headerlink" title="方法三：全局生效"></a>方法三：全局生效</h3><p>编辑 <code>~/.bashrc</code> 文件（不同 shell 的 rc 文件名可能不同，你可能需要自行搜索你的 shell 的 rc 文件，在此就不细说，cmd.exe 不支持）<br>添加一行 <code>export</code> 命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> npm_config_loglevel=error<br></code></pre></td></tr></table></figure><p>此方法重启 shell 才会生效</p><hr><h2 id="修改锁文件"><a href="#修改锁文件" class="headerlink" title="修改锁文件"></a>修改锁文件</h2><ol><li><p>首先需要确认你的项目是否开启了锁文件，查看项目 rc（run-command） 文件 <code>.npmrc</code>（也可能是 <code>.yarnrc</code>，取决于你使用的 Node.js 包管理器）文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">package-lock=false<br></code></pre></td></tr></table></figure><p>如果项目没有 rc 文件，或 package-lock 不为 false，则说明<strong>锁文件在项目中启用</strong><br>如果出现了 <code>package-lock=false</code>，那么我们需要将 <code>false</code> 改为 <code>true</code></p></li><li><p>运行一次 <code>npm i</code><br>如果锁文件不存在&#x2F;数据不全，此操作会自动补全锁文件的数据  </p></li><li><p>查找锁文件<br>不同 Node.js 包管理器锁文件名称也不一样，可参考：</p><table><thead><tr><th>包管理器</th><th>锁文件</th></tr></thead><tbody><tr><td><code>npm</code></td><td><code>package-lock.json</code></td></tr><tr><td><code>yarn</code></td><td><code>yarn.lock</code></td></tr><tr><td><code>pnpm</code></td><td><code>pnpm-lock.yaml</code></td></tr></tbody></table></li><li><p>修改锁文件<br>搜索 <code>deprecate</code> 关键字：<br><img src="https://cos.mbrjun.cn/IMGS/2023/03/19/9b34fbc0-1738-4435-b4c0-29342c84d99d.png" alt="带有 deprecate 关键字的行"><br>我们可以看到所有被标记为弃用的包<br>若要隐藏一个包的弃用警告，将包名下带有 deprecate 关键字的行移除即可（如果是 <code>json</code> 格式，你可能还需要移除末尾逗号）</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;Suppress &lt;code&gt;npm WARN deprecated&lt;/code&gt; messages in &lt;code&gt;npm install&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;我们在给项目安装依赖的时候，经常出现-npm-WARN-deprecated-警告，介绍几种-npm-隐藏弃用警告的方法（教程也适用于-yarn-和-pnpm-等-Node-js-包管理器）&quot;&gt;&lt;a href=&quot;#我们在给项目安装依赖的时候，经常出现-npm-WARN-deprecated-警告，介绍几种-npm-隐藏弃用警告的方法（教程也适用于-yarn-和-pnpm-等-Node-js-包管理器）&quot; class=&quot;headerlink&quot; title=&quot;我们在给项目安装依赖的时候，经常出现 npm WARN deprecated 警告，介绍几种 npm 隐藏弃用警告的方法（教程也适用于 yarn 和 pnpm 等 Node.js 包管理器）&quot;&gt;&lt;/a&gt;我们在给项目安装依赖的时候，经常出现 &lt;code&gt;npm WARN deprecated&lt;/code&gt; 警告，介绍几种 &lt;code&gt;npm&lt;/code&gt; 隐藏弃用警告的方法（教程也适用于 &lt;code&gt;yarn&lt;/code&gt; 和 &lt;code&gt;pnpm&lt;/code&gt; 等 Node.js 包管理器）&lt;br&gt;</summary>
    
    
    
    <category term="JS" scheme="https://www.mbrjun.cn/categories/JS/"/>
    
    
    <category term="npm" scheme="https://www.mbrjun.cn/tags/npm/"/>
    
    <category term="nodejs" scheme="https://www.mbrjun.cn/tags/nodejs/"/>
    
    <category term="yarn" scheme="https://www.mbrjun.cn/tags/yarn/"/>
    
    <category term="pnpm" scheme="https://www.mbrjun.cn/tags/pnpm/"/>
    
    <category term="js" scheme="https://www.mbrjun.cn/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>甲型 H1N1 流感阳性</title>
    <link href="https://www.mbrjun.cn/archives/474/"/>
    <id>https://www.mbrjun.cn/archives/474/</id>
    <published>2023-03-02T10:02:21.000Z</published>
    <updated>2023-03-06T15:25:24.000Z</updated>
    
    <content type="html"><![CDATA[<!-- 取得 COVID-19 核酸检测结果后，本页面才会发布到网站 --><p><a href="https://www.mbrjun.cn/archives/468/">上次新冠阳性</a>三个月之后再次感染甲流，随便整理一下时间线  </p><span id="more"></span><hr><blockquote><p><img src="https://cos.mbrjun.cn/IMGS/2023/03/06/4b6335d0-ff42-41f9-b2cf-73e101b307cb.webp" alt="图源：中国疾控"><br>中国疾控：近3周流感病毒阳性检出率呈上升趋势，2023年第8周为25.1%。 浙江省疾控：流感以甲型H1N1流感为主，随着气温变暖，流行态势即将度过上升期，预计再过两周左右可能出现下降趋势。</p></blockquote><p>默认使用 <code>UTC+8</code> <code>中国标准时间</code> <code>CST</code> <code>Asia/Shanghai</code> 时区  </p><table><thead><tr><th>时间</th><th></th></tr></thead><tbody><tr><td><strong>2023 年 3 月</strong></td><td></td></tr><tr><td><strong>2 日</strong></td><td></td></tr><tr><td>2:00</td><td>莫名其妙的咳嗽，并没有在意</td></tr><tr><td>13:30</td><td>全身无力，但还是没有在意</td></tr><tr><td>14:30</td><td>好冷.png 感觉阳了</td></tr><tr><td>15:20</td><td>（校内体温检测）电子测温枪：<code>36.4°C</code></td></tr><tr><td></td><td>这玩意是真的不准 之前冬天在外面测能有 30°C 以下</td></tr><tr><td></td><td>死人的正常体温（确信）</td></tr><tr><td>15:25</td><td>（校内体温检测）水银体温计：<code>38.1°C</code></td></tr><tr><td>15:30</td><td>开离校单子了</td></tr><tr><td>15:45</td><td>出校门</td></tr><tr><td></td><td>这什么b学校 上课时间只有正门能出</td></tr><tr><td></td><td>1 小时内（即 15:00 - 15:45） 算上我有四个人离校了（思考）</td></tr><tr><td>16:18</td><td>（在家体温检测）水银体温计：<code>38.8°C</code></td></tr><tr><td>16:20</td><td>吃药</td></tr><tr><td>16:36</td><td>COVID-19 核酸检测</td></tr><tr><td>16:40</td><td>给某英国小作坊打了点钱</td></tr><tr><td>17:39</td><td>亲，</td></tr><tr><td></td><td>鉴于近期甲流病例增多，凡发热学生复课标准为体温恢复正常至少48小时以上，且没有明显流感样症状（如咳嗽、咽痛等），再提交复课申请（电子版）、新冠病毒核酸或抗原阴性，经准予后方可复课！感谢您的支持和把控！</td></tr><tr><td>23:42</td><td>起床了（</td></tr><tr><td><strong>3 日</strong></td><td></td></tr><tr><td>0:04</td><td>COVID-19 核酸结果：阴性</td></tr><tr><td>13:20</td><td>去医院了</td></tr><tr><td>13:27</td><td>检测花费 603.31 CNY</td></tr><tr><td></td><td>医保支付 23.32 CNY</td></tr><tr><td></td><td>原始 626.63 CNY</td></tr><tr><td>14:53</td><td>甲流抗原：阳性</td></tr><tr><td></td><td>乙流抗原：阴性</td></tr><tr><td>17:05</td><td>购药花费 239.48 CNY</td></tr><tr><td></td><td>医保支付 183.95 CNY</td></tr><tr><td></td><td>原始 423.43 CNY</td></tr><tr><td></td><td>就那个叫<em>玛巴洛沙韦片</em>的药，一片 111 CNY 多点</td></tr><tr><td><strong>6 日</strong></td><td></td></tr><tr><td></td><td>不发烧了</td></tr><tr><td><strong>7 日</strong></td><td></td></tr><tr><td>12:32</td><td>甲乙流新冠：阴性</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;!-- 取得 COVID-19 核酸检测结果后，本页面才会发布到网站 --&gt;
&lt;p&gt;&lt;a href=&quot;https://www.mbrjun.cn/archives/468/&quot;&gt;上次新冠阳性&lt;/a&gt;三个月之后再次感染甲流，随便整理一下时间线  &lt;/p&gt;</summary>
    
    
    
    <category term="疫情" scheme="https://www.mbrjun.cn/categories/%E7%96%AB%E6%83%85/"/>
    
    
    <category term="COVID-19" scheme="https://www.mbrjun.cn/tags/COVID-19/"/>
    
    <category term="疫情" scheme="https://www.mbrjun.cn/tags/%E7%96%AB%E6%83%85/"/>
    
    <category term="流感" scheme="https://www.mbrjun.cn/tags/%E6%B5%81%E6%84%9F/"/>
    
    <category term="甲流" scheme="https://www.mbrjun.cn/tags/%E7%94%B2%E6%B5%81/"/>
    
    <category term="H1N1" scheme="https://www.mbrjun.cn/tags/H1N1/"/>
    
  </entry>
  
  <entry>
    <title>在 RHEL/CentOS 7 上安装 vnstat</title>
    <link href="https://www.mbrjun.cn/archives/473/"/>
    <id>https://www.mbrjun.cn/archives/473/</id>
    <published>2023-02-25T06:04:30.000Z</published>
    <updated>2023-02-25T08:37:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>vnstat 是一个监控网络流量使用的命令行工具，大多数发行版都可以使用包管理器轻松安装 vnstat，但是 RHEL&#x2F;CentOS 7 有着极为稳定且老旧的运行库，最新版 vnstat 只能通过手动编译的方法安装</p><span id="more"></span><blockquote><p><img src="https://cos.mbrjun.cn/IMGS/2023/02/25/20a5b52c-d8c6-479b-8143-c85888cb74b2.webp" alt="vnstat"></p></blockquote><hr><h2 id="较新版本的-RHEL-系发行版"><a href="#较新版本的-RHEL-系发行版" class="headerlink" title="较新版本的 RHEL 系发行版"></a>较新版本的 RHEL 系发行版</h2><p><code>RHEL 8/9</code>（也包括 <code>CentOS 8</code>、<code>CentOS Stream 8/9</code>、仍在支持的 <code>Fedora</code>、以及各大云厂商魔改的 RHEL） 应该不需要这个教程，因为 EPEL 会自动为这些发行版提供新版本的 vnstat  </p><p>如果你使用较新版本的 RHEL 系发行版，直接使用这个命令安装： <code>dnf install vnstat</code>  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/02/25/8e8346dd-279a-4ad8-a0af-012747fabbeb.png" alt="RHEL 8"></p><p>在 <code>RHEL/CentOS 7</code> 或者老版本的 RHEL 系发行版安装 vnstat，就只能采取手动编译的方法了<br>（包管理器仍然可以下载安装，但是版本十分老旧，缺少很多新功能，数据库格式也和新版本有很大差别）<br>（不建议更改软件源。这个操作可能会炸掉你系统其他的包）  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/02/25/1c484f23-8a23-4caf-b975-367226c2ab51.png" alt="RHEL 7"></p><hr><h2 id="一键命令"><a href="#一键命令" class="headerlink" title="一键命令"></a>一键命令</h2><p>不想看全文的，可以直接用这个命令解决：  </p><figure class="codeblock codeblock--tabbed"><figcaption><span>Last updated: 2023/02/25</span><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">yum install sudo wget tar gcc make gd gd-devel -y</span><br><span class="line">sudo <span class="built_in">mkdir</span> -p /tmp -m 777 &amp;&amp; <span class="built_in">cd</span> /tmp</span><br><span class="line">wget https://humdi.net/vnstat/vnstat-2.10.tar.gz</span><br><span class="line">tar xzf vnstat-2.10.tar.gz</span><br><span class="line"><span class="built_in">cd</span> vnstat-2.10</span><br><span class="line">./configure --prefix=/usr --sysconfdir=/etc</span><br><span class="line">make -j$(<span class="built_in">nproc</span>) &amp;&amp; sudo make install</span><br><span class="line">sudo <span class="built_in">cp</span> examples/systemd/vnstat.service /usr/lib/systemd/system</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> --now vnstat</span><br></pre></td></tr></tbody></table></figure></div></figure> <h2 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h2><h3 id="安装必要的依赖"><a href="#安装必要的依赖" class="headerlink" title="安装必要的依赖"></a>安装必要的依赖</h3><figure class="codeblock codeblock--tabbed"><figcaption><span>安装必要的依赖</span><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install sudo wget tar gcc make gd gd-devel</span><br></pre></td></tr></tbody></table></figure></div></figure> <p><code>gd gd-devel</code> 是可选依赖，如果你不需要 <code>vnstati</code> 就可以去掉这两个包  </p><h3 id="下载并解压"><a href="#下载并解压" class="headerlink" title="下载并解压"></a>下载并解压</h3><p>浏览器打开 <a href="https://humdi.net/vnstat/">vnstat 项目页面</a>  </p><p><img src="https://cos.mbrjun.cn/IMGS/2023/02/25/cb829c3b-51b7-4562-907a-3925bf7a12d5.png" alt="vnstat 项目页面"></p><p>复制下来稳定版源码的下载链接（你也可以使用 git 来获取源码）</p><figure class="codeblock codeblock--tabbed"><figcaption><span>下载并解压</span><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://humdi.net/vnstat/vnstat-2.10.tar.gz</span><br><span class="line"><span class="comment">#    ^ 替换为你复制的下载链接！</span></span><br><span class="line">tar xzf vnstat-2.10.tar.gz</span><br><span class="line"><span class="built_in">cd</span> vnstat-2.10</span><br></pre></td></tr></tbody></table></figure></div></figure> <h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><figure class="codeblock codeblock--tabbed"><figcaption><span>配置</span><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr --sysconfdir=/etc</span><br></pre></td></tr></tbody></table></figure></div></figure> <p>两个参数一个是安装目录，一个是配置文件目录  </p><figure class="codeblock codeblock--tabbed"><figcaption><span>编译安装</span><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make -j$(<span class="built_in">nproc</span>)</span><br><span class="line">sudo make install</span><br></pre></td></tr></tbody></table></figure></div></figure> <p>多线程编译并安装到设置的目录  </p><h3 id="自启动"><a href="#自启动" class="headerlink" title="自启动"></a>自启动</h3><h4 id="Systemd"><a href="#Systemd" class="headerlink" title="Systemd"></a>Systemd</h4><figure class="codeblock codeblock--tabbed"><figcaption><span>Systemd</span><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> examples/systemd/vnstat.service /usr/lib/systemd/system</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> --now vnstat</span><br></pre></td></tr></tbody></table></figure></div></figure> <h4 id="SysVinit-init-d"><a href="#SysVinit-init-d" class="headerlink" title="SysVinit(init.d)"></a>SysVinit(init.d)</h4><figure class="codeblock codeblock--tabbed"><figcaption><span>SysVinit(init.d)</span><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> examples/init.d/centos/vnstat /etc/init.d/myservice</span><br><span class="line">chkconfig --add vnstat</span><br></pre></td></tr></tbody></table></figure></div></figure> <span class="highlight-text danger">重启后生效</span><h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><figure class="codeblock codeblock--tabbed"><figcaption><span>卸载</span><ul class="tabs"><li class="tab active">sh</li></ul></figcaption><div class="tabs-content"><figure class="highlight sh" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr --sysconfdir=/etc</span><br><span class="line">sudo make uninstall</span><br></pre></td></tr></tbody></table></figure></div></figure> <p>和安装类似，两个参数一个是卸载目录，一个是将要删除的配置文件目录（如果目录非空，不会直接把你整个 &#x2F;etc 删掉的）</p><p>在编译目录（<code>/tmp/vnstat-2.10</code>）执行上面的命令即可，如果编译目录删除了，需要重新<a href="#%E4%B8%8B%E8%BD%BD%E5%B9%B6%E8%A7%A3%E5%8E%8B">下载解压</a>  </p><p>卸载不会自动删除数据库，你可以手动删除数据库（配置文件开头定义了数据库路径，默认是 <code>/var/lib/vnstat</code>）</p><h2 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h2><p>装完注意检查一下 <code>vnstat</code>、<code>vnstatd</code>、<code>vnstati</code> 的版本，之前遇到过 <code>vnstat</code> 和 <code>vnstatd</code> 版本不一致的问题，程序不工作，但是也没有任何报错  </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;vnstat 是一个监控网络流量使用的命令行工具，大多数发行版都可以使用包管理器轻松安装 vnstat，但是 RHEL&amp;#x2F;CentOS 7 有着极为稳定且老旧的运行库，最新版 vnstat 只能通过手动编译的方法安装&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://www.mbrjun.cn/categories/Linux/"/>
    
    
    <category term="vnstat" scheme="https://www.mbrjun.cn/tags/vnstat/"/>
    
    <category term="centos" scheme="https://www.mbrjun.cn/tags/centos/"/>
    
  </entry>
  
  <entry>
    <title>DNS-over-HTTP/3 和 DNS-over-QUIC 的区别</title>
    <link href="https://www.mbrjun.cn/archives/472/"/>
    <id>https://www.mbrjun.cn/archives/472/</id>
    <published>2023-02-01T03:36:45.000Z</published>
    <updated>2023-02-06T08:12:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>DNS-over-HTTP&#x2F;3 和 DNS-over-QUIC 两种协议都基于 UDP，且传输数据都经过 TLS 加密，但是这两种协议是完全不同的  </p><span id="more"></span><hr><h2 id="QUIC"><a href="#QUIC" class="headerlink" title="QUIC"></a>QUIC</h2><p>先来简单了解下 QUIC 协议：  </p><p>QUIC 和 TCP、UDP 一样，是传输层协议，不过 QUIC 协议是基于加密 UDP 的（使用 TLS 1.3 来加密），QUIC 还具有 TCP 的一些优点。  </p><h2 id="DNS-over-QUIC"><a href="#DNS-over-QUIC" class="headerlink" title="DNS-over-QUIC"></a>DNS-over-QUIC</h2><p>DNS-over-QUIC 是通过 QUIC 加密的 DNS 协议，有时会被简写为 DoQ，这个协议于 2022 年 5 月 发布为 <a href="https://datatracker.ietf.org/doc/rfc9250/">RFC 9250</a>，它比较类似 DNS-over-TLS，但是 DNS-over-QUIC 会比 DNS-over-TLS 更快一些      </p><p>curl 无法与 DNS-over-QUIC 服务器进行握手和数据交换，因为 DNS-over-QUIC 只是经过 QUIC 封装的原生 DNS，并不能处理 HTTP 请求。<br>尝试使用 curl 来连接 DNS-over-QUIC 服务器，得到的输出如下：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">$ curl https://dns.mbrjun.cn:784 --http3 -v<br>*   Trying 127.0.0.1:784...<br>* Connect socket 5 over QUIC to 127.0.0.1:784<br>*  CAfile: /etc/ssl/certs/ca-certificates.crt<br>*  CApath: none<br>* ngtcp2_conn_handle_expiry returned error: ERR_HANDSHAKE_TIMEOUT<br>* connect to 127.0.0.1 port 784 failed: Failed sending data to the peer<br>* Failed to connect to dns.mbrjun.cn port 784 after 10050 ms: Failed sending data to the peer<br>* Closing connection 0<br>curl: (55) ngtcp2_conn_handle_expiry returned error: ERR_HANDSHAKE_TIMEOUT<br><br></code></pre></td></tr></table></figure><p>可以看到 QUIC 套接字已经创建完成，但是服务器并不响应这个 HTTP 请求  </p><p>DNS-over-QUIC &#x3D; QUIC + DNS  </p><h2 id="DNS-over-HTTP-x2F-3"><a href="#DNS-over-HTTP-x2F-3" class="headerlink" title="DNS-over-HTTP&#x2F;3"></a>DNS-over-HTTP&#x2F;3</h2><p>DNS-over-HTTP&#x2F;3，有时也会被称作 DoH3，也是一种加密的 DNS 协议，这种协议在 Android 11 中通过增量更新得到了 Android 的原生支持  </p><p>DNS-over-HTTP&#x2F;3 使用 HTTP 作为传输层协议，本质上是 DNS-over-HTTPS 的一种：<br>DNS-over-HTTPS 允许使用 HTTP&#x2F;3、HTTP&#x2F;2、HTTP&#x2F;1.1、HTTP&#x2F;1.0、HTTP&#x2F;0.9 作为底层协议（实际上，只有前三种常被使用），而 DNS-over-HTTP&#x2F;3 是指使用 HTTP&#x2F;3 做底层协议的 DNS-over-HTTPS  </p><p>HTTP&#x2F;3 协议基于 QUIC，可以说 HTTP&#x2F;3 &#x3D; QUIC + HTTP  </p><p>DNS-over-HTTP&#x2F;3 &#x3D; QUIC + HTTP + DNS  </p><p>curl 可以和 DNS-over-HTTP&#x2F;3 服务器进行握手和数据交换，因为 DNS-over-HTTP&#x2F;3 是经过 QUIC 封装的 HTTP，在 HTTP 上提供 DNS 查询的功能，因此可以处理 HTTP 请求。<br>尝试使用 curl 来连接 DNS-over-HTTP&#x2F;3 服务器，得到的输出如下：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">$ curl https://dns.mbrjun.cn/dns-query --http3 -vI<br>*   Trying 127.0.0.1:443...<br>* Connect socket 5 over QUIC to 127.0.0.1:443<br>*  CAfile: /etc/ssl/certs/ca-certificates.crt<br>*  CApath: none<br>*  subjectAltName: host &quot;dns.mbrjun.cn&quot; matched cert&#x27;s &quot;*.mbrjun.cn&quot;<br>* Verified certificate just fine<br>* Connected to dns.mbrjun.cn (127.0.0.1) port 443 (#0)<br>* h2h3 [:method: HEAD]<br>* h2h3 [:path: /dns-query]<br>* h2h3 [:scheme: https]<br>* h2h3 [:authority: dns.mbrjun.cn]<br>* h2h3 [user-agent: curl/7.87.1-DEV-MBRjun]<br>* h2h3 [accept: */*]<br>* Using HTTP/3 Stream ID: 0 (easy handle 0x5612c27f71b0)<br>&gt; HEAD /dns-query HTTP/3<br>&gt; Host: dns.mbrjun.cn<br>&gt; user-agent: curl/7.87.1-DEV-MBRjun<br>&gt; accept: */*<br>&gt; <br>* ngh3_stream_recv returns 0 bytes and EAGAIN<br>* ngh3_stream_recv returns 0 bytes and EAGAIN<br>* ngh3_stream_recv returns 0 bytes and EAGAIN<br>&lt; HTTP/3 400 <br>HTTP/3 400 <br>&lt; (headers)<br>(headers)<br>...<br></code></pre></td></tr></table></figure><p>可以看到握手成功，服务器返回了 HTTP 状态码 400（这是正常的。为什么？因为 dns-query 没有提供 DNS 查询的参数，所以服务器返回了 Bad Request）  </p><h2 id="对比和总结"><a href="#对比和总结" class="headerlink" title="对比和总结"></a>对比和总结</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">DNS-over-QUIC = QUIC + DNS<br>DNS-over-HTTP/3 = QUIC + HTTP + DNS<br></code></pre></td></tr></table></figure><p>DoH3 比 DoQ 多了一层 HTTP 封装，因此可以使用类似 curl 的工具进行查询  </p><p>由于 DoH3 有一层 HTTP 封装，所以它在传输时会带上 Request Header 和 Response Header，这其中可能包含了 User-Agent 之类的信息，这种信息对于 DNS 来说通常是毫无作用的，理论上，<strong>DoH3 会比 DoQ 更慢</strong>，但实际上带来的影响是极其少的（可能只会慢个 1-2ms）  </p><p>端口号：DoQ 更类似于 DoT，通常使用端口号 443、784 和 853，而 DoH3 是 DoH 的一种，通常使用端口 443。  </p><p>兼容性：从 Android 11 开始，DoH3 得到了部分支持（谷歌设置了白名单，只有少数公共 DNS 服务器会启用 DoH3），从 iOS 15 （macOS Monterty）开始，Apple 设备支持了 DoQ（仅可通过 iCloud Private Relay 开启，不支持自定义服务器），现在 DoH3 的用户数量和 DoQ 的差不多  </p><hr><p>附：AdGuard <a href="https://adguard.com/zh_cn/blog/dns-over-quic.html">认为</a>使用 HTTP 作为传输层协议会引起很多不必要的风险，使用 HTTP 发送 DNS 请求会导致下列结果：</p><ul><li>HTTP cookies</li><li>其他 HTTP 消息头（HTTP headers）（包括 Authentication, User-Agent, Accept-Language）</li><li>给预谋犯更多机会</li><li>Tracking using ETag</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;DNS-over-HTTP&amp;#x2F;3 和 DNS-over-QUIC 两种协议都基于 UDP，且传输数据都经过 TLS 加密，但是这两种协议是完全不同的  &lt;/p&gt;</summary>
    
    
    
    <category term="网络" scheme="https://www.mbrjun.cn/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="DNS" scheme="https://www.mbrjun.cn/tags/DNS/"/>
    
    <category term="HTTP/3" scheme="https://www.mbrjun.cn/tags/HTTP-3/"/>
    
    <category term="QUIC" scheme="https://www.mbrjun.cn/tags/QUIC/"/>
    
  </entry>
  
  <entry>
    <title>iOS 16.3 RC (20D47) 更新内容</title>
    <link href="https://www.mbrjun.cn/archives/471/"/>
    <id>https://www.mbrjun.cn/archives/471/</id>
    <published>2023-01-19T05:35:00.000Z</published>
    <updated>2023-04-14T16:03:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天凌晨，苹果推送了 iOS 16.3 RC 更新，内部版本号为 20D47，正式版将于下周推送，写一下 iOS 16.3 的更新内容  </p><span id="more"></span><h2 id="高级数据保护"><a href="#高级数据保护" class="headerlink" title="高级数据保护"></a>高级数据保护</h2><p>端对端加密保护 iCloud 中的数据，现已在全球推出，这包括中国大陆  </p><p>开启此功能需要踢出所有老系统的设备（例如 iPhone 7，老版本 Windows iCloud），不会给你一个一键踢出的按钮<br><img src="https://cos.mbrjun.cn/IMGS/2023/01/19/xt.jpg"></p><p>开启此功能需要添加至少一种恢复方式（恢复联系人，恢复密钥），如果你设置了恢复密钥，还需要再次输入验证<br><img src="https://cos.mbrjun.cn/IMGS/2023/01/19/de.jpg"></p><p>高级数据保护开启后，如果你希望从 iCloud 网页访问你的数据，你必须在你的受信任设备进行授权（你的浏览器会给 Apple 发送 POST 请求，Apple 请求你的手机生成一个临时的解密密钥发送给浏览器）<br><img src="https://cos.mbrjun.cn/IMGS/2023/01/19/ze.jpg"><br><img src="https://cos.mbrjun.cn/IMGS/2023/01/19/re.jpg"></p><p>受信任设备需要解锁并联网，否则无法在网页访问数据<br><img src="https://cos.mbrjun.cn/IMGS/2023/01/19/zr.jpg"></p><p>开启此功能后，老系统不可再登陆该 ID（App Store 也不行）<br><img src="https://cos.mbrjun.cn/IMGS/2023/01/21/ix.jpg"></p><h2 id="新-Unity-壁纸"><a href="#新-Unity-壁纸" class="headerlink" title="新 Unity 壁纸"></a>新 Unity 壁纸</h2><p>纪念黑人历史和文化</p><h2 id="安全密钥-2FA"><a href="#安全密钥-2FA" class="headerlink" title="安全密钥 2FA"></a>安全密钥 2FA</h2><p>使用兼容 FIDO 的安全密钥代替受信任设备进行 2FA 验证，需要绑定 2 个安全密钥  </p><p>若开启此功能，需要踢出<strong>已登陆 Apple ID 但是超过 90 天不活跃的 Apple 设备</strong>（会给你个一键踢出的按钮）。 </p><p>开启此功能后，网页端可正常登陆验证，老系统同样不可再登陆该 ID（App Store 也不行）<br><img src="https://cos.mbrjun.cn/IMGS/2023/01/19/sj.jpg"></p><h2 id="HomePod-第二代支持"><a href="#HomePod-第二代支持" class="headerlink" title="HomePod 第二代支持"></a>HomePod 第二代支持</h2><h2 id="SOS-功能"><a href="#SOS-功能" class="headerlink" title="SOS 功能"></a>SOS 功能</h2><p>现在需要同时按住<strong>电源键</strong>和<strong>任意音量键</strong>才能触发紧急呼叫</p><h2 id="Bug-修复"><a href="#Bug-修复" class="headerlink" title="Bug 修复"></a>Bug 修复</h2><ul><li>无边记修复</li><li>修复锁屏壁纸显示不出来的 Bug</li><li>修复唤醒 iPhone 14 Pro Max 时出现横线的Bug</li><li>家庭 widget 锁屏 Bug 修复</li><li>Siri 播放音乐 Bug、CarPlay Bug</li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p><code>UPDATING_TEXT_IPHONE</code> 的 Bug 还没修  </p><ul><li>这段文本原来是 <em>iPhone will restart when update completes</em></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天凌晨，苹果推送了 iOS 16.3 RC 更新，内部版本号为 20D47，正式版将于下周推送，写一下 iOS 16.3 的更新内容  &lt;/p&gt;</summary>
    
    
    
    <category term="操作系统" scheme="https://www.mbrjun.cn/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="苹果" scheme="https://www.mbrjun.cn/tags/%E8%8B%B9%E6%9E%9C/"/>
    
    <category term="iPhone" scheme="https://www.mbrjun.cn/tags/iPhone/"/>
    
    <category term="iOS" scheme="https://www.mbrjun.cn/tags/iOS/"/>
    
    <category term="Apple" scheme="https://www.mbrjun.cn/tags/Apple/"/>
    
  </entry>
  
</feed>
